

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 30 16:02:46 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F25K50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  0020B4                     __pidataBANK0:
    98                           	opt callstack 0
    99                           
   100                           ;initializer for stoa@F1139
   101  0020B4  28                 	db	40
   102  0020B5  6E                 	db	110
   103  0020B6  75                 	db	117
   104  0020B7  6C                 	db	108
   105  0020B8  6C                 	db	108
   106  0020B9  29                 	db	41
   107  0020BA  00                 	db	0
   108                           
   109                           ;initializer for _name
   110  0020BB  53                 	db	83
   111  0020BC  45                 	db	69
   112  0020BD  4E                 	db	78
   113  0020BE  53                 	db	83
   114  0020BF  4F                 	db	79
   115  0020C0  52                 	db	82
   116  0020C1  00                 	db	0
   117  0020C2  00                 	db	0
   118  0020C3  00                 	db	0
   119  0020C4  00                 	db	0
   120  0020C5  00                 	db	0
   121  0020C6  00                 	db	0
   122  0020C7  00                 	db	0
   123  0020C8  00                 	db	0
   124  0020C9  00                 	db	0
   125  0020CA  00                 	db	0
   126  0020CB  00                 	db	0
   127  0020CC  00                 	db	0
   128  0020CD  00                 	db	0
   129  0020CE  00                 	db	0
   130  0020CF  00                 	db	0
   131  0020D0  00                 	db	0
   132  0020D1  00                 	db	0
   133  0020D2  00                 	db	0
   134  0020D3  00                 	db	0
   135  0020D4  00                 	db	0
   136  0020D5  00                 	db	0
   137  0020D6  00                 	db	0
   138  0020D7  00                 	db	0
   139  0020D8  00                 	db	0
   140  0020D9  00                 	db	0
   141  0020DA  00                 	db	0
   142  0020DB  00                 	db	0
   143  0020DC  00                 	db	0
   144  0020DD  00                 	db	0
   145  0020DE  00                 	db	0
   146  0020DF  00                 	db	0
   147  0020E0  00                 	db	0
   148  0020E1  00                 	db	0
   149  0020E2  00                 	db	0
   150  0020E3  00                 	db	0
   151  0020E4  00                 	db	0
   152  0020E5  00                 	db	0
   153  0020E6  00                 	db	0
   154  0020E7  00                 	db	0
   155  0020E8  00                 	db	0
   156  0020E9  00                 	db	0
   157  0020EA  00                 	db	0
   158  0020EB  00                 	db	0
   159  0020EC  00                 	db	0
   160                           
   161                           	psect	nvBANK0
   162  0000E2                     __pnvBANK0:
   163                           	opt callstack 0
   164  0000E2                     _og:
   165                           	opt callstack 0
   166  0000E2                     	ds	1
   167  0000                     _ANSELAbits	set	3931
   168  0000                     _ANSELA	set	3931
   169  0000                     _ANSELB	set	3932
   170  0000                     _ANSELC	set	3933
   171  0000                     _PORTBbits	set	3969
   172  0000                     _SSP1BUF	set	4041
   173  0000                     _SSP1CON1bits	set	4038
   174  0000                     _PMD1bits	set	3967
   175  0000                     _TXREG1	set	4013
   176  0000                     _IPR1bits	set	3999
   177  0000                     _PIE1bits	set	3997
   178  0000                     _RCONbits	set	4048
   179  0000                     _SPBRG1	set	4015
   180  0000                     _BAUDCON1bits	set	4024
   181  0000                     _RCSTA1bits	set	4011
   182  0000                     _TXSTA1bits	set	4012
   183  0000                     _TRISCbits	set	3988
   184  0000                     _TRISBbits	set	3987
   185  0000                     _TRISAbits	set	3986
   186  0000                     _PORTCbits	set	3970
   187  0000                     _RCREG1	set	4014
   188  0000                     _LATAbits	set	3977
   189  0000                     _PIR1bits	set	3998
   190  0000                     _ACTCON	set	4021
   191  0000                     _OSCTUNE	set	3995
   192  0000                     _OSCCON2	set	4050
   193  0000                     _OSCCON	set	4051
   194  0000                     _INTCONbits	set	4082
   195  0000                     _INTCON2bits	set	4081
   196  0000                     _WPUB	set	3973
   197  0000                     _TRISC	set	3988
   198  0000                     _TRISB	set	3987
   199  0000                     _TRISA	set	3986
   200  0000                     _LATC	set	3979
   201  0000                     _LATB	set	3978
   202  0000                     _LATA	set	3977
   203                           
   204                           	psect	smallconst
   205  000800                     __psmallconst:
   206                           	opt callstack 0
   207  000800  00                 	db	0
   208  000801                     STR_31:
   209  000801  63                 	db	99	;'c'
   210  000802  68                 	db	104	;'h'
   211  000803  61                 	db	97	;'a'
   212  000804  6E                 	db	110	;'n'
   213  000805  67                 	db	103	;'g'
   214  000806  65                 	db	101	;'e'
   215  000807  4E                 	db	78	;'N'
   216  000808  61                 	db	97	;'a'
   217  000809  6D                 	db	109	;'m'
   218  00080A  65                 	db	101	;'e'
   219  00080B  3A                 	db	58	;':'
   220  00080C  6E                 	db	110	;'n'
   221  00080D  61                 	db	97	;'a'
   222  00080E  6D                 	db	109	;'m'
   223  00080F  65                 	db	101	;'e'
   224  000810  41                 	db	65	;'A'
   225  000811  43                 	db	67	;'C'
   226  000812  4B                 	db	75	;'K'
   227  000813  0D                 	db	13
   228  000814  00                 	db	0
   229  000815                     STR_19:
   230  000815  47                 	db	71	;'G'
   231  000816  65                 	db	101	;'e'
   232  000817  6E                 	db	110	;'n'
   233  000818  65                 	db	101	;'e'
   234  000819  72                 	db	114	;'r'
   235  00081A  61                 	db	97	;'a'
   236  00081B  6C                 	db	108	;'l'
   237  00081C  20                 	db	32
   238  00081D  4B                 	db	75	;'K'
   239  00081E  65                 	db	101	;'e'
   240  00081F  6E                 	db	110	;'n'
   241  000820  6F                 	db	111	;'o'
   242  000821  62                 	db	98	;'b'
   243  000822  69                 	db	105	;'i'
   244  000823  0A                 	db	10
   245  000824  00                 	db	0
   246  000825                     STR_26:
   247  000825  63                 	db	99	;'c'
   248  000826  68                 	db	104	;'h'
   249  000827  61                 	db	97	;'a'
   250  000828  6E                 	db	110	;'n'
   251  000829  67                 	db	103	;'g'
   252  00082A  65                 	db	101	;'e'
   253  00082B  49                 	db	73	;'I'
   254  00082C  44                 	db	68	;'D'
   255  00082D  3A                 	db	58	;':'
   256  00082E  49                 	db	73	;'I'
   257  00082F  44                 	db	68	;'D'
   258  000830  41                 	db	65	;'A'
   259  000831  43                 	db	67	;'C'
   260  000832  4B                 	db	75	;'K'
   261  000833  0D                 	db	13
   262  000834  00                 	db	0
   263  000835                     STR_27:
   264  000835  63                 	db	99	;'c'
   265  000836  68                 	db	104	;'h'
   266  000837  61                 	db	97	;'a'
   267  000838  6E                 	db	110	;'n'
   268  000839  67                 	db	103	;'g'
   269  00083A  65                 	db	101	;'e'
   270  00083B  4E                 	db	78	;'N'
   271  00083C  61                 	db	97	;'a'
   272  00083D  6D                 	db	109	;'m'
   273  00083E  65                 	db	101	;'e'
   274  00083F  3A                 	db	58	;':'
   275  000840  00                 	db	0
   276  000841                     STR_18:
   277  000841  68                 	db	104	;'h'
   278  000842  65                 	db	101	;'e'
   279  000843  6C                 	db	108	;'l'
   280  000844  6C                 	db	108	;'l'
   281  000845  6F                 	db	111	;'o'
   282  000846  20                 	db	32
   283  000847  74                 	db	116	;'t'
   284  000848  68                 	db	104	;'h'
   285  000849  65                 	db	101	;'e'
   286  00084A  72                 	db	114	;'r'
   287  00084B  65                 	db	101	;'e'
   288  00084C  00                 	db	0
   289  00084D                     STR_23:
   290  00084D  63                 	db	99	;'c'
   291  00084E  68                 	db	104	;'h'
   292  00084F  61                 	db	97	;'a'
   293  000850  6E                 	db	110	;'n'
   294  000851  67                 	db	103	;'g'
   295  000852  65                 	db	101	;'e'
   296  000853  49                 	db	73	;'I'
   297  000854  44                 	db	68	;'D'
   298  000855  3A                 	db	58	;':'
   299  000856  00                 	db	0
   300  000857                     STR_14:
   301  000857  52                 	db	82	;'R'
   302  000858  65                 	db	101	;'e'
   303  000859  62                 	db	98	;'b'
   304  00085A  6F                 	db	111	;'o'
   305  00085B  6F                 	db	111	;'o'
   306  00085C  74                 	db	116	;'t'
   307  00085D  69                 	db	105	;'i'
   308  00085E  6E                 	db	110	;'n'
   309  00085F  67                 	db	103	;'g'
   310  000860  00                 	db	0
   311  000861                     STR_22:
   312  000861  74                 	db	116	;'t'
   313  000862  65                 	db	101	;'e'
   314  000863  6D                 	db	109	;'m'
   315  000864  70                 	db	112	;'p'
   316  000865  41                 	db	65	;'A'
   317  000866  43                 	db	67	;'C'
   318  000867  4B                 	db	75	;'K'
   319  000868  00                 	db	0
   320  000869                     STR_20:
   321  000869  67                 	db	103	;'g'
   322  00086A  65                 	db	101	;'e'
   323  00086B  74                 	db	116	;'t'
   324  00086C  54                 	db	84	;'T'
   325  00086D  65                 	db	101	;'e'
   326  00086E  6D                 	db	109	;'m'
   327  00086F  70                 	db	112	;'p'
   328  000870  00                 	db	0
   329  000871                     STR_1:
   330  000871  53                 	db	83	;'S'
   331  000872  74                 	db	116	;'t'
   332  000873  61                 	db	97	;'a'
   333  000874  72                 	db	114	;'r'
   334  000875  74                 	db	116	;'t'
   335  000876  0A                 	db	10
   336  000877  00                 	db	0
   337  000878                     STR_5:
   338  000878  53                 	db	83	;'S'
   339  000879  53                 	db	83	;'S'
   340  00087A  2C                 	db	44
   341  00087B  43                 	db	67	;'C'
   342  00087C  30                 	db	48	;'0'
   343  00087D  0D                 	db	13
   344  00087E  00                 	db	0
   345  00087F                     STR_21:
   346  00087F  25                 	db	37
   347  000880  64                 	db	100	;'d'
   348  000881  3A                 	db	58	;':'
   349  000882  25                 	db	37
   350  000883  69                 	db	105	;'i'
   351  000884  0D                 	db	13
   352  000885  00                 	db	0
   353  000886                     STR_17:
   354  000886  68                 	db	104	;'h'
   355  000887  65                 	db	101	;'e'
   356  000888  6C                 	db	108	;'l'
   357  000889  6C                 	db	108	;'l'
   358  00088A  6F                 	db	111	;'o'
   359  00088B  0D                 	db	13
   360  00088C  00                 	db	0
   361  00088D                     STR_13:
   362  00088D  52                 	db	82	;'R'
   363  00088E  2C                 	db	44
   364  00088F  31                 	db	49	;'1'
   365  000890  0D                 	db	13
   366  000891  00                 	db	0
   367  000892                     STR_30:
   368  000892  25                 	db	37
   369  000893  73                 	db	115	;'s'
   370  000894  25                 	db	37
   371  000895  64                 	db	100	;'d'
   372  000896  00                 	db	0
   373  000897                     STR_2:
   374  000897  24                 	db	36
   375  000898  24                 	db	36
   376  000899  24                 	db	36
   377  00089A  00                 	db	0
   378  00089B                     STR_8:
   379  00089B  53                 	db	83	;'S'
   380  00089C  2D                 	db	45
   381  00089D  2C                 	db	44
   382  00089E  00                 	db	0
   383  00089F                     STR_3:
   384  00089F  43                 	db	67	;'C'
   385  0008A0  4D                 	db	77	;'M'
   386  0008A1  44                 	db	68	;'D'
   387  0008A2  00                 	db	0
   388  0008A3                     STR_6:
   389  0008A3  41                 	db	65	;'A'
   390  0008A4  4F                 	db	79	;'O'
   391  0008A5  4B                 	db	75	;'K'
   392  0008A6  00                 	db	0
   393  0008A7                     STR_16:
   394  0008A7  68                 	db	104	;'h'
   395  0008A8  65                 	db	101	;'e'
   396  0008A9  79                 	db	121	;'y'
   397  0008AA  00                 	db	0
   398  0000                     
   399                           ; #config settings
   400  0008AB  00                 	db	0	; dummy byte at the end
   401  0000                     
   402                           	psect	cinit
   403  001EAE                     __pcinit:
   404                           	opt callstack 0
   405  001EAE                     start_initialization:
   406                           	opt callstack 0
   407  001EAE                     __initialization:
   408                           	opt callstack 0
   409                           
   410                           ; Initialize objects allocated to BANK0 (57 bytes)
   411                           ; load TBLPTR registers with __pidataBANK0
   412  001EAE  0EB4               	movlw	low __pidataBANK0
   413  001EB0  6EF6               	movwf	tblptrl,c
   414  001EB2  0E20               	movlw	high __pidataBANK0
   415  001EB4  6EF7               	movwf	tblptrh,c
   416  001EB6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   417  001EB8  6EF8               	movwf	tblptru,c
   418  001EBA  EE00  F060         	lfsr	0,__pdataBANK0
   419  001EBE  EE10 F039          	lfsr	1,57
   420  001EC2                     copy_data0:
   421  001EC2  0009               	tblrd		*+
   422  001EC4  CFF5 FFEE          	movff	tablat,postinc0
   423  001EC8  50E5               	movf	postdec1,w,c
   424  001ECA  50E1               	movf	fsr1l,w,c
   425  001ECC  E1FA               	bnz	copy_data0
   426                           
   427                           ; Clear objects allocated to BIGRAM (500 bytes)
   428  001ECE  EE01  F0B6         	lfsr	0,__pbssBIGRAM
   429  001ED2  EE11 F0F4          	lfsr	1,500
   430  001ED6                     clear_0:
   431  001ED6  6AEE               	clrf	postinc0,c
   432  001ED8  50E5               	movf	postdec1,w,c
   433  001EDA  50E1               	movf	fsr1l,w,c
   434  001EDC  E1FC               	bnz	clear_0
   435  001EDE  50E2               	movf	fsr1h,w,c
   436  001EE0  E1FA               	bnz	clear_0
   437                           
   438                           ; Clear objects allocated to BANK0 (48 bytes)
   439  001EE2  EE00  F099         	lfsr	0,__pbssBANK0
   440  001EE6  0E30               	movlw	48
   441  001EE8                     clear_1:
   442  001EE8  6AEE               	clrf	postinc0,c
   443  001EEA  06E8               	decf	wreg,f,c
   444  001EEC  E1FD               	bnz	clear_1
   445                           
   446                           ; Clear objects allocated to COMRAM (2 bytes)
   447  001EEE  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   448  001EF0  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   449  001EF2                     end_of_initialization:
   450                           	opt callstack 0
   451  001EF2                     __end_of__initialization:
   452                           	opt callstack 0
   453  001EF2  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   454  001EF4  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   455  001EF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   456  001EF8  6EF8               	movwf	tblptru,c
   457  001EFA  0100               	movlb	0
   458  001EFC  EFA9  F00F         	goto	_main	;jump to C main() function
   459                           
   460                           	psect	bssCOMRAM
   461  00005B                     __pbssCOMRAM:
   462                           	opt callstack 0
   463  00005B                     _drdy:
   464                           	opt callstack 0
   465  00005B                     	ds	1
   466  00005C                     _cycle:
   467                           	opt callstack 0
   468  00005C                     	ds	1
   469                           
   470                           	psect	bssBANK0
   471  000099                     __pbssBANK0:
   472                           	opt callstack 0
   473  000099                     _errno:
   474                           	opt callstack 0
   475  000099                     	ds	2
   476  00009B                     _nout:
   477                           	opt callstack 0
   478  00009B                     	ds	2
   479  00009D                     _width:
   480                           	opt callstack 0
   481  00009D                     	ds	2
   482  00009F                     _prec:
   483                           	opt callstack 0
   484  00009F                     	ds	2
   485  0000A1                     _flags:
   486                           	opt callstack 0
   487  0000A1                     	ds	2
   488  0000A3                     _ix:
   489                           	opt callstack 0
   490  0000A3                     	ds	2
   491  0000A5                     _ID:
   492                           	opt callstack 0
   493  0000A5                     	ds	2
   494  0000A7                     _debug:
   495                           	opt callstack 0
   496  0000A7                     	ds	1
   497  0000A8                     _status:
   498                           	opt callstack 0
   499  0000A8                     	ds	1
   500  0000A9                     _dbuf:
   501                           	opt callstack 0
   502  0000A9                     	ds	32
   503                           
   504                           	psect	dataBANK0
   505  000060                     __pdataBANK0:
   506                           	opt callstack 0
   507  000060                     stoa@F1139:
   508                           	opt callstack 0
   509  000060                     	ds	7
   510  000067                     _name:
   511                           	opt callstack 0
   512  000067                     	ds	50
   513                           
   514                           	psect	bssBIGRAM
   515  0001B6                     __pbssBIGRAM:
   516                           	opt callstack 0
   517  0001B6                     _RX_buffer:
   518                           	opt callstack 0
   519  0001B6                     	ds	500
   520                           
   521                           	psect	cstackBANK1
   522  000100                     __pcstackBANK1:
   523                           	opt callstack 0
   524  000100                     packetHandler@answer:
   525                           	opt callstack 0
   526                           
   527                           ; 50 bytes @ 0x0
   528  000100                     	ds	50
   529  000132                     packetHandler@answer_1204:
   530                           	opt callstack 0
   531                           
   532                           ; 50 bytes @ 0x32
   533  000132                     	ds	50
   534  000164                     packetHandler@answer_1211:
   535                           	opt callstack 0
   536                           
   537                           ; 50 bytes @ 0x64
   538  000164                     	ds	50
   539  000196                     packetHandler@answer_1195:
   540                           	opt callstack 0
   541                           
   542                           ; 20 bytes @ 0x96
   543  000196                     	ds	20
   544  0001AA                     packetHandler@pos:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0xAA
   548  0001AA                     	ds	2
   549  0001AC                     packetHandler@txt:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0xAC
   553  0001AC                     	ds	2
   554  0001AE                     packetHandler@end:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0xAE
   558  0001AE                     	ds	2
   559  0001B0                     packetHandler@count:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0xB0
   563  0001B0                     	ds	4
   564  0001B4                     packetHandler@temp:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0xB4
   568  0001B4                     	ds	2
   569                           
   570                           	psect	cstackBANK0
   571  0000C9                     __pcstackBANK0:
   572                           	opt callstack 0
   573  0000C9                     vfprintf@cfmt:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x0
   577  0000C9                     	ds	2
   578  0000CB                     ?_sprintf:
   579                           	opt callstack 0
   580  0000CB                     sprintf@s:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x2
   584  0000CB                     	ds	2
   585  0000CD                     sprintf@fmt:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x4
   589  0000CD                     	ds	8
   590  0000D5                     sprintf@ap:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0xC
   594  0000D5                     	ds	2
   595  0000D7                     sprintf@f:
   596                           	opt callstack 0
   597                           
   598                           ; 6 bytes @ 0xE
   599  0000D7                     	ds	6
   600  0000DD                     ?_packetHandler:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604  0000DD                     	ds	2
   605  0000DF                     ??_packetHandler:
   606                           
   607                           ; 1 bytes @ 0x16
   608  0000DF                     	ds	2
   609  0000E1                     main@status:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x18
   613  0000E1                     	ds	1
   614                           
   615                           	psect	cstackCOMRAM
   616  000001                     __pcstackCOMRAM:
   617                           	opt callstack 0
   618  000001                     ??_high_ISR:
   619  000001                     
   620                           ; 1 bytes @ 0x0
   621  000001                     	ds	2
   622  000003                     ?_strlen:
   623                           	opt callstack 0
   624  000003                     ?_convertTemp:
   625                           	opt callstack 0
   626  000003                     ?_strncmp:
   627                           	opt callstack 0
   628  000003                     ?_strchr:
   629                           	opt callstack 0
   630  000003                     ?_isspace:
   631                           	opt callstack 0
   632  000003                     ?_isalpha:
   633                           	opt callstack 0
   634  000003                     ?_isdigit:
   635                           	opt callstack 0
   636  000003                     ?_islower:
   637                           	opt callstack 0
   638  000003                     ?___lmul:
   639                           	opt callstack 0
   640  000003                     ?___aodiv:
   641                           	opt callstack 0
   642  000003                     ?___aomod:
   643                           	opt callstack 0
   644  000003                     UART_Write@data:
   645                           	opt callstack 0
   646  000003                     spi_send@data:
   647                           	opt callstack 0
   648  000003                     convertTemp@byte1:
   649                           	opt callstack 0
   650  000003                     fputc@c:
   651                           	opt callstack 0
   652  000003                     strlen@s:
   653                           	opt callstack 0
   654  000003                     isalpha@c:
   655                           	opt callstack 0
   656  000003                     isdigit@c:
   657                           	opt callstack 0
   658  000003                     isspace@c:
   659                           	opt callstack 0
   660  000003                     strchr@s:
   661                           	opt callstack 0
   662  000003                     strncmp@_l:
   663                           	opt callstack 0
   664  000003                     islower@c:
   665                           	opt callstack 0
   666  000003                     ___lmul@multiplier:
   667                           	opt callstack 0
   668  000003                     ___aodiv@dividend:
   669                           	opt callstack 0
   670  000003                     ___aomod@dividend:
   671                           	opt callstack 0
   672                           
   673                           ; 8 bytes @ 0x2
   674  000003                     	ds	1
   675  000004                     
   676                           ; 1 bytes @ 0x3
   677  000004                     	ds	1
   678  000005                     ??_convertTemp:
   679  000005                     ??_isspace:
   680  000005                     ??_isalpha:
   681  000005                     ??_isdigit:
   682  000005                     ??_islower:
   683  000005                     fputc@fp:
   684                           	opt callstack 0
   685  000005                     strlen@a:
   686                           	opt callstack 0
   687  000005                     strchr@c:
   688                           	opt callstack 0
   689  000005                     strncmp@_r:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x4
   693  000005                     	ds	2
   694  000007                     ??_fputc:
   695  000007                     UART_Write_String@buffer:
   696                           	opt callstack 0
   697  000007                     memset@dest:
   698                           	opt callstack 0
   699  000007                     strncmp@n:
   700                           	opt callstack 0
   701  000007                     ___lmul@multiplicand:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x6
   705  000007                     	ds	1
   706  000008                     convertTemp@byte2:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x7
   710  000008                     	ds	1
   711  000009                     ??_UART_Write_String:
   712  000009                     ??_strncmp:
   713  000009                     ?_toupper:
   714                           	opt callstack 0
   715  000009                     convertTemp@result:
   716                           	opt callstack 0
   717  000009                     _isspace$1926:
   718                           	opt callstack 0
   719  000009                     memset@c:
   720                           	opt callstack 0
   721  000009                     toupper@c:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x8
   725  000009                     	ds	1
   726  00000A                     convertTemp@sign:
   727                           	opt callstack 0
   728  00000A                     strncmp@l:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x9
   732  00000A                     	ds	1
   733  00000B                     ??_toupper:
   734  00000B                     UART_Write_String@i:
   735                           	opt callstack 0
   736  00000B                     convertTemp@temp:
   737                           	opt callstack 0
   738  00000B                     memset@n:
   739                           	opt callstack 0
   740  00000B                     ___lmul@product:
   741                           	opt callstack 0
   742  00000B                     ___aodiv@divisor:
   743                           	opt callstack 0
   744  00000B                     ___aomod@divisor:
   745                           	opt callstack 0
   746                           
   747                           ; 8 bytes @ 0xA
   748  00000B                     	ds	1
   749  00000C                     ?_stoa:
   750                           	opt callstack 0
   751  00000C                     stoa@fp:
   752                           	opt callstack 0
   753  00000C                     fputs@s:
   754                           	opt callstack 0
   755  00000C                     strncmp@r:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0xB
   759  00000C                     	ds	1
   760  00000D                     ??_memset:
   761  00000D                     ?_read_MAX31856_temp:
   762                           	opt callstack 0
   763  00000D                     UART_Write_String@size:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0xC
   767  00000D                     	ds	1
   768  00000E                     ?_strstr:
   769                           	opt callstack 0
   770  00000E                     stoa@s:
   771                           	opt callstack 0
   772  00000E                     fputs@fp:
   773                           	opt callstack 0
   774  00000E                     strstr@h:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0xD
   778  00000E                     	ds	1
   779  00000F                     read_MAX31856_temp@value:
   780                           	opt callstack 0
   781  00000F                     memset@k:
   782                           	opt callstack 0
   783  00000F                     _toupper$1950:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0xE
   787  00000F                     	ds	1
   788  000010                     ??_stoa:
   789  000010                     read_MAX31856_temp@byte0:
   790                           	opt callstack 0
   791  000010                     fputs@c:
   792                           	opt callstack 0
   793  000010                     strstr@n:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0xF
   797  000010                     	ds	1
   798  000011                     ?___strtoxl:
   799                           	opt callstack 0
   800  000011                     read_MAX31856_temp@byte2:
   801                           	opt callstack 0
   802  000011                     memset@s:
   803                           	opt callstack 0
   804  000011                     fputs@i:
   805                           	opt callstack 0
   806  000011                     ___strtoxl@s:
   807                           	opt callstack 0
   808  000011                     stoa@nuls:
   809                           	opt callstack 0
   810                           
   811                           ; 7 bytes @ 0x10
   812  000011                     	ds	1
   813  000012                     read_MAX31856_temp@byte1:
   814                           	opt callstack 0
   815  000012                     strstr@nl:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	1
   820  000013                     ?_pad:
   821                           	opt callstack 0
   822  000013                     ___aodiv@counter:
   823                           	opt callstack 0
   824  000013                     ___aomod@counter:
   825                           	opt callstack 0
   826  000013                     pad@fp:
   827                           	opt callstack 0
   828  000013                     ___strtoxl@endptr:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x12
   832  000013                     	ds	1
   833  000014                     ___aodiv@sign:
   834                           	opt callstack 0
   835  000014                     ___aomod@sign:
   836                           	opt callstack 0
   837  000014                     RN4870_changeName@name:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x13
   841  000014                     	ds	1
   842  000015                     ?_abs:
   843                           	opt callstack 0
   844  000015                     pad@buf:
   845                           	opt callstack 0
   846  000015                     abs@a:
   847                           	opt callstack 0
   848  000015                     ___strtoxl@base:
   849                           	opt callstack 0
   850  000015                     ___aodiv@quotient:
   851                           	opt callstack 0
   852                           
   853                           ; 8 bytes @ 0x14
   854  000015                     	ds	1
   855  000016                     RN4870_changeName@count:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0x15
   859  000016                     	ds	1
   860  000017                     ??_abs:
   861  000017                     ___strtoxl@is_signed:
   862                           	opt callstack 0
   863  000017                     pad@p:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x16
   867  000017                     	ds	1
   868  000018                     ??___strtoxl:
   869  000018                     stoa@i:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x17
   873  000018                     	ds	1
   874  000019                     ??_pad:
   875                           
   876                           ; 1 bytes @ 0x18
   877  000019                     	ds	1
   878  00001A                     pad@i:
   879                           	opt callstack 0
   880  00001A                     stoa@w:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x19
   884  00001A                     	ds	2
   885  00001C                     pad@w:
   886                           	opt callstack 0
   887  00001C                     stoa@cp:
   888                           	opt callstack 0
   889  00001C                     ___strtoxl@prev_a:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x1B
   893  00001C                     	ds	2
   894  00001E                     ?_dtoa:
   895                           	opt callstack 0
   896  00001E                     dtoa@fp:
   897                           	opt callstack 0
   898  00001E                     stoa@p:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x1D
   902  00001E                     	ds	2
   903  000020                     stoa@l:
   904                           	opt callstack 0
   905  000020                     ___strtoxl$1897:
   906                           	opt callstack 0
   907  000020                     dtoa@d:
   908                           	opt callstack 0
   909                           
   910                           ; 8 bytes @ 0x1F
   911  000020                     	ds	2
   912  000022                     ___strtoxl$1899:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x21
   916  000022                     	ds	2
   917  000024                     ___strtoxl$1900:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x23
   921  000024                     	ds	2
   922  000026                     ___strtoxl$1898:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x25
   926  000026                     	ds	1
   927  000027                     ___strtoxl@conv_done:
   928                           	opt callstack 0
   929                           
   930                           ; 1 bytes @ 0x26
   931  000027                     	ds	1
   932  000028                     ??_dtoa:
   933  000028                     ___strtoxl@limit:
   934                           	opt callstack 0
   935                           
   936                           ; 4 bytes @ 0x27
   937  000028                     	ds	4
   938  00002C                     ___strtoxl@sign:
   939                           	opt callstack 0
   940                           
   941                           ; 1 bytes @ 0x2B
   942  00002C                     	ds	1
   943  00002D                     ___strtoxl@skip:
   944                           	opt callstack 0
   945                           
   946                           ; 1 bytes @ 0x2C
   947  00002D                     	ds	1
   948  00002E                     ___strtoxl@a:
   949                           	opt callstack 0
   950                           
   951                           ; 4 bytes @ 0x2D
   952  00002E                     	ds	2
   953  000030                     _dtoa$1301:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x2F
   957  000030                     	ds	2
   958  000032                     dtoa@p:
   959                           	opt callstack 0
   960  000032                     ___strtoxl@cp:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x31
   964  000032                     	ds	2
   965  000034                     ___strtoxl@c:
   966                           	opt callstack 0
   967  000034                     dtoa@w:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x33
   971  000034                     	ds	1
   972  000035                     ?_strtol:
   973                           	opt callstack 0
   974  000035                     strtol@s:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x34
   978  000035                     	ds	1
   979  000036                     dtoa@s:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x35
   983  000036                     	ds	1
   984  000037                     strtol@endptr:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x36
   988  000037                     	ds	1
   989  000038                     dtoa@n:
   990                           	opt callstack 0
   991                           
   992                           ; 8 bytes @ 0x37
   993  000038                     	ds	1
   994  000039                     strtol@base:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x38
   998  000039                     	ds	2
   999  00003B                     
  1000                           ; 1 bytes @ 0x3A
  1001  00003B                     	ds	5
  1002  000040                     dtoa@i:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x3F
  1006  000040                     	ds	2
  1007  000042                     ?_vfpfcnvrt:
  1008                           	opt callstack 0
  1009  000042                     vfpfcnvrt@fp:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x41
  1013  000042                     	ds	2
  1014  000044                     vfpfcnvrt@fmt:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x43
  1018  000044                     	ds	2
  1019  000046                     vfpfcnvrt@ap:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x45
  1023  000046                     	ds	2
  1024  000048                     ??_vfpfcnvrt:
  1025                           
  1026                           ; 1 bytes @ 0x47
  1027  000048                     	ds	2
  1028  00004A                     vfpfcnvrt@ll:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x49
  1032  00004A                     	ds	8
  1033  000052                     vfpfcnvrt@cp:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x51
  1037  000052                     	ds	2
  1038  000054                     ?_vfprintf:
  1039                           	opt callstack 0
  1040  000054                     vfprintf@fp:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x53
  1044  000054                     	ds	2
  1045  000056                     vfprintf@fmt:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x55
  1049  000056                     	ds	2
  1050  000058                     vfprintf@ap:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x57
  1054  000058                     	ds	2
  1055  00005A                     ??_main:
  1056  00005A                     
  1057                           ; 1 bytes @ 0x59
  1058  00005A                     	ds	1
  1059                           
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 92 in file "main_ble.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  status          1   24[BANK0 ] volatile unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0
  1080 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1081 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1082 ;;      Totals:         1       1       0       0       0       0       0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels required when called:   10
  1085 ;; This function calls:
  1086 ;;		_SYSTEM_Initialize
  1087 ;;		_UART_Init
  1088 ;;		_UART_Write_String
  1089 ;;		_packetHandler
  1090 ;;		_spi_init
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text0
  1097  001F52                     __ptext0:
  1098                           	opt callstack 0
  1099  001F52                     _main:
  1100                           	opt callstack 21
  1101                           
  1102                           ;main_ble.c: 94:     volatile char status = 0;
  1103                           
  1104                           ;incstack = 0
  1105  001F52  0E00               	movlw	0
  1106  001F54  0100               	movlb	0	; () banked
  1107  001F56  6FE1               	movwf	main@status& (0+255),b	;volatile
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;main_ble.c: 95:     og = PORTCbits.RC0;
  1111  001F58  0E00               	movlw	0
  1112  001F5A  B082               	btfsc	3970,0,c	;volatile
  1113  001F5C  0E01               	movlw	1
  1114  001F5E  6FE2               	movwf	_og& (0+255),b
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main_ble.c: 98:     SYSTEM_Initialize();
  1118  001F60  EC7D  F011         	call	_SYSTEM_Initialize	;wreg free
  1119                           
  1120                           ;main_ble.c: 100:     spi_init();
  1121  001F64  ECFA  F010         	call	_spi_init	;wreg free
  1122                           
  1123                           ;main_ble.c: 101:     UART_Init();
  1124  001F68  EC57  F011         	call	_UART_Init	;wreg free
  1125                           
  1126                           ;main_ble.c: 103:     _delay(100000);
  1127  001F6C  0E82               	movlw	130
  1128  001F6E  6E5A               	movwf	??_main& (0+255),c
  1129  001F70  0EDE               	movlw	222
  1130  001F72                     u3717:
  1131  001F72  2EE8               	decfsz	wreg,f,c
  1132  001F74  D7FE               	bra	u3717
  1133  001F76  2E5A               	decfsz	??_main& (0+255),f,c
  1134  001F78  D7FC               	bra	u3717
  1135                           
  1136                           ;main_ble.c: 106:     debug = 1;
  1137  001F7A  0E01               	movlw	1
  1138  001F7C  0100               	movlb	0	; () banked
  1139  001F7E  6FA7               	movwf	_debug& (0+255),b
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;main_ble.c: 107:     TRISAbits.RA1 = 0;
  1143  001F80  9292               	bcf	3986,1,c	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main_ble.c: 108:     TRISBbits.RB3 = 0;
  1147  001F82  9693               	bcf	3987,3,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main_ble.c: 109:     TRISBbits.RB4 = 0;
  1151  001F84  9893               	bcf	3987,4,c	;volatile
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;main_ble.c: 110:     TRISBbits.RB5 = 0;
  1155  001F86  9A93               	bcf	3987,5,c	;volatile
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main_ble.c: 111:     TRISCbits.RC0 = 1;
  1159  001F88  8094               	bsf	3988,0,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;main_ble.c: 114:     UART_Write_String("Start\n");
  1163  001F8A  0E71               	movlw	low STR_1
  1164  001F8C  6E07               	movwf	UART_Write_String@buffer,c
  1165  001F8E  0E08               	movlw	high STR_1
  1166  001F90  6E08               	movwf	UART_Write_String@buffer+1,c
  1167  001F92  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1168  001F96                     l3671:
  1169                           
  1170                           ;main_ble.c: 117:     {;main_ble.c: 119:         status = packetHandler();
  1171  001F96  ECDB  F005         	call	_packetHandler	;wreg free
  1172  001F9A  0100               	movlb	0	; () banked
  1173  001F9C  51DD               	movf	?_packetHandler& (0+255),w,b
  1174  001F9E  6FE1               	movwf	main@status& (0+255),b	;volatile
  1175  001FA0  D7FA               	goto	l3671
  1176  001FA2                     __end_of_main:
  1177                           	opt callstack 0
  1178                           
  1179 ;; *************** function _spi_init *****************
  1180 ;; Defined at:
  1181 ;;		line 326 in file "main_ble.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text1
  1210  0021F4                     __ptext1:
  1211                           	opt callstack 0
  1212  0021F4                     _spi_init:
  1213                           	opt callstack 29
  1214                           
  1215                           ;main_ble.c: 327:     TRISAbits.RA5 = 0;
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;incstack = 0
  1219  0021F4  9A92               	bcf	3986,5,c	;volatile
  1220                           
  1221                           ;main_ble.c: 328:     TRISBbits.RB0 = 1;
  1222  0021F6  8093               	bsf	3987,0,c	;volatile
  1223                           
  1224                           ;main_ble.c: 329:     TRISBbits.RB1 = 0;
  1225  0021F8  9293               	bcf	3987,1,c	;volatile
  1226                           
  1227                           ;main_ble.c: 330:     TRISBbits.RB3 = 0;
  1228  0021FA  9693               	bcf	3987,3,c	;volatile
  1229                           
  1230                           ;main_ble.c: 331:     TRISBbits.RB4 = 1;
  1231  0021FC  8893               	bsf	3987,4,c	;volatile
  1232                           
  1233                           ;main_ble.c: 334:     ANSELAbits.ANSA5 = 0;
  1234  0021FE  010F               	movlb	15	; () banked
  1235  002200  9B5B               	bcf	91,5,b	;volatile
  1236                           
  1237                           ; BSR set to: 15
  1238                           ;main_ble.c: 335:     ANSELB = 0x24;
  1239  002202  0E24               	movlw	36
  1240  002204  6F5C               	movwf	92,b	;volatile
  1241                           
  1242                           ; BSR set to: 15
  1243                           ;main_ble.c: 337:     LATAbits.LA5 = 1;
  1244  002206  8A89               	bsf	3977,5,c	;volatile
  1245                           
  1246                           ; BSR set to: 15
  1247                           ;main_ble.c: 339:     INTCONbits.GIE = 0;
  1248  002208  9EF2               	bcf	4082,7,c	;volatile
  1249                           
  1250                           ; BSR set to: 15
  1251                           ;main_ble.c: 341:     PMD1bits.MSSPMD = 0;
  1252  00220A  9C7F               	bcf	3967,6,c	;volatile
  1253                           
  1254                           ; BSR set to: 15
  1255                           ;main_ble.c: 342:     RCONbits.IPEN = 1;
  1256  00220C  8ED0               	bsf	4048,7,c	;volatile
  1257                           
  1258                           ; BSR set to: 15
  1259                           ;main_ble.c: 343:     IPR1bits.SSPIP = 1;
  1260  00220E  869F               	bsf	3999,3,c	;volatile
  1261                           
  1262                           ; BSR set to: 15
  1263                           ;main_ble.c: 344:     PIE1bits.SSPIE = 1;
  1264  002210  869D               	bsf	3997,3,c	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;main_ble.c: 345:     SSP1CON1bits.CKP = 0;
  1268  002212  98C6               	bcf	4038,4,c	;volatile
  1269                           
  1270                           ;main_ble.c: 346:     SSP1CON1bits.SSPM = 0b0010;
  1271  002214  50C6               	movf	4038,w,c	;volatile
  1272  002216  0BF0               	andlw	-16
  1273  002218  0902               	iorlw	2
  1274  00221A  6EC6               	movwf	4038,c	;volatile
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;main_ble.c: 348:     PIR1bits.SSPIF = 0;
  1278  00221C  969E               	bcf	3998,3,c	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;main_ble.c: 350:     SSP1CON1bits.SSPEN = 1;
  1282  00221E  8AC6               	bsf	4038,5,c	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main_ble.c: 351:     INTCONbits.GIE = 1;
  1286  002220  8EF2               	bsf	4082,7,c	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289  002222  0012               	return		;funcret
  1290  002224                     __end_of_spi_init:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function _packetHandler *****************
  1294 ;; Defined at:
  1295 ;;		line 240 in file "main_ble.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  answer         50  100[BANK1 ] unsigned char [50]
  1300 ;;  txt             2  172[BANK1 ] PTR unsigned char 
  1301 ;;		 -> NULL(0), RX_buffer(500), 
  1302 ;;  answer         50   50[BANK1 ] unsigned char [50]
  1303 ;;  end             2  174[BANK1 ] PTR unsigned char 
  1304 ;;		 -> NULL(0), RX_buffer(500), 
  1305 ;;  pos             2  170[BANK1 ] PTR unsigned char 
  1306 ;;		 -> NULL(0), RX_buffer(500), 
  1307 ;;  answer         20  150[BANK1 ] unsigned char [20]
  1308 ;;  count           4  176[BANK1 ] unsigned long 
  1309 ;;  temp            2  180[BANK1 ] volatile short 
  1310 ;;  answer         50    0[BANK1 ] unsigned char [50]
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2   20[BANK0 ] int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1320 ;;      Params:         0       2       0       0       0       0       0       0       0
  1321 ;;      Locals:         0       0     182       0       0       0       0       0       0
  1322 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1323 ;;      Totals:         0       4     182       0       0       0       0       0       0
  1324 ;;Total ram usage:      186 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    9
  1327 ;; This function calls:
  1328 ;;		_RN4870_changeName
  1329 ;;		_UART_Write_String
  1330 ;;		_init_MAX31856
  1331 ;;		_memset
  1332 ;;		_read_MAX31856_temp
  1333 ;;		_sprintf
  1334 ;;		_strlen
  1335 ;;		_strstr
  1336 ;;		_strtol
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text2
  1343  000BB6                     __ptext2:
  1344                           	opt callstack 0
  1345  000BB6                     _packetHandler:
  1346                           	opt callstack 21
  1347                           
  1348                           ;main_ble.c: 245:     if(strstr(RX_buffer,"hey")!=((void*)0)){
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;incstack = 0
  1352  000BB6  0EB6               	movlw	low _RX_buffer
  1353  000BB8  6E0E               	movwf	strstr@h,c
  1354  000BBA  0E01               	movlw	high _RX_buffer
  1355  000BBC  6E0F               	movwf	strstr@h+1,c
  1356  000BBE  0EA7               	movlw	low STR_16
  1357  000BC0  6E10               	movwf	strstr@n,c
  1358  000BC2  0E08               	movlw	high STR_16
  1359  000BC4  6E11               	movwf	strstr@n+1,c
  1360  000BC6  EC18  F00E         	call	_strstr	;wreg free
  1361  000BCA  500E               	movf	?_strstr,w,c
  1362  000BCC  100F               	iorwf	?_strstr+1,w,c
  1363  000BCE  B4D8               	btfsc	status,2,c
  1364  000BD0  D02B               	goto	l3559
  1365                           
  1366                           ;main_ble.c: 246:         char answer[50];;main_ble.c: 247:         UART_Write_String("h
      +                          ello\r");
  1367  000BD2  0E86               	movlw	low STR_17
  1368  000BD4  6E07               	movwf	UART_Write_String@buffer,c
  1369  000BD6  0E08               	movlw	high STR_17
  1370  000BD8  6E08               	movwf	UART_Write_String@buffer+1,c
  1371  000BDA  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1372                           
  1373                           ;main_ble.c: 248:         UART_Write_String(answer);
  1374  000BDE  0E00               	movlw	low packetHandler@answer
  1375  000BE0  6E07               	movwf	UART_Write_String@buffer,c
  1376  000BE2  0E01               	movlw	high packetHandler@answer
  1377  000BE4  6E08               	movwf	UART_Write_String@buffer+1,c
  1378  000BE6  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1379  000BEA                     l3549:
  1380                           
  1381                           ;main_ble.c: 251:         memset(RX_buffer,0,strlen(RX_buffer));
  1382  000BEA  0EB6               	movlw	low _RX_buffer
  1383  000BEC  6E07               	movwf	memset@dest,c
  1384  000BEE  0E01               	movlw	high _RX_buffer
  1385  000BF0  6E08               	movwf	memset@dest+1,c
  1386  000BF2  0E00               	movlw	0
  1387  000BF4  6E0A               	movwf	memset@c+1,c
  1388  000BF6  0E00               	movlw	0
  1389  000BF8  6E09               	movwf	memset@c,c
  1390  000BFA  0EB6               	movlw	low _RX_buffer
  1391  000BFC  6E03               	movwf	strlen@s,c
  1392  000BFE  0E01               	movlw	high _RX_buffer
  1393  000C00  6E04               	movwf	strlen@s+1,c
  1394  000C02  EC1A  F010         	call	_strlen	;wreg free
  1395  000C06  C003  F00B         	movff	?_strlen,memset@n
  1396  000C0A  C004  F00C         	movff	?_strlen+1,memset@n+1
  1397  000C0E  EC69  F00B         	call	_memset	;wreg free
  1398                           
  1399                           ;main_ble.c: 252:         ix = 0;
  1400  000C12  0E00               	movlw	0
  1401  000C14  0100               	movlb	0	; () banked
  1402  000C16  6FA4               	movwf	(_ix+1)& (0+255),b
  1403  000C18  0E00               	movlw	0
  1404  000C1A  6FA3               	movwf	_ix& (0+255),b
  1405  000C1C                     l3553:
  1406                           
  1407                           ;main_ble.c: 253:         return 1;
  1408  000C1C  0E00               	movlw	0
  1409  000C1E  0100               	movlb	0	; () banked
  1410  000C20  6FDE               	movwf	(?_packetHandler+1)& (0+255),b
  1411  000C22  0E01               	movlw	1
  1412  000C24  6FDD               	movwf	?_packetHandler& (0+255),b
  1413  000C26  0012               	return	
  1414  000C28                     l3559:
  1415  000C28  0EB6               	movlw	low _RX_buffer
  1416  000C2A  6E0E               	movwf	strstr@h,c
  1417  000C2C  0E01               	movlw	high _RX_buffer
  1418  000C2E  6E0F               	movwf	strstr@h+1,c
  1419  000C30  0E41               	movlw	low STR_18
  1420  000C32  6E10               	movwf	strstr@n,c
  1421  000C34  0E08               	movlw	high STR_18
  1422  000C36  6E11               	movwf	strstr@n+1,c
  1423  000C38  EC18  F00E         	call	_strstr	;wreg free
  1424  000C3C  500E               	movf	?_strstr,w,c
  1425  000C3E  100F               	iorwf	?_strstr+1,w,c
  1426  000C40  B4D8               	btfsc	status,2,c
  1427  000C42  D007               	goto	l3573
  1428                           
  1429                           ;main_ble.c: 256:         UART_Write_String("General Kenobi\n");
  1430  000C44  0E15               	movlw	low STR_19
  1431  000C46  6E07               	movwf	UART_Write_String@buffer,c
  1432  000C48  0E08               	movlw	high STR_19
  1433  000C4A  6E08               	movwf	UART_Write_String@buffer+1,c
  1434  000C4C  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1435  000C50  D7CC               	goto	l3549
  1436  000C52                     l3573:
  1437  000C52  0EB6               	movlw	low _RX_buffer
  1438  000C54  6E0E               	movwf	strstr@h,c
  1439  000C56  0E01               	movlw	high _RX_buffer
  1440  000C58  6E0F               	movwf	strstr@h+1,c
  1441  000C5A  0E69               	movlw	low STR_20
  1442  000C5C  6E10               	movwf	strstr@n,c
  1443  000C5E  0E08               	movlw	high STR_20
  1444  000C60  6E11               	movwf	strstr@n+1,c
  1445  000C62  EC18  F00E         	call	_strstr	;wreg free
  1446  000C66  500E               	movf	?_strstr,w,c
  1447  000C68  100F               	iorwf	?_strstr+1,w,c
  1448  000C6A  B4D8               	btfsc	status,2,c
  1449  000C6C  D06D               	goto	l3607
  1450                           
  1451                           ;main_ble.c: 265:         status = init_MAX31856();
  1452  000C6E  ECF6  F00F         	call	_init_MAX31856	;wreg free
  1453  000C72  0100               	movlb	0	; () banked
  1454  000C74  6FA8               	movwf	_status& (0+255),b	;volatile
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main_ble.c: 267:         volatile short int temp = read_MAX31856_temp();
  1458  000C76  EC62  F00E         	call	_read_MAX31856_temp	;wreg free
  1459  000C7A  C00D  F1B4         	movff	?_read_MAX31856_temp,packetHandler@temp	;volatile
  1460  000C7E  C00E  F1B5         	movff	?_read_MAX31856_temp+1,packetHandler@temp+1	;volatile
  1461                           
  1462                           ;main_ble.c: 269:         char answer[20];;main_ble.c: 270:         sprintf(answer,"%d:%
      +                          i\r",ID,temp);
  1463  000C82  0E96               	movlw	low packetHandler@answer_1195
  1464  000C84  0100               	movlb	0	; () banked
  1465  000C86  6FCB               	movwf	sprintf@s& (0+255),b
  1466  000C88  0E01               	movlw	high packetHandler@answer_1195
  1467  000C8A  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  1468  000C8C  0E7F               	movlw	low STR_21
  1469  000C8E  6FCD               	movwf	sprintf@fmt& (0+255),b
  1470  000C90  0E08               	movlw	high STR_21
  1471  000C92  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  1472  000C94  C0A5  F0CF         	movff	_ID,?_sprintf+4
  1473  000C98  C0A6  F0D0         	movff	_ID+1,?_sprintf+5
  1474  000C9C  C1B4  F0D1         	movff	packetHandler@temp,?_sprintf+6	;volatile
  1475  000CA0  C1B5  F0D2         	movff	packetHandler@temp+1,?_sprintf+7	;volatile
  1476  000CA4  EC80  F00F         	call	_sprintf	;wreg free
  1477                           
  1478                           ;main_ble.c: 271:         UART_Write_String(answer);
  1479  000CA8  0E96               	movlw	low packetHandler@answer_1195
  1480  000CAA  6E07               	movwf	UART_Write_String@buffer,c
  1481  000CAC  0E01               	movlw	high packetHandler@answer_1195
  1482  000CAE  6E08               	movwf	UART_Write_String@buffer+1,c
  1483  000CB0  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1484                           
  1485                           ;main_ble.c: 274:         memset(RX_buffer,0,strlen(RX_buffer));
  1486  000CB4  0EB6               	movlw	low _RX_buffer
  1487  000CB6  6E07               	movwf	memset@dest,c
  1488  000CB8  0E01               	movlw	high _RX_buffer
  1489  000CBA  6E08               	movwf	memset@dest+1,c
  1490  000CBC  0E00               	movlw	0
  1491  000CBE  6E0A               	movwf	memset@c+1,c
  1492  000CC0  0E00               	movlw	0
  1493  000CC2  6E09               	movwf	memset@c,c
  1494  000CC4  0EB6               	movlw	low _RX_buffer
  1495  000CC6  6E03               	movwf	strlen@s,c
  1496  000CC8  0E01               	movlw	high _RX_buffer
  1497  000CCA  6E04               	movwf	strlen@s+1,c
  1498  000CCC  EC1A  F010         	call	_strlen	;wreg free
  1499  000CD0  C003  F00B         	movff	?_strlen,memset@n
  1500  000CD4  C004  F00C         	movff	?_strlen+1,memset@n+1
  1501  000CD8  EC69  F00B         	call	_memset	;wreg free
  1502                           
  1503                           ;main_ble.c: 275:         ix = 0;
  1504  000CDC  0E00               	movlw	0
  1505  000CDE  0100               	movlb	0	; () banked
  1506  000CE0  6FA4               	movwf	(_ix+1)& (0+255),b
  1507  000CE2  0E00               	movlw	0
  1508  000CE4  6FA3               	movwf	_ix& (0+255),b
  1509  000CE6                     l3587:
  1510                           
  1511                           ;main_ble.c: 277:         unsigned long count = 0;
  1512  000CE6  0E00               	movlw	0
  1513  000CE8  0101               	movlb	1	; () banked
  1514  000CEA  6FB0               	movwf	packetHandler@count& (0+255),b
  1515  000CEC  0E00               	movlw	0
  1516  000CEE  6FB1               	movwf	(packetHandler@count+1)& (0+255),b
  1517  000CF0  0E00               	movlw	0
  1518  000CF2  6FB2               	movwf	(packetHandler@count+2)& (0+255),b
  1519  000CF4  0E00               	movlw	0
  1520  000CF6  6FB3               	movwf	(packetHandler@count+3)& (0+255),b
  1521                           
  1522                           ;main_ble.c: 278:         while(strstr(RX_buffer,"tempACK")==((void*)0)){
  1523  000CF8  D018               	goto	l3595
  1524  000CFA                     l3589:
  1525                           
  1526                           ;main_ble.c: 279:             count++;
  1527  000CFA  0E01               	movlw	1
  1528  000CFC  0101               	movlb	1	; () banked
  1529  000CFE  27B0               	addwf	packetHandler@count& (0+255),f,b
  1530  000D00  0E00               	movlw	0
  1531  000D02  23B1               	addwfc	(packetHandler@count+1)& (0+255),f,b
  1532  000D04  23B2               	addwfc	(packetHandler@count+2)& (0+255),f,b
  1533  000D06  23B3               	addwfc	(packetHandler@count+3)& (0+255),f,b
  1534                           
  1535                           ;main_ble.c: 280:             if(count>75000){
  1536  000D08  51B3               	movf	(packetHandler@count+3)& (0+255),w,b
  1537  000D0A  E108               	bnz	u3670
  1538  000D0C  0EF9               	movlw	249
  1539  000D0E  5DB0               	subwf	packetHandler@count& (0+255),w,b
  1540  000D10  0E24               	movlw	36
  1541  000D12  59B1               	subwfb	(packetHandler@count+1)& (0+255),w,b
  1542  000D14  0E01               	movlw	1
  1543  000D16  59B2               	subwfb	(packetHandler@count+2)& (0+255),w,b
  1544  000D18  A0D8               	btfss	status,0,c
  1545  000D1A  D007               	goto	l3595
  1546  000D1C                     u3670:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main_ble.c: 281:                 UART_Write_String(answer);
  1550  000D1C  0E96               	movlw	low packetHandler@answer_1195
  1551  000D1E  6E07               	movwf	UART_Write_String@buffer,c
  1552  000D20  0E01               	movlw	high packetHandler@answer_1195
  1553  000D22  6E08               	movwf	UART_Write_String@buffer+1,c
  1554  000D24  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1555  000D28  D7DE               	goto	l3587
  1556  000D2A                     l3595:
  1557                           
  1558                           ; BSR set to: 1
  1559                           ;main_ble.c: 278:         while(strstr(RX_buffer,"tempACK")==((void*)0)){
  1560  000D2A  0EB6               	movlw	low _RX_buffer
  1561  000D2C  6E0E               	movwf	strstr@h,c
  1562  000D2E  0E01               	movlw	high _RX_buffer
  1563  000D30  6E0F               	movwf	strstr@h+1,c
  1564  000D32  0E61               	movlw	low STR_22
  1565  000D34  6E10               	movwf	strstr@n,c
  1566  000D36  0E08               	movlw	high STR_22
  1567  000D38  6E11               	movwf	strstr@n+1,c
  1568  000D3A  EC18  F00E         	call	_strstr	;wreg free
  1569  000D3E  500E               	movf	?_strstr,w,c
  1570  000D40  100F               	iorwf	?_strstr+1,w,c
  1571  000D42  A4D8               	btfss	status,2,c
  1572  000D44  D752               	goto	l3549
  1573  000D46  D7D9               	goto	l3589
  1574  000D48                     l3607:
  1575  000D48  0EB6               	movlw	low _RX_buffer
  1576  000D4A  6E0E               	movwf	strstr@h,c
  1577  000D4C  0E01               	movlw	high _RX_buffer
  1578  000D4E  6E0F               	movwf	strstr@h+1,c
  1579  000D50  0E4D               	movlw	low STR_23
  1580  000D52  6E10               	movwf	strstr@n,c
  1581  000D54  0E08               	movlw	high STR_23
  1582  000D56  6E11               	movwf	strstr@n+1,c
  1583  000D58  EC18  F00E         	call	_strstr	;wreg free
  1584  000D5C  500E               	movf	?_strstr,w,c
  1585  000D5E  100F               	iorwf	?_strstr+1,w,c
  1586  000D60  B4D8               	btfsc	status,2,c
  1587  000D62  D042               	goto	l3627
  1588                           
  1589                           ;main_ble.c: 294:         char *pos = strstr(RX_buffer,"changeID:") + strlen("changeID:"
      +                          );
  1590  000D64  0EB6               	movlw	low _RX_buffer
  1591  000D66  6E0E               	movwf	strstr@h,c
  1592  000D68  0E01               	movlw	high _RX_buffer
  1593  000D6A  6E0F               	movwf	strstr@h+1,c
  1594  000D6C  0E4D               	movlw	low STR_23
  1595  000D6E  6E10               	movwf	strstr@n,c
  1596  000D70  0E08               	movlw	high STR_23
  1597  000D72  6E11               	movwf	strstr@n+1,c
  1598  000D74  EC18  F00E         	call	_strstr	;wreg free
  1599  000D78  C00E  F0DF         	movff	?_strstr,??_packetHandler
  1600  000D7C  C00F  F0E0         	movff	?_strstr+1,??_packetHandler+1
  1601  000D80  0E4D               	movlw	low STR_23
  1602  000D82  6E03               	movwf	strlen@s,c
  1603  000D84  0E08               	movlw	high STR_23
  1604  000D86  6E04               	movwf	strlen@s+1,c
  1605  000D88  EC1A  F010         	call	_strlen	;wreg free
  1606  000D8C  5003               	movf	?_strlen,w,c
  1607  000D8E  0100               	movlb	0	; () banked
  1608  000D90  25DF               	addwf	??_packetHandler& (0+255),w,b
  1609  000D92  0101               	movlb	1	; () banked
  1610  000D94  6FAA               	movwf	packetHandler@pos& (0+255),b
  1611  000D96  5004               	movf	?_strlen+1,w,c
  1612  000D98  0100               	movlb	0	; () banked
  1613  000D9A  21E0               	addwfc	(??_packetHandler+1)& (0+255),w,b
  1614  000D9C  0101               	movlb	1	; () banked
  1615  000D9E  6FAB               	movwf	(packetHandler@pos+1)& (0+255),b
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;main_ble.c: 295:         char *end;;main_ble.c: 296:         ID = strtol(pos,&end,10);
  1619  000DA0  C1AA  F035         	movff	packetHandler@pos,strtol@s
  1620  000DA4  C1AB  F036         	movff	packetHandler@pos+1,strtol@s+1
  1621  000DA8  0EAE               	movlw	low packetHandler@end
  1622  000DAA  6E37               	movwf	strtol@endptr,c
  1623  000DAC  0E01               	movlw	high packetHandler@end
  1624  000DAE  6E38               	movwf	strtol@endptr+1,c
  1625  000DB0  0E00               	movlw	0
  1626  000DB2  6E3A               	movwf	strtol@base+1,c
  1627  000DB4  0E0A               	movlw	10
  1628  000DB6  6E39               	movwf	strtol@base,c
  1629  000DB8  ECC8  F010         	call	_strtol	;wreg free
  1630  000DBC  C035  F0A5         	movff	?_strtol,_ID
  1631  000DC0  C036  F0A6         	movff	?_strtol+1,_ID+1
  1632                           
  1633                           ;main_ble.c: 298:         char answer[50];;main_ble.c: 299:         sprintf(answer,"chan
      +                          geID:IDACK\r");
  1634  000DC4  0E32               	movlw	low packetHandler@answer_1204
  1635  000DC6  0100               	movlb	0	; () banked
  1636  000DC8  6FCB               	movwf	sprintf@s& (0+255),b
  1637  000DCA  0E01               	movlw	high packetHandler@answer_1204
  1638  000DCC  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  1639  000DCE  0E25               	movlw	low STR_26
  1640  000DD0  6FCD               	movwf	sprintf@fmt& (0+255),b
  1641  000DD2  0E08               	movlw	high STR_26
  1642  000DD4  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  1643  000DD6  EC80  F00F         	call	_sprintf	;wreg free
  1644                           
  1645                           ;main_ble.c: 300:         UART_Write_String(answer);
  1646  000DDA  0E32               	movlw	low packetHandler@answer_1204
  1647  000DDC  6E07               	movwf	UART_Write_String@buffer,c
  1648  000DDE  0E01               	movlw	high packetHandler@answer_1204
  1649  000DE0  6E08               	movwf	UART_Write_String@buffer+1,c
  1650  000DE2  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1651  000DE6  D701               	goto	l3549
  1652  000DE8                     l3627:
  1653  000DE8  0EB6               	movlw	low _RX_buffer
  1654  000DEA  6E0E               	movwf	strstr@h,c
  1655  000DEC  0E01               	movlw	high _RX_buffer
  1656  000DEE  6E0F               	movwf	strstr@h+1,c
  1657  000DF0  0E35               	movlw	low STR_27
  1658  000DF2  6E10               	movwf	strstr@n,c
  1659  000DF4  0E08               	movlw	high STR_27
  1660  000DF6  6E11               	movwf	strstr@n+1,c
  1661  000DF8  EC18  F00E         	call	_strstr	;wreg free
  1662  000DFC  500E               	movf	?_strstr,w,c
  1663  000DFE  100F               	iorwf	?_strstr+1,w,c
  1664  000E00  B4D8               	btfsc	status,2,c
  1665  000E02  D055               	goto	l195
  1666                           
  1667                           ;main_ble.c: 308:         char *txt = strstr(RX_buffer,"changeName:") + strlen("changeNa
      +                          me:");
  1668  000E04  0EB6               	movlw	low _RX_buffer
  1669  000E06  6E0E               	movwf	strstr@h,c
  1670  000E08  0E01               	movlw	high _RX_buffer
  1671  000E0A  6E0F               	movwf	strstr@h+1,c
  1672  000E0C  0E35               	movlw	low STR_27
  1673  000E0E  6E10               	movwf	strstr@n,c
  1674  000E10  0E08               	movlw	high STR_27
  1675  000E12  6E11               	movwf	strstr@n+1,c
  1676  000E14  EC18  F00E         	call	_strstr	;wreg free
  1677  000E18  C00E  F0DF         	movff	?_strstr,??_packetHandler
  1678  000E1C  C00F  F0E0         	movff	?_strstr+1,??_packetHandler+1
  1679  000E20  0E35               	movlw	low STR_27
  1680  000E22  6E03               	movwf	strlen@s,c
  1681  000E24  0E08               	movlw	high STR_27
  1682  000E26  6E04               	movwf	strlen@s+1,c
  1683  000E28  EC1A  F010         	call	_strlen	;wreg free
  1684  000E2C  5003               	movf	?_strlen,w,c
  1685  000E2E  0100               	movlb	0	; () banked
  1686  000E30  25DF               	addwf	??_packetHandler& (0+255),w,b
  1687  000E32  0101               	movlb	1	; () banked
  1688  000E34  6FAC               	movwf	packetHandler@txt& (0+255),b
  1689  000E36  5004               	movf	?_strlen+1,w,c
  1690  000E38  0100               	movlb	0	; () banked
  1691  000E3A  21E0               	addwfc	(??_packetHandler+1)& (0+255),w,b
  1692  000E3C  0101               	movlb	1	; () banked
  1693  000E3E  6FAD               	movwf	(packetHandler@txt+1)& (0+255),b
  1694                           
  1695                           ;main_ble.c: 309:         sprintf(name,"%s%d",txt,ID);
  1696  000E40  0E67               	movlw	low _name
  1697  000E42  0100               	movlb	0	; () banked
  1698  000E44  6FCB               	movwf	sprintf@s& (0+255),b
  1699  000E46  0E00               	movlw	high _name
  1700  000E48  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  1701  000E4A  0E92               	movlw	low STR_30
  1702  000E4C  6FCD               	movwf	sprintf@fmt& (0+255),b
  1703  000E4E  0E08               	movlw	high STR_30
  1704  000E50  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  1705  000E52  C1AC  F0CF         	movff	packetHandler@txt,?_sprintf+4
  1706  000E56  C1AD  F0D0         	movff	packetHandler@txt+1,?_sprintf+5
  1707  000E5A  C0A5  F0D1         	movff	_ID,?_sprintf+6
  1708  000E5E  C0A6  F0D2         	movff	_ID+1,?_sprintf+7
  1709  000E62  EC80  F00F         	call	_sprintf	;wreg free
  1710                           
  1711                           ;main_ble.c: 312:         char answer[50];;main_ble.c: 313:         sprintf(answer,"chan
      +                          geName:nameACK\r");
  1712  000E66  0E64               	movlw	low packetHandler@answer_1211
  1713  000E68  0100               	movlb	0	; () banked
  1714  000E6A  6FCB               	movwf	sprintf@s& (0+255),b
  1715  000E6C  0E01               	movlw	high packetHandler@answer_1211
  1716  000E6E  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  1717  000E70  0E01               	movlw	low STR_31
  1718  000E72  6FCD               	movwf	sprintf@fmt& (0+255),b
  1719  000E74  0E08               	movlw	high STR_31
  1720  000E76  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  1721  000E78  EC80  F00F         	call	_sprintf	;wreg free
  1722                           
  1723                           ;main_ble.c: 314:         UART_Write_String(answer);
  1724  000E7C  0E64               	movlw	low packetHandler@answer_1211
  1725  000E7E  6E07               	movwf	UART_Write_String@buffer,c
  1726  000E80  0E01               	movlw	high packetHandler@answer_1211
  1727  000E82  6E08               	movwf	UART_Write_String@buffer+1,c
  1728  000E84  EC9B  F00E         	call	_UART_Write_String	;wreg free
  1729                           
  1730                           ;main_ble.c: 316:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1731  000E88  0E03               	movlw	3
  1732  000E8A  0100               	movlb	0	; () banked
  1733  000E8C  6FE0               	movwf	(??_packetHandler+1)& (0+255),b
  1734  000E8E  0E08               	movlw	8
  1735  000E90  6FDF               	movwf	??_packetHandler& (0+255),b
  1736  000E92  0E77               	movlw	119
  1737  000E94                     u3727:
  1738  000E94  2EE8               	decfsz	wreg,f,c
  1739  000E96  D7FE               	bra	u3727
  1740  000E98  2FDF               	decfsz	??_packetHandler& (0+255),f,b
  1741  000E9A  D7FC               	bra	u3727
  1742  000E9C  2FE0               	decfsz	(??_packetHandler+1)& (0+255),f,b
  1743  000E9E  D7FA               	bra	u3727
  1744                           
  1745                           ;main_ble.c: 319:         RN4870_changeName(name);
  1746  000EA0  0E67               	movlw	low _name
  1747  000EA2  6E14               	movwf	RN4870_changeName@name,c
  1748  000EA4  0E00               	movlw	high _name
  1749  000EA6  6E15               	movwf	RN4870_changeName@name+1,c
  1750  000EA8  EC5D  F007         	call	_RN4870_changeName	;wreg free
  1751  000EAC  D6B7               	goto	l3553
  1752  000EAE                     l195:
  1753                           
  1754                           ;main_ble.c: 323:     return 0;
  1755  000EAE  0E00               	movlw	0
  1756  000EB0  0100               	movlb	0	; () banked
  1757  000EB2  6FDE               	movwf	(?_packetHandler+1)& (0+255),b
  1758  000EB4  0E00               	movlw	0
  1759  000EB6  6FDD               	movwf	?_packetHandler& (0+255),b
  1760                           
  1761                           ; BSR set to: 0
  1762  000EB8  0012               	return		;funcret
  1763  000EBA                     __end_of_packetHandler:
  1764                           	opt callstack 0
  1765                           
  1766 ;; *************** function _strtol *****************
  1767 ;; Defined at:
  1768 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strtol.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  s               2   52[COMRAM] PTR const unsigned char 
  1771 ;;		 -> NULL(0), RX_buffer(500), 
  1772 ;;  endptr          2   54[COMRAM] PTR PTR unsigned char 
  1773 ;;		 -> packetHandler@end(2), 
  1774 ;;  base            2   56[COMRAM] int 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  4   52[COMRAM] long 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         6       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        6 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    4
  1793 ;; This function calls:
  1794 ;;		___strtoxl
  1795 ;; This function is called by:
  1796 ;;		_packetHandler
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text3
  1801  002190                     __ptext3:
  1802                           	opt callstack 0
  1803  002190                     _strtol:
  1804                           	opt callstack 25
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;incstack = 0
  1808  002190  C035  F011         	movff	strtol@s,___strtoxl@s
  1809  002194  C036  F012         	movff	strtol@s+1,___strtoxl@s+1
  1810  002198  C037  F013         	movff	strtol@endptr,___strtoxl@endptr
  1811  00219C  C038  F014         	movff	strtol@endptr+1,___strtoxl@endptr+1
  1812  0021A0  C039  F015         	movff	strtol@base,___strtoxl@base
  1813  0021A4  C03A  F016         	movff	strtol@base+1,___strtoxl@base+1
  1814  0021A8  0E01               	movlw	1
  1815  0021AA  6E17               	movwf	___strtoxl@is_signed,c
  1816  0021AC  EC56  F004         	call	___strtoxl	;wreg free
  1817  0021B0  C011  F035         	movff	?___strtoxl,?_strtol
  1818  0021B4  C012  F036         	movff	?___strtoxl+1,?_strtol+1
  1819  0021B8  C013  F037         	movff	?___strtoxl+2,?_strtol+2
  1820  0021BC  C014  F038         	movff	?___strtoxl+3,?_strtol+3
  1821  0021C0  0012               	return		;funcret
  1822  0021C2                     __end_of_strtol:
  1823                           	opt callstack 0
  1824                           
  1825 ;; *************** function ___strtoxl *****************
  1826 ;; Defined at:
  1827 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__strtoxl.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1830 ;;		 -> NULL(0), RX_buffer(500), 
  1831 ;;  endptr          2   18[COMRAM] PTR PTR unsigned char 
  1832 ;;		 -> packetHandler@end(2), 
  1833 ;;  base            2   20[COMRAM] int 
  1834 ;;  is_signed       1   22[COMRAM] unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  a               4   45[COMRAM] unsigned long 
  1837 ;;  limit           4   39[COMRAM] unsigned long 
  1838 ;;  prev_a          4   27[COMRAM] unsigned long 
  1839 ;;  cp              2   49[COMRAM] PTR const unsigned char 
  1840 ;;		 -> NULL(0), RX_buffer(500), 
  1841 ;;  c               1   51[COMRAM] unsigned char 
  1842 ;;  skip            1   44[COMRAM] unsigned char 
  1843 ;;  sign            1   43[COMRAM] unsigned char 
  1844 ;;  conv_done       1   38[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4   16[COMRAM] unsigned long 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         7       0       0       0       0       0       0       0       0
  1855 ;;      Locals:        25       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1857 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:       36 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    3
  1861 ;; This function calls:
  1862 ;;		___lmul
  1863 ;;		_isalpha
  1864 ;;		_isdigit
  1865 ;;		_isspace
  1866 ;;		_toupper
  1867 ;; This function is called by:
  1868 ;;		_strtol
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text4
  1873  0008AC                     __ptext4:
  1874                           	opt callstack 0
  1875  0008AC                     ___strtoxl:
  1876                           	opt callstack 25
  1877                           
  1878                           ;incstack = 0
  1879  0008AC  0E00               	movlw	0
  1880  0008AE  6E2E               	movwf	___strtoxl@a,c
  1881  0008B0  0E00               	movlw	0
  1882  0008B2  6E2F               	movwf	___strtoxl@a+1,c
  1883  0008B4  0E00               	movlw	0
  1884  0008B6  6E30               	movwf	___strtoxl@a+2,c
  1885  0008B8  0E00               	movlw	0
  1886  0008BA  6E31               	movwf	___strtoxl@a+3,c
  1887  0008BC  C011  F032         	movff	___strtoxl@s,___strtoxl@cp
  1888  0008C0  C012  F033         	movff	___strtoxl@s+1,___strtoxl@cp+1
  1889  0008C4  5032               	movf	___strtoxl@cp,w,c
  1890  0008C6  1033               	iorwf	___strtoxl@cp+1,w,c
  1891  0008C8  B4D8               	btfsc	status,2,c
  1892  0008CA  D159               	goto	l2757
  1893  0008CC  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  1894  0008D0  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1895  0008D4  50DF               	movf	indf2,w,c
  1896  0008D6  B4D8               	btfsc	status,2,c
  1897  0008D8  D152               	goto	l2757
  1898  0008DA  D002               	goto	L1
  1899  0008DC                     l2655:
  1900  0008DC  4A32               	infsnz	___strtoxl@cp,f,c
  1901  0008DE  2A33               	incf	___strtoxl@cp+1,f,c
  1902  0008E0                     L1:
  1903  0008E0  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  1904  0008E4  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1905  0008E8  50DF               	movf	indf2,w,c
  1906  0008EA  6E34               	movwf	___strtoxl@c,c
  1907  0008EC  0E01               	movlw	1
  1908  0008EE  6E26               	movwf	___strtoxl$1898,c
  1909  0008F0  0E20               	movlw	32
  1910  0008F2  1834               	xorwf	___strtoxl@c,w,c
  1911  0008F4  B4D8               	btfsc	status,2,c
  1912  0008F6  D013               	goto	l2665
  1913  0008F8  0EF7               	movlw	247
  1914  0008FA  6E18               	movwf	??___strtoxl& (0+255),c
  1915  0008FC  0EFF               	movlw	255
  1916  0008FE  6E19               	movwf	(??___strtoxl+1)& (0+255),c
  1917  000900  5034               	movf	___strtoxl@c,w,c
  1918  000902  6E1A               	movwf	(??___strtoxl+2)& (0+255),c
  1919  000904  6A1B               	clrf	(??___strtoxl+3)& (0+255),c
  1920  000906  5018               	movf	??___strtoxl,w,c
  1921  000908  261A               	addwf	??___strtoxl+2,f,c
  1922  00090A  5019               	movf	??___strtoxl+1,w,c
  1923  00090C  221B               	addwfc	??___strtoxl+3,f,c
  1924  00090E  501B               	movf	??___strtoxl+3,w,c
  1925  000910  E104               	bnz	u2400
  1926  000912  0E05               	movlw	5
  1927  000914  5C1A               	subwf	??___strtoxl+2,w,c
  1928  000916  A0D8               	btfss	status,0,c
  1929  000918  D002               	goto	l2665
  1930  00091A                     u2400:
  1931  00091A  0E00               	movlw	0
  1932  00091C  6E26               	movwf	___strtoxl$1898,c
  1933  00091E                     l2665:
  1934  00091E  C026  F020         	movff	___strtoxl$1898,___strtoxl$1897
  1935  000922  6A21               	clrf	___strtoxl$1897+1,c
  1936  000924  5020               	movf	___strtoxl$1897,w,c
  1937  000926  1021               	iorwf	___strtoxl$1897+1,w,c
  1938  000928  A4D8               	btfss	status,2,c
  1939  00092A  D7D8               	goto	l2655
  1940  00092C  0E00               	movlw	0
  1941  00092E  6E2C               	movwf	___strtoxl@sign,c
  1942  000930  0E00               	movlw	0
  1943  000932  6E27               	movwf	___strtoxl@conv_done,c
  1944  000934  0E00               	movlw	0
  1945  000936  6E2D               	movwf	___strtoxl@skip,c
  1946  000938  0E2D               	movlw	45
  1947  00093A  1834               	xorwf	___strtoxl@c,w,c
  1948  00093C  A4D8               	btfss	status,2,c
  1949  00093E  D00B               	goto	l2679
  1950  000940  0E01               	movlw	1
  1951  000942  6E2C               	movwf	___strtoxl@sign,c
  1952  000944                     l2677:
  1953  000944  4A32               	infsnz	___strtoxl@cp,f,c
  1954  000946  2A33               	incf	___strtoxl@cp+1,f,c
  1955  000948  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  1956  00094C  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1957  000950  50DF               	movf	indf2,w,c
  1958  000952  6E34               	movwf	___strtoxl@c,c
  1959  000954  D004               	goto	l2683
  1960  000956                     l2679:
  1961  000956  0E2B               	movlw	43
  1962  000958  1834               	xorwf	___strtoxl@c,w,c
  1963  00095A  B4D8               	btfsc	status,2,c
  1964  00095C  D7F3               	goto	l2677
  1965  00095E                     l2683:
  1966  00095E  0E30               	movlw	48
  1967  000960  1834               	xorwf	___strtoxl@c,w,c
  1968  000962  A4D8               	btfss	status,2,c
  1969  000964  D030               	goto	l2705
  1970  000966  4A32               	infsnz	___strtoxl@cp,f,c
  1971  000968  2A33               	incf	___strtoxl@cp+1,f,c
  1972  00096A  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  1973  00096E  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1974  000972  50DF               	movf	indf2,w,c
  1975  000974  6E34               	movwf	___strtoxl@c,c
  1976  000976  5015               	movf	___strtoxl@base,w,c
  1977  000978  1016               	iorwf	___strtoxl@base+1,w,c
  1978  00097A  B4D8               	btfsc	status,2,c
  1979  00097C  D005               	goto	u2460
  1980  00097E  0E10               	movlw	16
  1981  000980  1815               	xorwf	___strtoxl@base,w,c
  1982  000982  1016               	iorwf	___strtoxl@base+1,w,c
  1983  000984  A4D8               	btfss	status,2,c
  1984  000986  D015               	goto	l2699
  1985  000988                     u2460:
  1986  000988  0E78               	movlw	120
  1987  00098A  1834               	xorwf	___strtoxl@c,w,c
  1988  00098C  B4D8               	btfsc	status,2,c
  1989  00098E  D004               	goto	u2480
  1990  000990  0E58               	movlw	88
  1991  000992  1834               	xorwf	___strtoxl@c,w,c
  1992  000994  A4D8               	btfss	status,2,c
  1993  000996  D00D               	goto	l2699
  1994  000998                     u2480:
  1995  000998  0E00               	movlw	0
  1996  00099A  6E16               	movwf	___strtoxl@base+1,c
  1997  00099C  0E10               	movlw	16
  1998  00099E  6E15               	movwf	___strtoxl@base,c
  1999  0009A0  4A32               	infsnz	___strtoxl@cp,f,c
  2000  0009A2  2A33               	incf	___strtoxl@cp+1,f,c
  2001  0009A4  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  2002  0009A8  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  2003  0009AC  50DF               	movf	indf2,w,c
  2004  0009AE  6E34               	movwf	___strtoxl@c,c
  2005  0009B0  D00A               	goto	l2705
  2006  0009B2                     l2699:
  2007  0009B2  0E01               	movlw	1
  2008  0009B4  6E27               	movwf	___strtoxl@conv_done,c
  2009  0009B6  5015               	movf	___strtoxl@base,w,c
  2010  0009B8  1016               	iorwf	___strtoxl@base+1,w,c
  2011  0009BA  A4D8               	btfss	status,2,c
  2012  0009BC  D004               	goto	l2705
  2013  0009BE  0E00               	movlw	0
  2014  0009C0  6E16               	movwf	___strtoxl@base+1,c
  2015  0009C2  0E08               	movlw	8
  2016  0009C4  6E15               	movwf	___strtoxl@base,c
  2017  0009C6                     l2705:
  2018  0009C6  5015               	movf	___strtoxl@base,w,c
  2019  0009C8  1016               	iorwf	___strtoxl@base+1,w,c
  2020  0009CA  A4D8               	btfss	status,2,c
  2021  0009CC  D004               	goto	l1132
  2022  0009CE  0E00               	movlw	0
  2023  0009D0  6E16               	movwf	___strtoxl@base+1,c
  2024  0009D2  0E0A               	movlw	10
  2025  0009D4  6E15               	movwf	___strtoxl@base,c
  2026  0009D6                     l1132:
  2027  0009D6  5017               	movf	___strtoxl@is_signed,w,c
  2028  0009D8  B4D8               	btfsc	status,2,c
  2029  0009DA  D014               	goto	l1133
  2030  0009DC  502C               	movf	___strtoxl@sign,w,c
  2031  0009DE  A4D8               	btfss	status,2,c
  2032  0009E0  D008               	goto	l2713
  2033  0009E2  0EFF               	movlw	255
  2034  0009E4  6E28               	movwf	___strtoxl@limit,c
  2035  0009E6  0EFF               	movlw	255
  2036  0009E8  6E29               	movwf	___strtoxl@limit+1,c
  2037  0009EA  0EFF               	movlw	255
  2038  0009EC  6E2A               	movwf	___strtoxl@limit+2,c
  2039  0009EE  0E7F               	movlw	127
  2040  0009F0  D007               	goto	L2
  2041  0009F2                     l2713:
  2042  0009F2  0E00               	movlw	0
  2043  0009F4  6E28               	movwf	___strtoxl@limit,c
  2044  0009F6  0E00               	movlw	0
  2045  0009F8  6E29               	movwf	___strtoxl@limit+1,c
  2046  0009FA  0E00               	movlw	0
  2047  0009FC  6E2A               	movwf	___strtoxl@limit+2,c
  2048  0009FE  0E80               	movlw	128
  2049  000A00                     L2:
  2050  000A00  6E2B               	movwf	___strtoxl@limit+3,c
  2051  000A02  D004               	goto	l1139
  2052  000A04                     l1133:
  2053  000A04  6828               	setf	___strtoxl@limit,c
  2054  000A06  6829               	setf	___strtoxl@limit+1,c
  2055  000A08  682A               	setf	___strtoxl@limit+2,c
  2056  000A0A  682B               	setf	___strtoxl@limit+3,c
  2057  000A0C                     l1139:
  2058  000A0C  C02E  F01C         	movff	___strtoxl@a,___strtoxl@prev_a
  2059  000A10  C02F  F01D         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  2060  000A14  C030  F01E         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  2061  000A18  C031  F01F         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  2062  000A1C  0E9F               	movlw	159
  2063  000A1E  6E18               	movwf	??___strtoxl& (0+255),c
  2064  000A20  0EFF               	movlw	255
  2065  000A22  6E19               	movwf	(??___strtoxl+1)& (0+255),c
  2066  000A24  5034               	movf	___strtoxl@c,w,c
  2067  000A26  6E1A               	movwf	(??___strtoxl+2)& (0+255),c
  2068  000A28  6A1B               	clrf	(??___strtoxl+3)& (0+255),c
  2069  000A2A  0E20               	movlw	32
  2070  000A2C  121A               	iorwf	??___strtoxl+2,f,c
  2071  000A2E  0E00               	movlw	0
  2072  000A30  121B               	iorwf	??___strtoxl+3,f,c
  2073  000A32  5018               	movf	??___strtoxl,w,c
  2074  000A34  261A               	addwf	??___strtoxl+2,f,c
  2075  000A36  5019               	movf	??___strtoxl+1,w,c
  2076  000A38  221B               	addwfc	??___strtoxl+3,f,c
  2077  000A3A  501B               	movf	??___strtoxl+3,w,c
  2078  000A3C  E106               	bnz	u2530
  2079  000A3E  0E1A               	movlw	26
  2080  000A40  5C1A               	subwf	??___strtoxl+2,w,c
  2081  000A42  B0D8               	btfsc	status,0,c
  2082  000A44  D002               	goto	u2530
  2083  000A46  0E01               	movlw	1
  2084  000A48  D001               	goto	u2540
  2085  000A4A                     u2530:
  2086  000A4A  0E00               	movlw	0
  2087  000A4C                     u2540:
  2088  000A4C  6E22               	movwf	___strtoxl$1899,c
  2089  000A4E  6A23               	clrf	___strtoxl$1899+1,c
  2090  000A50  5022               	movf	___strtoxl$1899,w,c
  2091  000A52  1023               	iorwf	___strtoxl$1899+1,w,c
  2092  000A54  B4D8               	btfsc	status,2,c
  2093  000A56  D009               	goto	l2723
  2094  000A58  C034  F009         	movff	___strtoxl@c,toupper@c
  2095  000A5C  6A0A               	clrf	toupper@c+1,c
  2096  000A5E  ECD1  F00F         	call	_toupper	;wreg free
  2097  000A62  5009               	movf	?_toupper,w,c
  2098  000A64  0FC9               	addlw	201
  2099  000A66  6E34               	movwf	___strtoxl@c,c
  2100  000A68  D01C               	goto	l2731
  2101  000A6A                     l2723:
  2102  000A6A  0ED0               	movlw	208
  2103  000A6C  6E18               	movwf	??___strtoxl& (0+255),c
  2104  000A6E  0EFF               	movlw	255
  2105  000A70  6E19               	movwf	(??___strtoxl+1)& (0+255),c
  2106  000A72  5034               	movf	___strtoxl@c,w,c
  2107  000A74  6E1A               	movwf	(??___strtoxl+2)& (0+255),c
  2108  000A76  6A1B               	clrf	(??___strtoxl+3)& (0+255),c
  2109  000A78  5018               	movf	??___strtoxl,w,c
  2110  000A7A  261A               	addwf	??___strtoxl+2,f,c
  2111  000A7C  5019               	movf	??___strtoxl+1,w,c
  2112  000A7E  221B               	addwfc	??___strtoxl+3,f,c
  2113  000A80  501B               	movf	??___strtoxl+3,w,c
  2114  000A82  E106               	bnz	u2560
  2115  000A84  0E0A               	movlw	10
  2116  000A86  5C1A               	subwf	??___strtoxl+2,w,c
  2117  000A88  B0D8               	btfsc	status,0,c
  2118  000A8A  D002               	goto	u2560
  2119  000A8C  0E01               	movlw	1
  2120  000A8E  D001               	goto	u2570
  2121  000A90                     u2560:
  2122  000A90  0E00               	movlw	0
  2123  000A92                     u2570:
  2124  000A92  6E24               	movwf	___strtoxl$1900,c
  2125  000A94  6A25               	clrf	___strtoxl$1900+1,c
  2126  000A96  5024               	movf	___strtoxl$1900,w,c
  2127  000A98  1025               	iorwf	___strtoxl$1900+1,w,c
  2128  000A9A  B4D8               	btfsc	status,2,c
  2129  000A9C  D062               	goto	l2751
  2130  000A9E  0E30               	movlw	48
  2131  000AA0  5E34               	subwf	___strtoxl@c,f,c
  2132  000AA2                     l2731:
  2133  000AA2  5034               	movf	___strtoxl@c,w,c
  2134  000AA4  6E18               	movwf	??___strtoxl& (0+255),c
  2135  000AA6  6A19               	clrf	(??___strtoxl+1)& (0+255),c
  2136  000AA8  5015               	movf	___strtoxl@base,w,c
  2137  000AAA  5C18               	subwf	??___strtoxl,w,c
  2138  000AAC  5019               	movf	??___strtoxl+1,w,c
  2139  000AAE  0A80               	xorlw	128
  2140  000AB0  6E1A               	movwf	(??___strtoxl+2)& (0+255),c
  2141  000AB2  5016               	movf	___strtoxl@base+1,w,c
  2142  000AB4  0A80               	xorlw	128
  2143  000AB6  581A               	subwfb	(??___strtoxl+2)& (0+255),w,c
  2144  000AB8  B0D8               	btfsc	status,0,c
  2145  000ABA  D053               	goto	l2751
  2146  000ABC  502D               	movf	___strtoxl@skip,w,c
  2147  000ABE  A4D8               	btfss	status,2,c
  2148  000AC0  D045               	goto	l2747
  2149  000AC2  C015  F003         	movff	___strtoxl@base,___lmul@multiplier
  2150  000AC6  C016  F004         	movff	___strtoxl@base+1,___lmul@multiplier+1
  2151  000ACA  0E00               	movlw	0
  2152  000ACC  BE04               	btfsc	___lmul@multiplier+1,7,c
  2153  000ACE  0EFF               	movlw	-1
  2154  000AD0  6E05               	movwf	___lmul@multiplier+2,c
  2155  000AD2  6E06               	movwf	___lmul@multiplier+3,c
  2156  000AD4  C02E  F007         	movff	___strtoxl@a,___lmul@multiplicand
  2157  000AD8  C02F  F008         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  2158  000ADC  C030  F009         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  2159  000AE0  C031  F00A         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  2160  000AE4  EC01  F00F         	call	___lmul	;wreg free
  2161  000AE8  5034               	movf	___strtoxl@c,w,c
  2162  000AEA  2403               	addwf	?___lmul,w,c
  2163  000AEC  6E2E               	movwf	___strtoxl@a,c
  2164  000AEE  0E00               	movlw	0
  2165  000AF0  2004               	addwfc	?___lmul+1,w,c
  2166  000AF2  6E2F               	movwf	___strtoxl@a+1,c
  2167  000AF4  0E00               	movlw	0
  2168  000AF6  2005               	addwfc	?___lmul+2,w,c
  2169  000AF8  6E30               	movwf	___strtoxl@a+2,c
  2170  000AFA  0E00               	movlw	0
  2171  000AFC  2006               	addwfc	?___lmul+3,w,c
  2172  000AFE  6E31               	movwf	___strtoxl@a+3,c
  2173  000B00  501C               	movf	___strtoxl@prev_a,w,c
  2174  000B02  5C2E               	subwf	___strtoxl@a,w,c
  2175  000B04  501D               	movf	___strtoxl@prev_a+1,w,c
  2176  000B06  582F               	subwfb	___strtoxl@a+1,w,c
  2177  000B08  501E               	movf	___strtoxl@prev_a+2,w,c
  2178  000B0A  5830               	subwfb	___strtoxl@a+2,w,c
  2179  000B0C  501F               	movf	___strtoxl@prev_a+3,w,c
  2180  000B0E  5831               	subwfb	___strtoxl@a+3,w,c
  2181  000B10  A0D8               	btfss	status,0,c
  2182  000B12  D00D               	goto	u2630
  2183  000B14  5017               	movf	___strtoxl@is_signed,w,c
  2184  000B16  B4D8               	btfsc	status,2,c
  2185  000B18  D019               	goto	l2747
  2186  000B1A  502E               	movf	___strtoxl@a,w,c
  2187  000B1C  5C28               	subwf	___strtoxl@limit,w,c
  2188  000B1E  502F               	movf	___strtoxl@a+1,w,c
  2189  000B20  5829               	subwfb	___strtoxl@limit+1,w,c
  2190  000B22  5030               	movf	___strtoxl@a+2,w,c
  2191  000B24  582A               	subwfb	___strtoxl@limit+2,w,c
  2192  000B26  5031               	movf	___strtoxl@a+3,w,c
  2193  000B28  582B               	subwfb	___strtoxl@limit+3,w,c
  2194  000B2A  B0D8               	btfsc	status,0,c
  2195  000B2C  D00F               	goto	l2747
  2196  000B2E                     u2630:
  2197  000B2E  C028  F02E         	movff	___strtoxl@limit,___strtoxl@a
  2198  000B32  C029  F02F         	movff	___strtoxl@limit+1,___strtoxl@a+1
  2199  000B36  C02A  F030         	movff	___strtoxl@limit+2,___strtoxl@a+2
  2200  000B3A  C02B  F031         	movff	___strtoxl@limit+3,___strtoxl@a+3
  2201  000B3E  0E00               	movlw	0
  2202  000B40  0100               	movlb	0	; () banked
  2203  000B42  6F9A               	movwf	(_errno+1)& (0+255),b
  2204  000B44  0E22               	movlw	34
  2205  000B46  6F99               	movwf	_errno& (0+255),b
  2206  000B48  0E01               	movlw	1
  2207  000B4A  6E2D               	movwf	___strtoxl@skip,c
  2208  000B4C                     l2747:
  2209  000B4C  4A32               	infsnz	___strtoxl@cp,f,c
  2210  000B4E  2A33               	incf	___strtoxl@cp+1,f,c
  2211  000B50  C032  FFD9         	movff	___strtoxl@cp,fsr2l
  2212  000B54  C033  FFDA         	movff	___strtoxl@cp+1,fsr2h
  2213  000B58  50DF               	movf	indf2,w,c
  2214  000B5A  6E34               	movwf	___strtoxl@c,c
  2215  000B5C  0E01               	movlw	1
  2216  000B5E  6E27               	movwf	___strtoxl@conv_done,c
  2217  000B60  D755               	goto	l1139
  2218  000B62                     l2751:
  2219  000B62  502D               	movf	___strtoxl@skip,w,c
  2220  000B64  A4D8               	btfss	status,2,c
  2221  000B66  D00B               	goto	l2757
  2222  000B68  502C               	movf	___strtoxl@sign,w,c
  2223  000B6A  B4D8               	btfsc	status,2,c
  2224  000B6C  D008               	goto	l2757
  2225  000B6E  1E31               	comf	___strtoxl@a+3,f,c
  2226  000B70  1E30               	comf	___strtoxl@a+2,f,c
  2227  000B72  1E2F               	comf	___strtoxl@a+1,f,c
  2228  000B74  6C2E               	negf	___strtoxl@a,c
  2229  000B76  0E00               	movlw	0
  2230  000B78  222F               	addwfc	___strtoxl@a+1,f,c
  2231  000B7A  2230               	addwfc	___strtoxl@a+2,f,c
  2232  000B7C  2231               	addwfc	___strtoxl@a+3,f,c
  2233  000B7E                     l2757:
  2234  000B7E  5013               	movf	___strtoxl@endptr,w,c
  2235  000B80  1014               	iorwf	___strtoxl@endptr+1,w,c
  2236  000B82  B4D8               	btfsc	status,2,c
  2237  000B84  D00F               	goto	l2765
  2238  000B86  5027               	movf	___strtoxl@conv_done,w,c
  2239  000B88  A4D8               	btfss	status,2,c
  2240  000B8A  D004               	goto	l2763
  2241  000B8C  C011  F032         	movff	___strtoxl@s,___strtoxl@cp
  2242  000B90  C012  F033         	movff	___strtoxl@s+1,___strtoxl@cp+1
  2243  000B94                     l2763:
  2244  000B94  C013  FFD9         	movff	___strtoxl@endptr,fsr2l
  2245  000B98  C014  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  2246  000B9C  C032  FFDE         	movff	___strtoxl@cp,postinc2
  2247  000BA0  C033  FFDD         	movff	___strtoxl@cp+1,postdec2
  2248  000BA4                     l2765:
  2249  000BA4  C02E  F011         	movff	___strtoxl@a,?___strtoxl
  2250  000BA8  C02F  F012         	movff	___strtoxl@a+1,?___strtoxl+1
  2251  000BAC  C030  F013         	movff	___strtoxl@a+2,?___strtoxl+2
  2252  000BB0  C031  F014         	movff	___strtoxl@a+3,?___strtoxl+3
  2253  000BB4  0012               	return		;funcret
  2254  000BB6                     __end_of___strtoxl:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function _toupper *****************
  2258 ;; Defined at:
  2259 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  c               2    8[COMRAM] int 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    8[COMRAM] int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        8 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		_islower
  2282 ;; This function is called by:
  2283 ;;		___strtoxl
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text5
  2288  001FA2                     __ptext5:
  2289                           	opt callstack 0
  2290  001FA2                     _toupper:
  2291                           	opt callstack 25
  2292                           
  2293                           ;incstack = 0
  2294  001FA2  0E9F               	movlw	159
  2295  001FA4  6E0B               	movwf	??_toupper& (0+255),c
  2296  001FA6  0EFF               	movlw	255
  2297  001FA8  6E0C               	movwf	(??_toupper+1)& (0+255),c
  2298  001FAA  C009  F00D         	movff	toupper@c,??_toupper+2
  2299  001FAE  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  2300  001FB2  500B               	movf	??_toupper,w,c
  2301  001FB4  260D               	addwf	??_toupper+2,f,c
  2302  001FB6  500C               	movf	??_toupper+1,w,c
  2303  001FB8  220E               	addwfc	??_toupper+3,f,c
  2304  001FBA  500E               	movf	??_toupper+3,w,c
  2305  001FBC  E106               	bnz	u2180
  2306  001FBE  0E1A               	movlw	26
  2307  001FC0  5C0D               	subwf	??_toupper+2,w,c
  2308  001FC2  B0D8               	btfsc	status,0,c
  2309  001FC4  D002               	goto	u2180
  2310  001FC6  0E01               	movlw	1
  2311  001FC8  D001               	goto	u2190
  2312  001FCA                     u2180:
  2313  001FCA  0E00               	movlw	0
  2314  001FCC                     u2190:
  2315  001FCC  6E0F               	movwf	_toupper$1950,c
  2316  001FCE  6A10               	clrf	_toupper$1950+1,c
  2317  001FD0  500F               	movf	_toupper$1950,w,c
  2318  001FD2  1010               	iorwf	_toupper$1950+1,w,c
  2319  001FD4  B4D8               	btfsc	status,2,c
  2320  001FD6  D005               	goto	l1203
  2321  001FD8  0E5F               	movlw	95
  2322  001FDA  1409               	andwf	toupper@c,w,c
  2323  001FDC  6E09               	movwf	?_toupper,c
  2324  001FDE  6A0A               	clrf	?_toupper+1,c
  2325  001FE0  0012               	return	
  2326  001FE2                     l1203:
  2327  001FE2  C009  F009         	movff	toupper@c,?_toupper
  2328  001FE6  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  2329  001FEA  0012               	return		;funcret
  2330  001FEC                     __end_of_toupper:
  2331                           	opt callstack 0
  2332                           
  2333 ;; *************** function _islower *****************
  2334 ;; Defined at:
  2335 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  c               2    2[COMRAM] int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    2[COMRAM] int 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2349 ;;      Params:         2       0       0       0       0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2351 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2352 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2353 ;;Total ram usage:        6 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_toupper
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text6
  2364  002224                     __ptext6:
  2365                           	opt callstack 0
  2366  002224                     _islower:
  2367                           	opt callstack 25
  2368                           
  2369                           ;incstack = 0
  2370  002224  0E9F               	movlw	159
  2371  002226  6E05               	movwf	??_islower& (0+255),c
  2372  002228  0EFF               	movlw	255
  2373  00222A  6E06               	movwf	(??_islower+1)& (0+255),c
  2374  00222C  C003  F007         	movff	islower@c,??_islower+2
  2375  002230  C004  F008         	movff	islower@c+1,??_islower+3
  2376  002234  5005               	movf	??_islower,w,c
  2377  002236  2607               	addwf	??_islower+2,f,c
  2378  002238  5006               	movf	??_islower+1,w,c
  2379  00223A  2208               	addwfc	??_islower+3,f,c
  2380  00223C  5008               	movf	??_islower+3,w,c
  2381  00223E  E106               	bnz	u1970
  2382  002240  0E1A               	movlw	26
  2383  002242  5C07               	subwf	??_islower+2,w,c
  2384  002244  B0D8               	btfsc	status,0,c
  2385  002246  D002               	goto	u1970
  2386  002248  0E01               	movlw	1
  2387  00224A  D001               	goto	u1980
  2388  00224C                     u1970:
  2389  00224C  0E00               	movlw	0
  2390  00224E                     u1980:
  2391  00224E  6E03               	movwf	?_islower,c
  2392  002250  6A04               	clrf	?_islower+1,c
  2393  002252  0012               	return		;funcret
  2394  002254                     __end_of_islower:
  2395                           	opt callstack 0
  2396                           
  2397 ;; *************** function _isspace *****************
  2398 ;; Defined at:
  2399 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  c               2    2[COMRAM] int 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  2    2[COMRAM] int 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         2       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:        7 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		___strtoxl
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text7
  2428  002076                     __ptext7:
  2429                           	opt callstack 0
  2430  002076                     _isspace:
  2431                           	opt callstack 26
  2432                           
  2433                           ;incstack = 0
  2434  002076  0E01               	movlw	1
  2435  002078  6E09               	movwf	_isspace$1926,c
  2436  00207A  0E20               	movlw	32
  2437  00207C  1803               	xorwf	isspace@c,w,c
  2438  00207E  1004               	iorwf	isspace@c+1,w,c
  2439  002080  B4D8               	btfsc	status,2,c
  2440  002082  D014               	goto	l2527
  2441  002084  0EF7               	movlw	247
  2442  002086  6E05               	movwf	??_isspace& (0+255),c
  2443  002088  0EFF               	movlw	255
  2444  00208A  6E06               	movwf	(??_isspace+1)& (0+255),c
  2445  00208C  C003  F007         	movff	isspace@c,??_isspace+2
  2446  002090  C004  F008         	movff	isspace@c+1,??_isspace+3
  2447  002094  5005               	movf	??_isspace,w,c
  2448  002096  2607               	addwf	??_isspace+2,f,c
  2449  002098  5006               	movf	??_isspace+1,w,c
  2450  00209A  2208               	addwfc	??_isspace+3,f,c
  2451  00209C  5008               	movf	??_isspace+3,w,c
  2452  00209E  E104               	bnz	u2150
  2453  0020A0  0E05               	movlw	5
  2454  0020A2  5C07               	subwf	??_isspace+2,w,c
  2455  0020A4  A0D8               	btfss	status,0,c
  2456  0020A6  D002               	goto	l2527
  2457  0020A8                     u2150:
  2458  0020A8  0E00               	movlw	0
  2459  0020AA  6E09               	movwf	_isspace$1926,c
  2460  0020AC                     l2527:
  2461  0020AC  C009  F003         	movff	_isspace$1926,?_isspace
  2462  0020B0  6A04               	clrf	?_isspace+1,c
  2463  0020B2  0012               	return		;funcret
  2464  0020B4                     __end_of_isspace:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _isdigit *****************
  2468 ;; Defined at:
  2469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  c               2    2[COMRAM] int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    2[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2483 ;;      Params:         2       0       0       0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2485 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2486 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2487 ;;Total ram usage:        6 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		___strtoxl
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text8
  2498  002254                     __ptext8:
  2499                           	opt callstack 0
  2500  002254                     _isdigit:
  2501                           	opt callstack 26
  2502                           
  2503                           ;incstack = 0
  2504  002254  0ED0               	movlw	208
  2505  002256  6E05               	movwf	??_isdigit& (0+255),c
  2506  002258  0EFF               	movlw	255
  2507  00225A  6E06               	movwf	(??_isdigit+1)& (0+255),c
  2508  00225C  C003  F007         	movff	isdigit@c,??_isdigit+2
  2509  002260  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  2510  002264  5005               	movf	??_isdigit,w,c
  2511  002266  2607               	addwf	??_isdigit+2,f,c
  2512  002268  5006               	movf	??_isdigit+1,w,c
  2513  00226A  2208               	addwfc	??_isdigit+3,f,c
  2514  00226C  5008               	movf	??_isdigit+3,w,c
  2515  00226E  E106               	bnz	u2210
  2516  002270  0E0A               	movlw	10
  2517  002272  5C07               	subwf	??_isdigit+2,w,c
  2518  002274  B0D8               	btfsc	status,0,c
  2519  002276  D002               	goto	u2210
  2520  002278  0E01               	movlw	1
  2521  00227A  D001               	goto	u2220
  2522  00227C                     u2210:
  2523  00227C  0E00               	movlw	0
  2524  00227E                     u2220:
  2525  00227E  6E03               	movwf	?_isdigit,c
  2526  002280  6A04               	clrf	?_isdigit+1,c
  2527  002282  0012               	return		;funcret
  2528  002284                     __end_of_isdigit:
  2529                           	opt callstack 0
  2530                           
  2531 ;; *************** function _isalpha *****************
  2532 ;; Defined at:
  2533 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  c               2    2[COMRAM] int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2    2[COMRAM] int 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         2       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2550 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        6 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		___strtoxl
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text9
  2562  00215C                     __ptext9:
  2563                           	opt callstack 0
  2564  00215C                     _isalpha:
  2565                           	opt callstack 26
  2566                           
  2567                           ;incstack = 0
  2568  00215C  0E9F               	movlw	159
  2569  00215E  6E05               	movwf	??_isalpha& (0+255),c
  2570  002160  0EFF               	movlw	255
  2571  002162  6E06               	movwf	(??_isalpha+1)& (0+255),c
  2572  002164  0E20               	movlw	32
  2573  002166  1003               	iorwf	isalpha@c,w,c
  2574  002168  6E07               	movwf	(??_isalpha+2)& (0+255),c
  2575  00216A  0E00               	movlw	0
  2576  00216C  1004               	iorwf	isalpha@c+1,w,c
  2577  00216E  6E08               	movwf	(??_isalpha+3)& (0+255),c
  2578  002170  5005               	movf	??_isalpha,w,c
  2579  002172  2607               	addwf	??_isalpha+2,f,c
  2580  002174  5006               	movf	??_isalpha+1,w,c
  2581  002176  2208               	addwfc	??_isalpha+3,f,c
  2582  002178  5008               	movf	??_isalpha+3,w,c
  2583  00217A  E106               	bnz	u2160
  2584  00217C  0E1A               	movlw	26
  2585  00217E  5C07               	subwf	??_isalpha+2,w,c
  2586  002180  B0D8               	btfsc	status,0,c
  2587  002182  D002               	goto	u2160
  2588  002184  0E01               	movlw	1
  2589  002186  D001               	goto	u2170
  2590  002188                     u2160:
  2591  002188  0E00               	movlw	0
  2592  00218A                     u2170:
  2593  00218A  6E03               	movwf	?_isalpha,c
  2594  00218C  6A04               	clrf	?_isalpha+1,c
  2595  00218E  0012               	return		;funcret
  2596  002190                     __end_of_isalpha:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function ___lmul *****************
  2600 ;; Defined at:
  2601 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  multiplier      4    2[COMRAM] unsigned long 
  2604 ;;  multiplicand    4    6[COMRAM] unsigned long 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  product         4   10[COMRAM] unsigned long 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  4    2[COMRAM] unsigned long 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2616 ;;      Params:         8       0       0       0       0       0       0       0       0
  2617 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2619 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2620 ;;Total ram usage:       12 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		___strtoxl
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text10
  2631  001E02                     __ptext10:
  2632                           	opt callstack 0
  2633  001E02                     ___lmul:
  2634                           	opt callstack 26
  2635                           
  2636                           ;incstack = 0
  2637  001E02  0E00               	movlw	0
  2638  001E04  6E0B               	movwf	___lmul@product,c
  2639  001E06  0E00               	movlw	0
  2640  001E08  6E0C               	movwf	___lmul@product+1,c
  2641  001E0A  0E00               	movlw	0
  2642  001E0C  6E0D               	movwf	___lmul@product+2,c
  2643  001E0E  0E00               	movlw	0
  2644  001E10  6E0E               	movwf	___lmul@product+3,c
  2645  001E12                     l2479:
  2646  001E12  A003               	btfss	___lmul@multiplier,0,c
  2647  001E14  D008               	goto	l2483
  2648  001E16  5007               	movf	___lmul@multiplicand,w,c
  2649  001E18  260B               	addwf	___lmul@product,f,c
  2650  001E1A  5008               	movf	___lmul@multiplicand+1,w,c
  2651  001E1C  220C               	addwfc	___lmul@product+1,f,c
  2652  001E1E  5009               	movf	___lmul@multiplicand+2,w,c
  2653  001E20  220D               	addwfc	___lmul@product+2,f,c
  2654  001E22  500A               	movf	___lmul@multiplicand+3,w,c
  2655  001E24  220E               	addwfc	___lmul@product+3,f,c
  2656  001E26                     l2483:
  2657  001E26  90D8               	bcf	status,0,c
  2658  001E28  3607               	rlcf	___lmul@multiplicand,f,c
  2659  001E2A  3608               	rlcf	___lmul@multiplicand+1,f,c
  2660  001E2C  3609               	rlcf	___lmul@multiplicand+2,f,c
  2661  001E2E  360A               	rlcf	___lmul@multiplicand+3,f,c
  2662  001E30  90D8               	bcf	status,0,c
  2663  001E32  3206               	rrcf	___lmul@multiplier+3,f,c
  2664  001E34  3205               	rrcf	___lmul@multiplier+2,f,c
  2665  001E36  3204               	rrcf	___lmul@multiplier+1,f,c
  2666  001E38  3203               	rrcf	___lmul@multiplier,f,c
  2667  001E3A  5003               	movf	___lmul@multiplier,w,c
  2668  001E3C  1004               	iorwf	___lmul@multiplier+1,w,c
  2669  001E3E  1005               	iorwf	___lmul@multiplier+2,w,c
  2670  001E40  1006               	iorwf	___lmul@multiplier+3,w,c
  2671  001E42  A4D8               	btfss	status,2,c
  2672  001E44  D7E6               	goto	l2479
  2673  001E46  C00B  F003         	movff	___lmul@product,?___lmul
  2674  001E4A  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  2675  001E4E  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  2676  001E52  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  2677  001E56  0012               	return		;funcret
  2678  001E58                     __end_of___lmul:
  2679                           	opt callstack 0
  2680                           
  2681 ;; *************** function _sprintf *****************
  2682 ;; Defined at:
  2683 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  s               2    2[BANK0 ] PTR unsigned char 
  2686 ;;		 -> packetHandler@answer_1211(50), name(50), packetHandler@answer_1204(50), packetHandler@answer_1195(20), 
  2687 ;;  fmt             2    4[BANK0 ] PTR const unsigned char 
  2688 ;;		 -> STR_31(20), STR_30(5), STR_26(16), STR_21(7), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2691 ;;  ap              2   12[BANK0 ] PTR void [1]
  2692 ;;		 -> ?_sprintf(2), 
  2693 ;;  ret             2    0        int 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  2    2[BANK0 ] int 
  2696 ;; Registers used:
  2697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2703 ;;      Params:         0       8       0       0       0       0       0       0       0
  2704 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2706 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2707 ;;Total ram usage:       18 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    8
  2710 ;; This function calls:
  2711 ;;		_vfprintf
  2712 ;; This function is called by:
  2713 ;;		_packetHandler
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text11
  2718  001F00                     __ptext11:
  2719                           	opt callstack 0
  2720  001F00                     _sprintf:
  2721                           	opt callstack 21
  2722                           
  2723                           ;incstack = 0
  2724  001F00  0ECF               	movlw	low (?_sprintf+4)
  2725  001F02  0100               	movlb	0	; () banked
  2726  001F04  6FD5               	movwf	sprintf@ap& (0+255),b
  2727  001F06  0E00               	movlw	high (?_sprintf+4)
  2728  001F08  6FD6               	movwf	(sprintf@ap+1)& (0+255),b
  2729  001F0A  C0CB  F0D7         	movff	sprintf@s,sprintf@f
  2730  001F0E  C0CC  F0D8         	movff	sprintf@s+1,sprintf@f+1
  2731                           
  2732                           ; BSR set to: 0
  2733  001F12  0E00               	movlw	0
  2734  001F14  6FDA               	movwf	(sprintf@f+3)& (0+255),b
  2735  001F16  0E00               	movlw	0
  2736  001F18  6FD9               	movwf	(sprintf@f+2)& (0+255),b
  2737                           
  2738                           ; BSR set to: 0
  2739  001F1A  0E00               	movlw	0
  2740  001F1C  6FDC               	movwf	(sprintf@f+5)& (0+255),b
  2741  001F1E  0E00               	movlw	0
  2742  001F20  6FDB               	movwf	(sprintf@f+4)& (0+255),b
  2743                           
  2744                           ; BSR set to: 0
  2745  001F22  0ED7               	movlw	low sprintf@f
  2746  001F24  6E54               	movwf	vfprintf@fp,c
  2747  001F26  0E00               	movlw	high sprintf@f
  2748  001F28  6E55               	movwf	vfprintf@fp+1,c
  2749  001F2A  C0CD  F056         	movff	sprintf@fmt,vfprintf@fmt
  2750  001F2E  C0CE  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2751  001F32  0ED5               	movlw	low sprintf@ap
  2752  001F34  6E58               	movwf	vfprintf@ap,c
  2753  001F36  0E00               	movlw	high sprintf@ap
  2754  001F38  6E59               	movwf	vfprintf@ap+1,c
  2755  001F3A  EC2C  F00F         	call	_vfprintf	;wreg free
  2756  001F3E  0100               	movlb	0	; () banked
  2757  001F40  51D9               	movf	(sprintf@f+2)& (0+255),w,b
  2758  001F42  25CB               	addwf	sprintf@s& (0+255),w,b
  2759  001F44  6ED9               	movwf	fsr2l,c
  2760  001F46  51DA               	movf	(sprintf@f+3)& (0+255),w,b
  2761  001F48  21CC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2762  001F4A  6EDA               	movwf	fsr2h,c
  2763  001F4C  0E00               	movlw	0
  2764  001F4E  6EDF               	movwf	indf2,c
  2765                           
  2766                           ; BSR set to: 0
  2767  001F50  0012               	return		;funcret
  2768  001F52                     __end_of_sprintf:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _vfprintf *****************
  2772 ;; Defined at:
  2773 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  2776 ;;		 -> sprintf@f(6), 
  2777 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  2778 ;;		 -> STR_31(20), STR_30(5), STR_26(16), STR_21(7), 
  2779 ;;  ap              2   87[COMRAM] PTR PTR void 
  2780 ;;		 -> sprintf@ap(2), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  2783 ;;		 -> STR_31(20), STR_30(5), STR_26(16), STR_21(7), 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2   83[COMRAM] int 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2793 ;;      Params:         6       0       0       0       0       0       0       0       0
  2794 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2796 ;;      Totals:         6       2       0       0       0       0       0       0       0
  2797 ;;Total ram usage:        8 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    7
  2800 ;; This function calls:
  2801 ;;		_vfpfcnvrt
  2802 ;; This function is called by:
  2803 ;;		_sprintf
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text12
  2808  001E58                     __ptext12:
  2809                           	opt callstack 0
  2810  001E58                     _vfprintf:
  2811                           	opt callstack 21
  2812                           
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;incstack = 0
  2817  001E58  C056  F0C9         	movff	vfprintf@fmt,vfprintf@cfmt
  2818  001E5C  C057  F0CA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2819                           
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2821  001E60  0E00               	movlw	0
  2822  001E62  0100               	movlb	0	; () banked
  2823  001E64  6F9C               	movwf	(_nout+1)& (0+255),b
  2824  001E66  0E00               	movlw	0
  2825  001E68  6F9B               	movwf	_nout& (0+255),b
  2826                           
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2828  001E6A  D013               	goto	l3461
  2829  001E6C                     l3459:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2833  001E6C  C054  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2834  001E70  C055  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2835  001E74  0EC9               	movlw	low vfprintf@cfmt
  2836  001E76  6E44               	movwf	vfpfcnvrt@fmt,c
  2837  001E78  0E00               	movlw	high vfprintf@cfmt
  2838  001E7A  6E45               	movwf	vfpfcnvrt@fmt+1,c
  2839  001E7C  C058  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2840  001E80  C059  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2841  001E84  ECCD  F009         	call	_vfpfcnvrt	;wreg free
  2842  001E88  5042               	movf	?_vfpfcnvrt,w,c
  2843  001E8A  0100               	movlb	0	; () banked
  2844  001E8C  279B               	addwf	_nout& (0+255),f,b
  2845  001E8E  5043               	movf	?_vfpfcnvrt+1,w,c
  2846  001E90  239C               	addwfc	(_nout+1)& (0+255),f,b
  2847  001E92                     l3461:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2851  001E92  C0C9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2852  001E96  C0CA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2853  001E9A                     	if	0	;tblptru may be non-zero
  2854  001E9A                     	endif
  2855  001E9A                     	if	0	;tblptru may be non-zero
  2856  001E9A                     	endif
  2857  001E9A  0008               	tblrd		*
  2858  001E9C  50F5               	movf	tablat,w,c
  2859  001E9E  0900               	iorlw	0
  2860  001EA0  A4D8               	btfss	status,2,c
  2861  001EA2  D7E4               	goto	l3459
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2865  001EA4  C09B  F054         	movff	_nout,?_vfprintf
  2866  001EA8  C09C  F055         	movff	_nout+1,?_vfprintf+1
  2867                           
  2868                           ; BSR set to: 0
  2869  001EAC  0012               	return		;funcret
  2870  001EAE                     __end_of_vfprintf:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function _vfpfcnvrt *****************
  2874 ;; Defined at:
  2875 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2878 ;;		 -> sprintf@f(6), 
  2879 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2880 ;;		 -> vfprintf@cfmt(2), 
  2881 ;;  ap              2   69[COMRAM] PTR PTR void 
  2882 ;;		 -> sprintf@ap(2), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  ll              8   73[COMRAM] long long 
  2885 ;;  llu             8    0        unsigned long long 
  2886 ;;  f               4    0        unsigned long long 
  2887 ;;  vp              3    0        PTR void 
  2888 ;;  ct              3    0        unsigned char [3]
  2889 ;;  cp              2   81[COMRAM] PTR unsigned char 
  2890 ;;		 -> ?_sprintf(2), NULL(0), RX_buffer(500), 
  2891 ;;  i               2    0        int 
  2892 ;;  done            2    0        int 
  2893 ;;  c               1    0        unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2   65[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         6       0       0       0       0       0       0       0       0
  2904 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2906 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:       18 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    6
  2910 ;; This function calls:
  2911 ;;		_dtoa
  2912 ;;		_fputc
  2913 ;;		_stoa
  2914 ;; This function is called by:
  2915 ;;		_vfprintf
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text13
  2920  00139A                     __ptext13:
  2921                           	opt callstack 0
  2922  00139A                     _vfpfcnvrt:
  2923                           	opt callstack 21
  2924                           
  2925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;incstack = 0
  2929  00139A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  00139E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  0013A2  CFDE FFF6          	movff	postinc2,tblptrl
  2932  0013A6  CFDD FFF7          	movff	postdec2,tblptrh
  2933  0013AA                     	if	0	;tblptru may be non-zero
  2934  0013AA                     	endif
  2935  0013AA                     	if	0	;tblptru may be non-zero
  2936  0013AA                     	endif
  2937  0013AA  0008               	tblrd		*
  2938  0013AC  50F5               	movf	tablat,w,c
  2939  0013AE  0A25               	xorlw	37
  2940  0013B0  A4D8               	btfss	status,2,c
  2941  0013B2  D0D1               	goto	l3417
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2944  0013B4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2945  0013B8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2946  0013BC  2ADE               	incf	postinc2,f,c
  2947  0013BE  0E00               	movlw	0
  2948  0013C0  22DD               	addwfc	postdec2,f,c
  2949                           
  2950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2951  0013C2  0E00               	movlw	0
  2952  0013C4  0100               	movlb	0	; () banked
  2953  0013C6  6F9E               	movwf	(_width+1)& (0+255),b
  2954  0013C8  0E00               	movlw	0
  2955  0013CA  6F9D               	movwf	_width& (0+255),b
  2956  0013CC  C09D  F0A1         	movff	_width,_flags
  2957  0013D0  C09E  F0A2         	movff	_width+1,_flags+1
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2961  0013D4  699F               	setf	_prec& (0+255),b
  2962  0013D6  69A0               	setf	(_prec+1)& (0+255),b
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2966  0013D8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  0013DC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  0013E0  CFDE FFF6          	movff	postinc2,tblptrl
  2969  0013E4  CFDD FFF7          	movff	postdec2,tblptrh
  2970  0013E8                     	if	0	;tblptru may be non-zero
  2971  0013E8                     	endif
  2972  0013E8                     	if	0	;tblptru may be non-zero
  2973  0013E8                     	endif
  2974  0013E8  0008               	tblrd		*
  2975  0013EA  50F5               	movf	tablat,w,c
  2976  0013EC  0A64               	xorlw	100
  2977  0013EE  B4D8               	btfsc	status,2,c
  2978  0013F0  D00D               	goto	u3460
  2979                           
  2980                           ; BSR set to: 0
  2981  0013F2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2982  0013F6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2983  0013FA  CFDE FFF6          	movff	postinc2,tblptrl
  2984  0013FE  CFDD FFF7          	movff	postdec2,tblptrh
  2985  001402                     	if	0	;tblptru may be non-zero
  2986  001402                     	endif
  2987  001402                     	if	0	;tblptru may be non-zero
  2988  001402                     	endif
  2989  001402  0008               	tblrd		*
  2990  001404  50F5               	movf	tablat,w,c
  2991  001406  0A69               	xorlw	105
  2992  001408  A4D8               	btfss	status,2,c
  2993  00140A  D03F               	goto	l3393
  2994  00140C                     u3460:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2998  00140C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  001410  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  001414  2ADE               	incf	postinc2,f,c
  3001  001416  0E00               	movlw	0
  3002  001418  22DD               	addwfc	postdec2,f,c
  3003                           
  3004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3005  00141A  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3006  00141E  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3007  001422  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3008  001426  0E02               	movlw	2
  3009  001428  26DE               	addwf	postinc2,f,c
  3010  00142A  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3011  00142E  0E00               	movlw	0
  3012  001430  22DD               	addwfc	postdec2,f,c
  3013  001432  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3014  001436  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3015  00143A  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  3016  00143E  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  3017  001442  0E00               	movlw	0
  3018  001444  BE4B               	btfsc	vfpfcnvrt@ll+1,7,c
  3019  001446  0EFF               	movlw	-1
  3020  001448  6E4C               	movwf	vfpfcnvrt@ll+2,c
  3021  00144A  6E4D               	movwf	vfpfcnvrt@ll+3,c
  3022  00144C  6E4E               	movwf	vfpfcnvrt@ll+4,c
  3023  00144E  6E4F               	movwf	vfpfcnvrt@ll+5,c
  3024  001450  6E50               	movwf	vfpfcnvrt@ll+6,c
  3025  001452  6E51               	movwf	vfpfcnvrt@ll+7,c
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3029  001454  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3030  001458  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3031  00145C  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3032  001460  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3033  001464  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3034  001468  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3035  00146C  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3036  001470  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3037  001474  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3038  001478  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3039  00147C  ECAA  F008         	call	_dtoa	;wreg free
  3040  001480  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  3041  001484  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3042  001488  0012               	return	
  3043  00148A                     l3393:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3047  00148A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3048  00148E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3049  001492  CFDE FFF6          	movff	postinc2,tblptrl
  3050  001496  CFDD FFF7          	movff	postdec2,tblptrh
  3051  00149A                     	if	0	;tblptru may be non-zero
  3052  00149A                     	endif
  3053  00149A                     	if	0	;tblptru may be non-zero
  3054  00149A                     	endif
  3055  00149A  0008               	tblrd		*
  3056  00149C  50F5               	movf	tablat,w,c
  3057  00149E  0A73               	xorlw	115
  3058  0014A0  A4D8               	btfss	status,2,c
  3059  0014A2  D02A               	goto	l3401
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3063  0014A4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3064  0014A8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3065  0014AC  2ADE               	incf	postinc2,f,c
  3066  0014AE  0E00               	movlw	0
  3067  0014B0  22DD               	addwfc	postdec2,f,c
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3070  0014B2  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3071  0014B6  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3072  0014BA  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3073  0014BE  0E02               	movlw	2
  3074  0014C0  26DE               	addwf	postinc2,f,c
  3075  0014C2  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3076  0014C6  0E00               	movlw	0
  3077  0014C8  22DD               	addwfc	postdec2,f,c
  3078  0014CA  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3079  0014CE  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3080  0014D2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  3081  0014D6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3085  0014DA  C042  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  3086  0014DE  C043  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3087  0014E2  C052  F00E         	movff	vfpfcnvrt@cp,stoa@s
  3088  0014E6  C053  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3089  0014EA  EC02  F00C         	call	_stoa	;wreg free
  3090  0014EE  C00C  F042         	movff	?_stoa,?_vfpfcnvrt
  3091  0014F2  C00D  F043         	movff	?_stoa+1,?_vfpfcnvrt+1
  3092  0014F6  0012               	return	
  3093  0014F8                     l3401:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3097  0014F8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3098  0014FC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3099  001500  CFDE FFF6          	movff	postinc2,tblptrl
  3100  001504  CFDD FFF7          	movff	postdec2,tblptrh
  3101  001508                     	if	0	;tblptru may be non-zero
  3102  001508                     	endif
  3103  001508                     	if	0	;tblptru may be non-zero
  3104  001508                     	endif
  3105  001508  0008               	tblrd		*
  3106  00150A  50F5               	movf	tablat,w,c
  3107  00150C  0A25               	xorlw	37
  3108  00150E  A4D8               	btfss	status,2,c
  3109  001510  D016               	goto	l3411
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3113  001512  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3114  001516  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3115  00151A  2ADE               	incf	postinc2,f,c
  3116  00151C  0E00               	movlw	0
  3117  00151E  22DD               	addwfc	postdec2,f,c
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3121  001520  0E00               	movlw	0
  3122  001522  6E04               	movwf	fputc@c+1,c
  3123  001524  0E25               	movlw	37
  3124  001526  6E03               	movwf	fputc@c,c
  3125  001528  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3126  00152C  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3127  001530  EC7B  F00D         	call	_fputc	;wreg free
  3128  001534                     l3407:
  3129                           
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3131  001534  0E00               	movlw	0
  3132  001536  6E43               	movwf	?_vfpfcnvrt+1,c
  3133  001538  0E01               	movlw	1
  3134  00153A  6E42               	movwf	?_vfpfcnvrt,c
  3135  00153C  0012               	return	
  3136  00153E                     l3411:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3140  00153E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3141  001542  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3142  001546  2ADE               	incf	postinc2,f,c
  3143  001548  0E00               	movlw	0
  3144  00154A  22DD               	addwfc	postdec2,f,c
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3148  00154C  0E00               	movlw	0
  3149  00154E  6E43               	movwf	?_vfpfcnvrt+1,c
  3150  001550  0E00               	movlw	0
  3151  001552  6E42               	movwf	?_vfpfcnvrt,c
  3152  001554  0012               	return	
  3153  001556                     l3417:
  3154                           
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3156  001556  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3157  00155A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3158  00155E  CFDE FFF6          	movff	postinc2,tblptrl
  3159  001562  CFDD FFF7          	movff	postdec2,tblptrh
  3160  001566                     	if	0	;tblptru may be non-zero
  3161  001566                     	endif
  3162  001566                     	if	0	;tblptru may be non-zero
  3163  001566                     	endif
  3164  001566  0008               	tblrd		*
  3165  001568  50F5               	movf	tablat,w,c
  3166  00156A  6E03               	movwf	fputc@c,c
  3167  00156C  6A04               	clrf	fputc@c+1,c
  3168  00156E  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3169  001572  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3170  001576  EC7B  F00D         	call	_fputc	;wreg free
  3171                           
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3173  00157A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3174  00157E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3175  001582  2ADE               	incf	postinc2,f,c
  3176  001584  0E00               	movlw	0
  3177  001586  22DD               	addwfc	postdec2,f,c
  3178  001588  D7D5               	goto	l3407
  3179  00158A                     __end_of_vfpfcnvrt:
  3180                           	opt callstack 0
  3181                           
  3182 ;; *************** function _stoa *****************
  3183 ;; Defined at:
  3184 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3187 ;;		 -> sprintf@f(6), 
  3188 ;;  s               2   13[COMRAM] PTR unsigned char 
  3189 ;;		 -> ?_sprintf(2), NULL(0), RX_buffer(500), 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  nuls            7   16[COMRAM] unsigned char [7]
  3192 ;;  l               2   31[COMRAM] int 
  3193 ;;  p               2   29[COMRAM] int 
  3194 ;;  cp              2   27[COMRAM] PTR unsigned char 
  3195 ;;		 -> ?_sprintf(2), stoa@nuls(7), NULL(0), RX_buffer(500), 
  3196 ;;  w               2   25[COMRAM] int 
  3197 ;;  i               2   23[COMRAM] int 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2   11[COMRAM] int 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3207 ;;      Params:         4       0       0       0       0       0       0       0       0
  3208 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3209 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3210 ;;      Totals:        22       0       0       0       0       0       0       0       0
  3211 ;;Total ram usage:       22 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_fputc
  3216 ;;		_strlen
  3217 ;; This function is called by:
  3218 ;;		_vfpfcnvrt
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text14
  3223  001804                     __ptext14:
  3224                           	opt callstack 0
  3225  001804                     _stoa:
  3226                           	opt callstack 23
  3227                           
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  3229                           
  3230                           ;incstack = 0
  3231  001804  EE20  F060         	lfsr	2,stoa@F1139
  3232  001808  EE10  F011         	lfsr	1,stoa@nuls
  3233  00180C  0E06               	movlw	6
  3234  00180E                     u3351:
  3235  00180E  CFDB FFE3          	movff	plusw2,plusw1
  3236  001812  06E8               	decf	wreg,f,c
  3237  001814  E2FC               	bc	u3351
  3238                           
  3239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  3240  001816  C00E  F01C         	movff	stoa@s,stoa@cp
  3241  00181A  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  3242                           
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  3244  00181E  501C               	movf	stoa@cp,w,c
  3245  001820  101D               	iorwf	stoa@cp+1,w,c
  3246  001822  A4D8               	btfss	status,2,c
  3247  001824  D004               	goto	l3341
  3248                           
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  3250  001826  0E11               	movlw	low stoa@nuls
  3251  001828  6E1C               	movwf	stoa@cp,c
  3252  00182A  0E00               	movlw	high stoa@nuls
  3253  00182C  6E1D               	movwf	stoa@cp+1,c
  3254  00182E                     l3341:
  3255                           
  3256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  3257  00182E  C01C  F003         	movff	stoa@cp,strlen@s
  3258  001832  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  3259  001836  EC1A  F010         	call	_strlen	;wreg free
  3260  00183A  C003  F020         	movff	?_strlen,stoa@l
  3261  00183E  C004  F021         	movff	?_strlen+1,stoa@l+1
  3262                           
  3263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  3264  001842  C09F  F01E         	movff	_prec,stoa@p
  3265  001846  C0A0  F01F         	movff	_prec+1,stoa@p+1
  3266                           
  3267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  3268  00184A  BE1F               	btfsc	stoa@p+1,7,c
  3269  00184C  D00E               	goto	l318
  3270  00184E  5020               	movf	stoa@l,w,c
  3271  001850  5C1E               	subwf	stoa@p,w,c
  3272  001852  501F               	movf	stoa@p+1,w,c
  3273  001854  0A80               	xorlw	128
  3274  001856  6E10               	movwf	??_stoa& (0+255),c
  3275  001858  5021               	movf	stoa@l+1,w,c
  3276  00185A  0A80               	xorlw	128
  3277  00185C  5810               	subwfb	??_stoa& (0+255),w,c
  3278  00185E  B0D8               	btfsc	status,0,c
  3279  001860  D004               	goto	l318
  3280  001862  C01E  F020         	movff	stoa@p,stoa@l
  3281  001866  C01F  F021         	movff	stoa@p+1,stoa@l+1
  3282  00186A                     l318:
  3283                           
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  3285  00186A  C020  F01E         	movff	stoa@l,stoa@p
  3286  00186E  C021  F01F         	movff	stoa@l+1,stoa@p+1
  3287                           
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  3289  001872  C09D  F01A         	movff	_width,stoa@w
  3290  001876  C09E  F01B         	movff	_width+1,stoa@w+1
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  3293  00187A  0100               	movlb	0	; () banked
  3294  00187C  A1A1               	btfss	_flags& (0+255),0,b
  3295  00187E  D00D               	goto	l3355
  3296  001880  D016               	goto	u3400
  3297  001882                     l3351:
  3298                           
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  3300  001882  0E00               	movlw	0
  3301  001884  6E04               	movwf	fputc@c+1,c
  3302  001886  0E20               	movlw	32
  3303  001888  6E03               	movwf	fputc@c,c
  3304  00188A  C00C  F005         	movff	stoa@fp,fputc@fp
  3305  00188E  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  3306  001892  EC7B  F00D         	call	_fputc	;wreg free
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  3309  001896  4A20               	infsnz	stoa@l,f,c
  3310  001898  2A21               	incf	stoa@l+1,f,c
  3311  00189A                     l3355:
  3312                           
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  3314  00189A  501A               	movf	stoa@w,w,c
  3315  00189C  5C20               	subwf	stoa@l,w,c
  3316  00189E  5021               	movf	stoa@l+1,w,c
  3317  0018A0  0A80               	xorlw	128
  3318  0018A2  6E10               	movwf	??_stoa& (0+255),c
  3319  0018A4  501B               	movf	stoa@w+1,w,c
  3320  0018A6  0A80               	xorlw	128
  3321  0018A8  5810               	subwfb	??_stoa& (0+255),w,c
  3322  0018AA  A0D8               	btfss	status,0,c
  3323  0018AC  D7EA               	goto	l3351
  3324  0018AE                     u3400:
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  3327  0018AE  0E00               	movlw	0
  3328  0018B0  6E19               	movwf	stoa@i+1,c
  3329  0018B2  0E00               	movlw	0
  3330  0018B4  6E18               	movwf	stoa@i,c
  3331                           
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3333  0018B6  D013               	goto	l3365
  3334  0018B8                     l3359:
  3335                           
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  3337  0018B8  C01C  FFD9         	movff	stoa@cp,fsr2l
  3338  0018BC  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  3339  0018C0  50DF               	movf	indf2,w,c
  3340  0018C2  6E10               	movwf	??_stoa& (0+255),c
  3341  0018C4  5010               	movf	??_stoa,w,c
  3342  0018C6  6E03               	movwf	fputc@c,c
  3343  0018C8  6A04               	clrf	fputc@c+1,c
  3344  0018CA  C00C  F005         	movff	stoa@fp,fputc@fp
  3345  0018CE  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  3346  0018D2  EC7B  F00D         	call	_fputc	;wreg free
  3347                           
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  3349  0018D6  4A1C               	infsnz	stoa@cp,f,c
  3350  0018D8  2A1D               	incf	stoa@cp+1,f,c
  3351                           
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  3353  0018DA  4A18               	infsnz	stoa@i,f,c
  3354  0018DC  2A19               	incf	stoa@i+1,f,c
  3355  0018DE                     l3365:
  3356                           
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3358  0018DE  501E               	movf	stoa@p,w,c
  3359  0018E0  5C18               	subwf	stoa@i,w,c
  3360  0018E2  5019               	movf	stoa@i+1,w,c
  3361  0018E4  0A80               	xorlw	128
  3362  0018E6  6E10               	movwf	??_stoa& (0+255),c
  3363  0018E8  501F               	movf	stoa@p+1,w,c
  3364  0018EA  0A80               	xorlw	128
  3365  0018EC  5810               	subwfb	??_stoa& (0+255),w,c
  3366  0018EE  A0D8               	btfss	status,0,c
  3367  0018F0  D7E3               	goto	l3359
  3368                           
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  3370  0018F2  0100               	movlb	0	; () banked
  3371  0018F4  B1A1               	btfsc	_flags& (0+255),0,b
  3372  0018F6  D00D               	goto	l3373
  3373  0018F8  D016               	goto	u3430
  3374  0018FA                     l3369:
  3375                           
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  3377  0018FA  0E00               	movlw	0
  3378  0018FC  6E04               	movwf	fputc@c+1,c
  3379  0018FE  0E20               	movlw	32
  3380  001900  6E03               	movwf	fputc@c,c
  3381  001902  C00C  F005         	movff	stoa@fp,fputc@fp
  3382  001906  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  3383  00190A  EC7B  F00D         	call	_fputc	;wreg free
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  3386  00190E  4A20               	infsnz	stoa@l,f,c
  3387  001910  2A21               	incf	stoa@l+1,f,c
  3388  001912                     l3373:
  3389                           
  3390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  3391  001912  501A               	movf	stoa@w,w,c
  3392  001914  5C20               	subwf	stoa@l,w,c
  3393  001916  5021               	movf	stoa@l+1,w,c
  3394  001918  0A80               	xorlw	128
  3395  00191A  6E10               	movwf	??_stoa& (0+255),c
  3396  00191C  501B               	movf	stoa@w+1,w,c
  3397  00191E  0A80               	xorlw	128
  3398  001920  5810               	subwfb	??_stoa& (0+255),w,c
  3399  001922  A0D8               	btfss	status,0,c
  3400  001924  D7EA               	goto	l3369
  3401  001926                     u3430:
  3402                           
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  3406  001926  C020  F00C         	movff	stoa@l,?_stoa
  3407  00192A  C021  F00D         	movff	stoa@l+1,?_stoa+1
  3408  00192E  0012               	return		;funcret
  3409  001930                     __end_of_stoa:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _dtoa *****************
  3413 ;; Defined at:
  3414 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3417 ;;		 -> sprintf@f(6), 
  3418 ;;  d               8   31[COMRAM] long long 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  n               8   55[COMRAM] long long 
  3421 ;;  i               2   63[COMRAM] int 
  3422 ;;  s               2   53[COMRAM] int 
  3423 ;;  w               2   51[COMRAM] int 
  3424 ;;  p               2   49[COMRAM] int 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2   29[COMRAM] int 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3434 ;;      Params:        10       0       0       0       0       0       0       0       0
  3435 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3436 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3437 ;;      Totals:        36       0       0       0       0       0       0       0       0
  3438 ;;Total ram usage:       36 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    5
  3441 ;; This function calls:
  3442 ;;		___aodiv
  3443 ;;		___aomod
  3444 ;;		_abs
  3445 ;;		_pad
  3446 ;; This function is called by:
  3447 ;;		_vfpfcnvrt
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text15
  3452  001154                     __ptext15:
  3453                           	opt callstack 0
  3454  001154                     _dtoa:
  3455                           	opt callstack 21
  3456                           
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3458                           
  3459                           ;incstack = 0
  3460  001154  C020  F038         	movff	dtoa@d,dtoa@n
  3461  001158  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  3462  00115C  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  3463  001160  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  3464  001164  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  3465  001168  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  3466  00116C  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  3467  001170  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3470  001174  AE3F               	btfss	dtoa@n+7,7,c
  3471  001176  D002               	goto	u3200
  3472  001178  0E01               	movlw	1
  3473  00117A  D001               	goto	u3210
  3474  00117C                     u3200:
  3475  00117C  0E00               	movlw	0
  3476  00117E                     u3210:
  3477  00117E  6E36               	movwf	dtoa@s,c
  3478  001180  6A37               	clrf	dtoa@s+1,c
  3479                           
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3481  001182  5036               	movf	dtoa@s,w,c
  3482  001184  1037               	iorwf	dtoa@s+1,w,c
  3483  001186  B4D8               	btfsc	status,2,c
  3484  001188  D010               	goto	l3277
  3485                           
  3486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3487  00118A  1E3F               	comf	dtoa@n+7,f,c
  3488  00118C  1E3E               	comf	dtoa@n+6,f,c
  3489  00118E  1E3D               	comf	dtoa@n+5,f,c
  3490  001190  1E3C               	comf	dtoa@n+4,f,c
  3491  001192  1E3B               	comf	dtoa@n+3,f,c
  3492  001194  1E3A               	comf	dtoa@n+2,f,c
  3493  001196  1E39               	comf	dtoa@n+1,f,c
  3494  001198  6C38               	negf	dtoa@n,c
  3495  00119A  0E00               	movlw	0
  3496  00119C  2239               	addwfc	dtoa@n+1,f,c
  3497  00119E  223A               	addwfc	dtoa@n+2,f,c
  3498  0011A0  223B               	addwfc	dtoa@n+3,f,c
  3499  0011A2  223C               	addwfc	dtoa@n+4,f,c
  3500  0011A4  223D               	addwfc	dtoa@n+5,f,c
  3501  0011A6  223E               	addwfc	dtoa@n+6,f,c
  3502  0011A8  223F               	addwfc	dtoa@n+7,f,c
  3503  0011AA                     l3277:
  3504                           
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3506  0011AA  0100               	movlb	0	; () banked
  3507  0011AC  AFA0               	btfss	(_prec+1)& (0+255),7,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3511  0011AE  93A1               	bcf	_flags& (0+255),1,b
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3515  0011B0  BFA0               	btfsc	(_prec+1)& (0+255),7,b
  3516  0011B2  D005               	goto	u3240
  3517  0011B4  51A0               	movf	(_prec+1)& (0+255),w,b
  3518  0011B6  E108               	bnz	l289
  3519  0011B8  059F               	decf	_prec& (0+255),w,b
  3520  0011BA  B0D8               	btfsc	status,0,c
  3521  0011BC  D005               	goto	l289
  3522  0011BE                     u3240:
  3523                           
  3524                           ; BSR set to: 0
  3525  0011BE  0E00               	movlw	0
  3526  0011C0  6E33               	movwf	dtoa@p+1,c
  3527  0011C2  0E01               	movlw	1
  3528  0011C4  6E32               	movwf	dtoa@p,c
  3529  0011C6  D004               	goto	l291
  3530  0011C8                     l289:
  3531                           
  3532                           ; BSR set to: 0
  3533  0011C8  C09F  F032         	movff	_prec,dtoa@p
  3534  0011CC  C0A0  F033         	movff	_prec+1,dtoa@p+1
  3535  0011D0                     l291:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3539  0011D0  C09D  F034         	movff	_width,dtoa@w
  3540  0011D4  C09E  F035         	movff	_width+1,dtoa@w+1
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3544  0011D8  5036               	movf	dtoa@s,w,c
  3545  0011DA  1037               	iorwf	dtoa@s+1,w,c
  3546  0011DC  A4D8               	btfss	status,2,c
  3547  0011DE  D002               	goto	u3260
  3548                           
  3549                           ; BSR set to: 0
  3550  0011E0  A5A1               	btfss	_flags& (0+255),2,b
  3551  0011E2  D003               	goto	l3291
  3552  0011E4                     u3260:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3556  0011E4  0634               	decf	dtoa@w,f,c
  3557  0011E6  A0D8               	btfss	status,0,c
  3558  0011E8  0635               	decf	dtoa@w+1,f,c
  3559  0011EA                     l3291:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3563  0011EA  0E00               	movlw	0
  3564  0011EC  6E41               	movwf	dtoa@i+1,c
  3565  0011EE  0E1F               	movlw	31
  3566  0011F0  6E40               	movwf	dtoa@i,c
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3570  0011F2  0E00               	movlw	0
  3571  0011F4  6FC8               	movwf	(_dbuf+31)& (0+255),b
  3572                           
  3573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3574  0011F6  D07C               	goto	l3305
  3575  0011F8                     l3295:
  3576                           
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3578  0011F8  0640               	decf	dtoa@i,f,c
  3579  0011FA  A0D8               	btfss	status,0,c
  3580  0011FC  0641               	decf	dtoa@i+1,f,c
  3581                           
  3582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3583  0011FE  0EA9               	movlw	low _dbuf
  3584  001200  2440               	addwf	dtoa@i,w,c
  3585  001202  6ED9               	movwf	fsr2l,c
  3586  001204  0E00               	movlw	high _dbuf
  3587  001206  2041               	addwfc	dtoa@i+1,w,c
  3588  001208  6EDA               	movwf	fsr2h,c
  3589  00120A  C038  F003         	movff	dtoa@n,___aomod@dividend
  3590  00120E  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  3591  001212  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  3592  001216  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  3593  00121A  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  3594  00121E  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  3595  001222  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  3596  001226  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  3597  00122A  0E0A               	movlw	10
  3598  00122C  6E0B               	movwf	___aomod@divisor,c
  3599  00122E  0E00               	movlw	0
  3600  001230  6E0C               	movwf	___aomod@divisor+1,c
  3601  001232  0E00               	movlw	0
  3602  001234  6E0D               	movwf	___aomod@divisor+2,c
  3603  001236  0E00               	movlw	0
  3604  001238  6E0E               	movwf	___aomod@divisor+3,c
  3605  00123A  0E00               	movlw	0
  3606  00123C  6E0F               	movwf	___aomod@divisor+4,c
  3607  00123E  0E00               	movlw	0
  3608  001240  6E10               	movwf	___aomod@divisor+5,c
  3609  001242  0E00               	movlw	0
  3610  001244  6E11               	movwf	___aomod@divisor+6,c
  3611  001246  0E00               	movlw	0
  3612  001248  6E12               	movwf	___aomod@divisor+7,c
  3613  00124A  EC98  F00C         	call	___aomod	;wreg free
  3614  00124E  C003  F028         	movff	?___aomod,??_dtoa
  3615  001252  C004  F029         	movff	?___aomod+1,??_dtoa+1
  3616  001256  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  3617  00125A  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  3618  00125E  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  3619  001262  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  3620  001266  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  3621  00126A  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  3622  00126E  C028  F015         	movff	??_dtoa,abs@a
  3623  001272  C02A  F016         	movff	??_dtoa+2,abs@a+1
  3624  001276  ECE1  F010         	call	_abs	;wreg free
  3625  00127A  5015               	movf	?_abs,w,c
  3626  00127C  0F30               	addlw	48
  3627  00127E  6EDF               	movwf	indf2,c
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3630  001280  0632               	decf	dtoa@p,f,c
  3631  001282  A0D8               	btfss	status,0,c
  3632  001284  0633               	decf	dtoa@p+1,f,c
  3633                           
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3635  001286  0634               	decf	dtoa@w,f,c
  3636  001288  A0D8               	btfss	status,0,c
  3637  00128A  0635               	decf	dtoa@w+1,f,c
  3638                           
  3639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3640  00128C  C038  F003         	movff	dtoa@n,___aodiv@dividend
  3641  001290  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  3642  001294  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  3643  001298  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  3644  00129C  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  3645  0012A0  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  3646  0012A4  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  3647  0012A8  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  3648  0012AC  0E0A               	movlw	10
  3649  0012AE  6E0B               	movwf	___aodiv@divisor,c
  3650  0012B0  0E00               	movlw	0
  3651  0012B2  6E0C               	movwf	___aodiv@divisor+1,c
  3652  0012B4  0E00               	movlw	0
  3653  0012B6  6E0D               	movwf	___aodiv@divisor+2,c
  3654  0012B8  0E00               	movlw	0
  3655  0012BA  6E0E               	movwf	___aodiv@divisor+3,c
  3656  0012BC  0E00               	movlw	0
  3657  0012BE  6E0F               	movwf	___aodiv@divisor+4,c
  3658  0012C0  0E00               	movlw	0
  3659  0012C2  6E10               	movwf	___aodiv@divisor+5,c
  3660  0012C4  0E00               	movlw	0
  3661  0012C6  6E11               	movwf	___aodiv@divisor+6,c
  3662  0012C8  0E00               	movlw	0
  3663  0012CA  6E12               	movwf	___aodiv@divisor+7,c
  3664  0012CC  ECC5  F00A         	call	___aodiv	;wreg free
  3665  0012D0  C003  F038         	movff	?___aodiv,dtoa@n
  3666  0012D4  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  3667  0012D8  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  3668  0012DC  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  3669  0012E0  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  3670  0012E4  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  3671  0012E8  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  3672  0012EC  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  3673  0012F0                     l3305:
  3674                           
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3676  0012F0  BE41               	btfsc	dtoa@i+1,7,c
  3677  0012F2  D020               	goto	u3310
  3678  0012F4  5041               	movf	dtoa@i+1,w,c
  3679  0012F6  E103               	bnz	u3270
  3680  0012F8  0440               	decf	dtoa@i,w,c
  3681  0012FA  A0D8               	btfss	status,0,c
  3682  0012FC  D01B               	goto	u3310
  3683  0012FE                     u3270:
  3684  0012FE  5038               	movf	dtoa@n,w,c
  3685  001300  1039               	iorwf	dtoa@n+1,w,c
  3686  001302  103A               	iorwf	dtoa@n+2,w,c
  3687  001304  103B               	iorwf	dtoa@n+3,w,c
  3688  001306  103C               	iorwf	dtoa@n+4,w,c
  3689  001308  103D               	iorwf	dtoa@n+5,w,c
  3690  00130A  103E               	iorwf	dtoa@n+6,w,c
  3691  00130C  103F               	iorwf	dtoa@n+7,w,c
  3692  00130E  A4D8               	btfss	status,2,c
  3693  001310  D773               	goto	l3295
  3694  001312  BE33               	btfsc	dtoa@p+1,7,c
  3695  001314  D005               	goto	u3290
  3696  001316  5033               	movf	dtoa@p+1,w,c
  3697  001318  E102               	bnz	u3291
  3698  00131A  0432               	decf	dtoa@p,w,c
  3699  00131C  B0D8               	btfsc	status,0,c
  3700  00131E                     u3291:
  3701  00131E  D76C               	goto	l3295
  3702  001320                     u3290:
  3703  001320  BE35               	btfsc	dtoa@w+1,7,c
  3704  001322  D008               	goto	u3310
  3705  001324  5035               	movf	dtoa@w+1,w,c
  3706  001326  E103               	bnz	u3300
  3707  001328  0434               	decf	dtoa@w,w,c
  3708  00132A  A0D8               	btfss	status,0,c
  3709  00132C  D003               	goto	u3310
  3710  00132E                     u3300:
  3711  00132E  0100               	movlb	0	; () banked
  3712  001330  B3A1               	btfsc	_flags& (0+255),1,b
  3713  001332  D762               	goto	l3295
  3714  001334                     u3310:
  3715                           
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3717  001334  5036               	movf	dtoa@s,w,c
  3718  001336  1037               	iorwf	dtoa@s+1,w,c
  3719  001338  A4D8               	btfss	status,2,c
  3720  00133A  D003               	goto	u3330
  3721  00133C  0100               	movlb	0	; () banked
  3722  00133E  A5A1               	btfss	_flags& (0+255),2,b
  3723  001340  D017               	goto	l3329
  3724  001342                     u3330:
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3727  001342  0640               	decf	dtoa@i,f,c
  3728  001344  A0D8               	btfss	status,0,c
  3729  001346  0641               	decf	dtoa@i+1,f,c
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3732  001348  5036               	movf	dtoa@s,w,c
  3733  00134A  1037               	iorwf	dtoa@s+1,w,c
  3734  00134C  A4D8               	btfss	status,2,c
  3735  00134E  D004               	goto	l3325
  3736  001350  0E00               	movlw	0
  3737  001352  6E31               	movwf	_dtoa$1301+1,c
  3738  001354  0E2B               	movlw	43
  3739  001356  D003               	goto	L3
  3740  001358                     l3325:
  3741  001358  0E00               	movlw	0
  3742  00135A  6E31               	movwf	_dtoa$1301+1,c
  3743  00135C  0E2D               	movlw	45
  3744  00135E                     L3:
  3745  00135E  6E30               	movwf	_dtoa$1301,c
  3746  001360  0EA9               	movlw	low _dbuf
  3747  001362  2440               	addwf	dtoa@i,w,c
  3748  001364  6ED9               	movwf	fsr2l,c
  3749  001366  0E00               	movlw	high _dbuf
  3750  001368  2041               	addwfc	dtoa@i+1,w,c
  3751  00136A  6EDA               	movwf	fsr2h,c
  3752  00136C  C030  FFDF         	movff	_dtoa$1301,indf2
  3753  001370                     l3329:
  3754                           
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3756  001370  C01E  F013         	movff	dtoa@fp,pad@fp
  3757  001374  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3758  001378  0EA9               	movlw	low _dbuf
  3759  00137A  2440               	addwf	dtoa@i,w,c
  3760  00137C  6E15               	movwf	pad@buf,c
  3761  00137E  0E00               	movlw	high _dbuf
  3762  001380  2041               	addwfc	dtoa@i+1,w,c
  3763  001382  6E16               	movwf	pad@buf+1,c
  3764  001384  C034  F017         	movff	dtoa@w,pad@p
  3765  001388  C035  F018         	movff	dtoa@w+1,pad@p+1
  3766  00138C  ECCB  F00D         	call	_pad	;wreg free
  3767  001390  C013  F01E         	movff	?_pad,?_dtoa
  3768  001394  C014  F01F         	movff	?_pad+1,?_dtoa+1
  3769  001398  0012               	return		;funcret
  3770  00139A                     __end_of_dtoa:
  3771                           	opt callstack 0
  3772                           
  3773 ;; *************** function _pad *****************
  3774 ;; Defined at:
  3775 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3778 ;;		 -> sprintf@f(6), 
  3779 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3780 ;;		 -> dbuf(32), 
  3781 ;;  p               2   22[COMRAM] int 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  w               2   27[COMRAM] int 
  3784 ;;  i               2   25[COMRAM] int 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2   18[COMRAM] int 
  3787 ;; Registers used:
  3788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3794 ;;      Params:         6       0       0       0       0       0       0       0       0
  3795 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3796 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3797 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3798 ;;Total ram usage:       11 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		_fputc
  3803 ;;		_fputs
  3804 ;;		_strlen
  3805 ;; This function is called by:
  3806 ;;		_dtoa
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text16
  3811  001B96                     __ptext16:
  3812                           	opt callstack 0
  3813  001B96                     _pad:
  3814                           	opt callstack 21
  3815                           
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3817                           
  3818                           ;incstack = 0
  3819  001B96  0100               	movlb	0	; () banked
  3820  001B98  A1A1               	btfss	_flags& (0+255),0,b
  3821  001B9A  D00A               	goto	l3169
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3825  001B9C  C015  F00C         	movff	pad@buf,fputs@s
  3826  001BA0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3827  001BA4  C013  F00E         	movff	pad@fp,fputs@fp
  3828  001BA8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3829  001BAC  EC77  F010         	call	_fputs	;wreg free
  3830  001BB0                     l3169:
  3831                           
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3833  001BB0  BE18               	btfsc	pad@p+1,7,c
  3834  001BB2  D005               	goto	l3173
  3835  001BB4  C017  F01C         	movff	pad@p,pad@w
  3836  001BB8  C018  F01D         	movff	pad@p+1,pad@w+1
  3837  001BBC  D004               	goto	l278
  3838  001BBE                     l3173:
  3839  001BBE  0E00               	movlw	0
  3840  001BC0  6E1D               	movwf	pad@w+1,c
  3841  001BC2  0E00               	movlw	0
  3842  001BC4  6E1C               	movwf	pad@w,c
  3843  001BC6                     l278:
  3844                           
  3845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3846  001BC6  0E00               	movlw	0
  3847  001BC8  6E1B               	movwf	pad@i+1,c
  3848  001BCA  0E00               	movlw	0
  3849  001BCC  6E1A               	movwf	pad@i,c
  3850                           
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3852  001BCE  D00C               	goto	l3179
  3853  001BD0                     l3175:
  3854                           
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3856  001BD0  0E00               	movlw	0
  3857  001BD2  6E04               	movwf	fputc@c+1,c
  3858  001BD4  0E20               	movlw	32
  3859  001BD6  6E03               	movwf	fputc@c,c
  3860  001BD8  C013  F005         	movff	pad@fp,fputc@fp
  3861  001BDC  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3862  001BE0  EC7B  F00D         	call	_fputc	;wreg free
  3863                           
  3864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3865  001BE4  4A1A               	infsnz	pad@i,f,c
  3866  001BE6  2A1B               	incf	pad@i+1,f,c
  3867  001BE8                     l3179:
  3868                           
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3870  001BE8  501C               	movf	pad@w,w,c
  3871  001BEA  5C1A               	subwf	pad@i,w,c
  3872  001BEC  501B               	movf	pad@i+1,w,c
  3873  001BEE  0A80               	xorlw	128
  3874  001BF0  6E19               	movwf	??_pad& (0+255),c
  3875  001BF2  501D               	movf	pad@w+1,w,c
  3876  001BF4  0A80               	xorlw	128
  3877  001BF6  5819               	subwfb	??_pad& (0+255),w,c
  3878  001BF8  A0D8               	btfss	status,0,c
  3879  001BFA  D7EA               	goto	l3175
  3880                           
  3881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3882  001BFC  0100               	movlb	0	; () banked
  3883  001BFE  B1A1               	btfsc	_flags& (0+255),0,b
  3884  001C00  D00A               	goto	l3183
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3888  001C02  C015  F00C         	movff	pad@buf,fputs@s
  3889  001C06  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3890  001C0A  C013  F00E         	movff	pad@fp,fputs@fp
  3891  001C0E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3892  001C12  EC77  F010         	call	_fputs	;wreg free
  3893  001C16                     l3183:
  3894                           
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3896  001C16  C015  F003         	movff	pad@buf,strlen@s
  3897  001C1A  C016  F004         	movff	pad@buf+1,strlen@s+1
  3898  001C1E  EC1A  F010         	call	_strlen	;wreg free
  3899  001C22  501C               	movf	pad@w,w,c
  3900  001C24  2403               	addwf	?_strlen,w,c
  3901  001C26  6E13               	movwf	?_pad,c
  3902  001C28  501D               	movf	pad@w+1,w,c
  3903  001C2A  2004               	addwfc	?_strlen+1,w,c
  3904  001C2C  6E14               	movwf	?_pad+1,c
  3905  001C2E  0012               	return		;funcret
  3906  001C30                     __end_of_pad:
  3907                           	opt callstack 0
  3908                           
  3909 ;; *************** function _fputs *****************
  3910 ;; Defined at:
  3911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3914 ;;		 -> dbuf(32), 
  3915 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3916 ;;		 -> sprintf@f(6), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  i               2   16[COMRAM] int 
  3919 ;;  c               1   15[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2   11[COMRAM] int 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         4       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        7 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		_fputc
  3938 ;; This function is called by:
  3939 ;;		_pad
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text17
  3944  0020EE                     __ptext17:
  3945                           	opt callstack 0
  3946  0020EE                     _fputs:
  3947                           	opt callstack 21
  3948                           
  3949                           ;incstack = 0
  3950  0020EE  0E00               	movlw	0
  3951  0020F0  6E12               	movwf	fputs@i+1,c
  3952  0020F2  0E00               	movlw	0
  3953  0020F4  6E11               	movwf	fputs@i,c
  3954  0020F6  D00B               	goto	l3163
  3955  0020F8                     l3159:
  3956  0020F8  C010  F003         	movff	fputs@c,fputc@c
  3957  0020FC  6A04               	clrf	fputc@c+1,c
  3958  0020FE  C00E  F005         	movff	fputs@fp,fputc@fp
  3959  002102  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  3960  002106  EC7B  F00D         	call	_fputc	;wreg free
  3961  00210A  4A11               	infsnz	fputs@i,f,c
  3962  00210C  2A12               	incf	fputs@i+1,f,c
  3963  00210E                     l3163:
  3964  00210E  5011               	movf	fputs@i,w,c
  3965  002110  240C               	addwf	fputs@s,w,c
  3966  002112  6ED9               	movwf	fsr2l,c
  3967  002114  5012               	movf	fputs@i+1,w,c
  3968  002116  200D               	addwfc	fputs@s+1,w,c
  3969  002118  6EDA               	movwf	fsr2h,c
  3970  00211A  50DF               	movf	indf2,w,c
  3971  00211C  6E10               	movwf	fputs@c,c
  3972  00211E  5010               	movf	fputs@c,w,c
  3973  002120  B4D8               	btfsc	status,2,c
  3974  002122  0012               	return	
  3975  002124  D7E9               	goto	l3159
  3976  002126                     __end_of_fputs:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function _fputc *****************
  3980 ;; Defined at:
  3981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  c               2    2[COMRAM] int 
  3984 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  3985 ;;		 -> sprintf@f(6), 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2    2[COMRAM] int 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         4       0       0       0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4000 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4001 ;;Total ram usage:        9 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		_putch
  4006 ;; This function is called by:
  4007 ;;		_pad
  4008 ;;		_stoa
  4009 ;;		_vfpfcnvrt
  4010 ;;		_fputs
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text18
  4015  001AF6                     __ptext18:
  4016                           	opt callstack 0
  4017  001AF6                     _fputc:
  4018                           	opt callstack 23
  4019                           
  4020                           ;incstack = 0
  4021  001AF6  5005               	movf	fputc@fp,w,c
  4022  001AF8  1006               	iorwf	fputc@fp+1,w,c
  4023  001AFA  B4D8               	btfsc	status,2,c
  4024  001AFC  D004               	goto	u2960
  4025  001AFE  5005               	movf	fputc@fp,w,c
  4026  001B00  1006               	iorwf	fputc@fp+1,w,c
  4027  001B02  A4D8               	btfss	status,2,c
  4028  001B04  D004               	goto	l3139
  4029  001B06                     u2960:
  4030  001B06  5003               	movf	fputc@c,w,c
  4031  001B08  EC84  F011         	call	_putch
  4032  001B0C  0012               	return	
  4033  001B0E                     l3139:
  4034  001B0E  EE20 F004          	lfsr	2,4
  4035  001B12  5005               	movf	fputc@fp,w,c
  4036  001B14  26D9               	addwf	fsr2l,f,c
  4037  001B16  5006               	movf	fputc@fp+1,w,c
  4038  001B18  22DA               	addwfc	fsr2h,f,c
  4039  001B1A  50DE               	movf	postinc2,w,c
  4040  001B1C  10DE               	iorwf	postinc2,w,c
  4041  001B1E  B4D8               	btfsc	status,2,c
  4042  001B20  D016               	goto	u2980
  4043  001B22  EE20 F004          	lfsr	2,4
  4044  001B26  5005               	movf	fputc@fp,w,c
  4045  001B28  26D9               	addwf	fsr2l,f,c
  4046  001B2A  5006               	movf	fputc@fp+1,w,c
  4047  001B2C  22DA               	addwfc	fsr2h,f,c
  4048  001B2E  EE10 F002          	lfsr	1,2
  4049  001B32  5005               	movf	fputc@fp,w,c
  4050  001B34  26E1               	addwf	fsr1l,f,c
  4051  001B36  5006               	movf	fputc@fp+1,w,c
  4052  001B38  22E2               	addwfc	fsr1h,f,c
  4053  001B3A  50DE               	movf	postinc2,w,c
  4054  001B3C  5CE6               	subwf	postinc1,w,c
  4055  001B3E  50E6               	movf	postinc1,w,c
  4056  001B40  0A80               	xorlw	128
  4057  001B42  6E0B               	movwf	(??_fputc+4)& (0+255),c
  4058  001B44  50DE               	movf	postinc2,w,c
  4059  001B46  0A80               	xorlw	128
  4060  001B48  580B               	subwfb	(??_fputc+4)& (0+255),w,c
  4061  001B4A  B0D8               	btfsc	status,0,c
  4062  001B4C  0012               	return	
  4063  001B4E                     u2980:
  4064  001B4E  EE20 F002          	lfsr	2,2
  4065  001B52  5005               	movf	fputc@fp,w,c
  4066  001B54  26D9               	addwf	fsr2l,f,c
  4067  001B56  5006               	movf	fputc@fp+1,w,c
  4068  001B58  22DA               	addwfc	fsr2h,f,c
  4069  001B5A  CFDE F007          	movff	postinc2,??_fputc
  4070  001B5E  CFDD F008          	movff	postdec2,??_fputc+1
  4071  001B62  C005  FFD9         	movff	fputc@fp,fsr2l
  4072  001B66  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4073  001B6A  CFDE F009          	movff	postinc2,??_fputc+2
  4074  001B6E  CFDD F00A          	movff	postdec2,??_fputc+3
  4075  001B72  5007               	movf	??_fputc,w,c
  4076  001B74  2409               	addwf	??_fputc+2,w,c
  4077  001B76  6ED9               	movwf	fsr2l,c
  4078  001B78  5008               	movf	??_fputc+1,w,c
  4079  001B7A  200A               	addwfc	??_fputc+3,w,c
  4080  001B7C  6EDA               	movwf	fsr2h,c
  4081  001B7E  C003  FFDF         	movff	fputc@c,indf2
  4082  001B82  EE20 F002          	lfsr	2,2
  4083  001B86  5005               	movf	fputc@fp,w,c
  4084  001B88  26D9               	addwf	fsr2l,f,c
  4085  001B8A  5006               	movf	fputc@fp+1,w,c
  4086  001B8C  22DA               	addwfc	fsr2h,f,c
  4087  001B8E  2ADE               	incf	postinc2,f,c
  4088  001B90  0E00               	movlw	0
  4089  001B92  22DD               	addwfc	postdec2,f,c
  4090  001B94  0012               	return		;funcret
  4091  001B96                     __end_of_fputc:
  4092                           	opt callstack 0
  4093                           
  4094 ;; *************** function _putch *****************
  4095 ;; Defined at:
  4096 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  c               1    wreg     unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  c               1    0[COMRAM] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_fputc
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text19
  4125  002308                     __ptext19:
  4126                           	opt callstack 0
  4127  002308                     _putch:
  4128                           	opt callstack 23
  4129                           
  4130                           ;incstack = 0
  4131  002308  0012               	return		;funcret
  4132  00230A                     __end_of_putch:
  4133                           	opt callstack 0
  4134                           
  4135 ;; *************** function _abs *****************
  4136 ;; Defined at:
  4137 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  a               2   20[COMRAM] int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2   20[COMRAM] int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4151 ;;      Params:         2       0       0       0       0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4153 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4154 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4155 ;;Total ram usage:        4 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_dtoa
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text20
  4166  0021C2                     __ptext20:
  4167                           	opt callstack 0
  4168  0021C2                     _abs:
  4169                           	opt callstack 24
  4170                           
  4171                           ;incstack = 0
  4172  0021C2  BE16               	btfsc	abs@a+1,7,c
  4173  0021C4  D005               	goto	u3060
  4174  0021C6  5016               	movf	abs@a+1,w,c
  4175  0021C8  E110               	bnz	l1025
  4176  0021CA  0415               	decf	abs@a,w,c
  4177  0021CC  B0D8               	btfsc	status,0,c
  4178  0021CE  D00D               	goto	l1025
  4179  0021D0                     u3060:
  4180  0021D0  C015  F017         	movff	abs@a,??_abs
  4181  0021D4  C016  F018         	movff	abs@a+1,??_abs+1
  4182  0021D8  1E17               	comf	??_abs,f,c
  4183  0021DA  1E18               	comf	??_abs+1,f,c
  4184  0021DC  4A17               	infsnz	??_abs,f,c
  4185  0021DE  2A18               	incf	??_abs+1,f,c
  4186  0021E0  C017  F015         	movff	??_abs,?_abs
  4187  0021E4  C018  F016         	movff	??_abs+1,?_abs+1
  4188  0021E8  0012               	return	
  4189  0021EA                     l1025:
  4190  0021EA  C015  F015         	movff	abs@a,?_abs
  4191  0021EE  C016  F016         	movff	abs@a+1,?_abs+1
  4192  0021F2  0012               	return		;funcret
  4193  0021F4                     __end_of_abs:
  4194                           	opt callstack 0
  4195                           
  4196 ;; *************** function ___aomod *****************
  4197 ;; Defined at:
  4198 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  dividend        8    2[COMRAM] long long 
  4201 ;;  divisor         8   10[COMRAM] long long 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  sign            1   19[COMRAM] unsigned char 
  4204 ;;  counter         1   18[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  8    2[COMRAM] long long 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4214 ;;      Params:        16       0       0       0       0       0       0       0       0
  4215 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4217 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4218 ;;Total ram usage:       18 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    1
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_dtoa
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text21
  4229  001930                     __ptext21:
  4230                           	opt callstack 0
  4231  001930                     ___aomod:
  4232                           	opt callstack 24
  4233                           
  4234                           ;incstack = 0
  4235  001930  0E00               	movlw	0
  4236  001932  6E14               	movwf	___aomod@sign,c
  4237  001934  AE0A               	btfss	___aomod@dividend+7,7,c
  4238  001936  D012               	goto	l3243
  4239  001938  1E0A               	comf	___aomod@dividend+7,f,c
  4240  00193A  1E09               	comf	___aomod@dividend+6,f,c
  4241  00193C  1E08               	comf	___aomod@dividend+5,f,c
  4242  00193E  1E07               	comf	___aomod@dividend+4,f,c
  4243  001940  1E06               	comf	___aomod@dividend+3,f,c
  4244  001942  1E05               	comf	___aomod@dividend+2,f,c
  4245  001944  1E04               	comf	___aomod@dividend+1,f,c
  4246  001946  6C03               	negf	___aomod@dividend,c
  4247  001948  0E00               	movlw	0
  4248  00194A  2204               	addwfc	___aomod@dividend+1,f,c
  4249  00194C  2205               	addwfc	___aomod@dividend+2,f,c
  4250  00194E  2206               	addwfc	___aomod@dividend+3,f,c
  4251  001950  2207               	addwfc	___aomod@dividend+4,f,c
  4252  001952  2208               	addwfc	___aomod@dividend+5,f,c
  4253  001954  2209               	addwfc	___aomod@dividend+6,f,c
  4254  001956  220A               	addwfc	___aomod@dividend+7,f,c
  4255  001958  0E01               	movlw	1
  4256  00195A  6E14               	movwf	___aomod@sign,c
  4257  00195C                     l3243:
  4258  00195C  AE12               	btfss	___aomod@divisor+7,7,c
  4259  00195E  D010               	goto	l3247
  4260  001960  1E12               	comf	___aomod@divisor+7,f,c
  4261  001962  1E11               	comf	___aomod@divisor+6,f,c
  4262  001964  1E10               	comf	___aomod@divisor+5,f,c
  4263  001966  1E0F               	comf	___aomod@divisor+4,f,c
  4264  001968  1E0E               	comf	___aomod@divisor+3,f,c
  4265  00196A  1E0D               	comf	___aomod@divisor+2,f,c
  4266  00196C  1E0C               	comf	___aomod@divisor+1,f,c
  4267  00196E  6C0B               	negf	___aomod@divisor,c
  4268  001970  0E00               	movlw	0
  4269  001972  220C               	addwfc	___aomod@divisor+1,f,c
  4270  001974  220D               	addwfc	___aomod@divisor+2,f,c
  4271  001976  220E               	addwfc	___aomod@divisor+3,f,c
  4272  001978  220F               	addwfc	___aomod@divisor+4,f,c
  4273  00197A  2210               	addwfc	___aomod@divisor+5,f,c
  4274  00197C  2211               	addwfc	___aomod@divisor+6,f,c
  4275  00197E  2212               	addwfc	___aomod@divisor+7,f,c
  4276  001980                     l3247:
  4277  001980  500B               	movf	___aomod@divisor,w,c
  4278  001982  100C               	iorwf	___aomod@divisor+1,w,c
  4279  001984  100D               	iorwf	___aomod@divisor+2,w,c
  4280  001986  100E               	iorwf	___aomod@divisor+3,w,c
  4281  001988  100F               	iorwf	___aomod@divisor+4,w,c
  4282  00198A  1010               	iorwf	___aomod@divisor+5,w,c
  4283  00198C  1011               	iorwf	___aomod@divisor+6,w,c
  4284  00198E  1012               	iorwf	___aomod@divisor+7,w,c
  4285  001990  B4D8               	btfsc	status,2,c
  4286  001992  D03C               	goto	l3263
  4287  001994  0E01               	movlw	1
  4288  001996  6E13               	movwf	___aomod@counter,c
  4289  001998  D00A               	goto	l3253
  4290  00199A                     l3251:
  4291  00199A  90D8               	bcf	status,0,c
  4292  00199C  360B               	rlcf	___aomod@divisor,f,c
  4293  00199E  360C               	rlcf	___aomod@divisor+1,f,c
  4294  0019A0  360D               	rlcf	___aomod@divisor+2,f,c
  4295  0019A2  360E               	rlcf	___aomod@divisor+3,f,c
  4296  0019A4  360F               	rlcf	___aomod@divisor+4,f,c
  4297  0019A6  3610               	rlcf	___aomod@divisor+5,f,c
  4298  0019A8  3611               	rlcf	___aomod@divisor+6,f,c
  4299  0019AA  3612               	rlcf	___aomod@divisor+7,f,c
  4300  0019AC  2A13               	incf	___aomod@counter,f,c
  4301  0019AE                     l3253:
  4302  0019AE  AE12               	btfss	___aomod@divisor+7,7,c
  4303  0019B0  D7F4               	goto	l3251
  4304  0019B2                     u3170:
  4305  0019B2  500B               	movf	___aomod@divisor,w,c
  4306  0019B4  5C03               	subwf	___aomod@dividend,w,c
  4307  0019B6  500C               	movf	___aomod@divisor+1,w,c
  4308  0019B8  5804               	subwfb	___aomod@dividend+1,w,c
  4309  0019BA  500D               	movf	___aomod@divisor+2,w,c
  4310  0019BC  5805               	subwfb	___aomod@dividend+2,w,c
  4311  0019BE  500E               	movf	___aomod@divisor+3,w,c
  4312  0019C0  5806               	subwfb	___aomod@dividend+3,w,c
  4313  0019C2  500F               	movf	___aomod@divisor+4,w,c
  4314  0019C4  5807               	subwfb	___aomod@dividend+4,w,c
  4315  0019C6  5010               	movf	___aomod@divisor+5,w,c
  4316  0019C8  5808               	subwfb	___aomod@dividend+5,w,c
  4317  0019CA  5011               	movf	___aomod@divisor+6,w,c
  4318  0019CC  5809               	subwfb	___aomod@dividend+6,w,c
  4319  0019CE  5012               	movf	___aomod@divisor+7,w,c
  4320  0019D0  580A               	subwfb	___aomod@dividend+7,w,c
  4321  0019D2  A0D8               	btfss	status,0,c
  4322  0019D4  D010               	goto	l3259
  4323  0019D6  500B               	movf	___aomod@divisor,w,c
  4324  0019D8  5E03               	subwf	___aomod@dividend,f,c
  4325  0019DA  500C               	movf	___aomod@divisor+1,w,c
  4326  0019DC  5A04               	subwfb	___aomod@dividend+1,f,c
  4327  0019DE  500D               	movf	___aomod@divisor+2,w,c
  4328  0019E0  5A05               	subwfb	___aomod@dividend+2,f,c
  4329  0019E2  500E               	movf	___aomod@divisor+3,w,c
  4330  0019E4  5A06               	subwfb	___aomod@dividend+3,f,c
  4331  0019E6  500F               	movf	___aomod@divisor+4,w,c
  4332  0019E8  5A07               	subwfb	___aomod@dividend+4,f,c
  4333  0019EA  5010               	movf	___aomod@divisor+5,w,c
  4334  0019EC  5A08               	subwfb	___aomod@dividend+5,f,c
  4335  0019EE  5011               	movf	___aomod@divisor+6,w,c
  4336  0019F0  5A09               	subwfb	___aomod@dividend+6,f,c
  4337  0019F2  5012               	movf	___aomod@divisor+7,w,c
  4338  0019F4  5A0A               	subwfb	___aomod@dividend+7,f,c
  4339  0019F6                     l3259:
  4340  0019F6  90D8               	bcf	status,0,c
  4341  0019F8  3212               	rrcf	___aomod@divisor+7,f,c
  4342  0019FA  3211               	rrcf	___aomod@divisor+6,f,c
  4343  0019FC  3210               	rrcf	___aomod@divisor+5,f,c
  4344  0019FE  320F               	rrcf	___aomod@divisor+4,f,c
  4345  001A00  320E               	rrcf	___aomod@divisor+3,f,c
  4346  001A02  320D               	rrcf	___aomod@divisor+2,f,c
  4347  001A04  320C               	rrcf	___aomod@divisor+1,f,c
  4348  001A06  320B               	rrcf	___aomod@divisor,f,c
  4349  001A08  2E13               	decfsz	___aomod@counter,f,c
  4350  001A0A  D7D3               	goto	u3170
  4351  001A0C                     l3263:
  4352  001A0C  5014               	movf	___aomod@sign,w,c
  4353  001A0E  B4D8               	btfsc	status,2,c
  4354  001A10  D010               	goto	l3267
  4355  001A12  1E0A               	comf	___aomod@dividend+7,f,c
  4356  001A14  1E09               	comf	___aomod@dividend+6,f,c
  4357  001A16  1E08               	comf	___aomod@dividend+5,f,c
  4358  001A18  1E07               	comf	___aomod@dividend+4,f,c
  4359  001A1A  1E06               	comf	___aomod@dividend+3,f,c
  4360  001A1C  1E05               	comf	___aomod@dividend+2,f,c
  4361  001A1E  1E04               	comf	___aomod@dividend+1,f,c
  4362  001A20  6C03               	negf	___aomod@dividend,c
  4363  001A22  0E00               	movlw	0
  4364  001A24  2204               	addwfc	___aomod@dividend+1,f,c
  4365  001A26  2205               	addwfc	___aomod@dividend+2,f,c
  4366  001A28  2206               	addwfc	___aomod@dividend+3,f,c
  4367  001A2A  2207               	addwfc	___aomod@dividend+4,f,c
  4368  001A2C  2208               	addwfc	___aomod@dividend+5,f,c
  4369  001A2E  2209               	addwfc	___aomod@dividend+6,f,c
  4370  001A30  220A               	addwfc	___aomod@dividend+7,f,c
  4371  001A32                     l3267:
  4372  001A32  C003  F003         	movff	___aomod@dividend,?___aomod
  4373  001A36  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  4374  001A3A  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  4375  001A3E  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  4376  001A42  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  4377  001A46  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  4378  001A4A  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  4379  001A4E  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  4380  001A52  0012               	return		;funcret
  4381  001A54                     __end_of___aomod:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function ___aodiv *****************
  4385 ;; Defined at:
  4386 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dividend        8    2[COMRAM] long long 
  4389 ;;  divisor         8   10[COMRAM] long long 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  quotient        8   20[COMRAM] long long 
  4392 ;;  sign            1   19[COMRAM] unsigned char 
  4393 ;;  counter         1   18[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  8    2[COMRAM] long long 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:        16       0       0       0       0       0       0       0       0
  4404 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4406 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:       26 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_dtoa
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text22
  4418  00158A                     __ptext22:
  4419                           	opt callstack 0
  4420  00158A                     ___aodiv:
  4421                           	opt callstack 24
  4422                           
  4423                           ;incstack = 0
  4424  00158A  0E00               	movlw	0
  4425  00158C  6E14               	movwf	___aodiv@sign,c
  4426  00158E  AE12               	btfss	___aodiv@divisor+7,7,c
  4427  001590  D012               	goto	l3199
  4428  001592  1E12               	comf	___aodiv@divisor+7,f,c
  4429  001594  1E11               	comf	___aodiv@divisor+6,f,c
  4430  001596  1E10               	comf	___aodiv@divisor+5,f,c
  4431  001598  1E0F               	comf	___aodiv@divisor+4,f,c
  4432  00159A  1E0E               	comf	___aodiv@divisor+3,f,c
  4433  00159C  1E0D               	comf	___aodiv@divisor+2,f,c
  4434  00159E  1E0C               	comf	___aodiv@divisor+1,f,c
  4435  0015A0  6C0B               	negf	___aodiv@divisor,c
  4436  0015A2  0E00               	movlw	0
  4437  0015A4  220C               	addwfc	___aodiv@divisor+1,f,c
  4438  0015A6  220D               	addwfc	___aodiv@divisor+2,f,c
  4439  0015A8  220E               	addwfc	___aodiv@divisor+3,f,c
  4440  0015AA  220F               	addwfc	___aodiv@divisor+4,f,c
  4441  0015AC  2210               	addwfc	___aodiv@divisor+5,f,c
  4442  0015AE  2211               	addwfc	___aodiv@divisor+6,f,c
  4443  0015B0  2212               	addwfc	___aodiv@divisor+7,f,c
  4444  0015B2  0E01               	movlw	1
  4445  0015B4  6E14               	movwf	___aodiv@sign,c
  4446  0015B6                     l3199:
  4447  0015B6  AE0A               	btfss	___aodiv@dividend+7,7,c
  4448  0015B8  D012               	goto	l3205
  4449  0015BA  1E0A               	comf	___aodiv@dividend+7,f,c
  4450  0015BC  1E09               	comf	___aodiv@dividend+6,f,c
  4451  0015BE  1E08               	comf	___aodiv@dividend+5,f,c
  4452  0015C0  1E07               	comf	___aodiv@dividend+4,f,c
  4453  0015C2  1E06               	comf	___aodiv@dividend+3,f,c
  4454  0015C4  1E05               	comf	___aodiv@dividend+2,f,c
  4455  0015C6  1E04               	comf	___aodiv@dividend+1,f,c
  4456  0015C8  6C03               	negf	___aodiv@dividend,c
  4457  0015CA  0E00               	movlw	0
  4458  0015CC  2204               	addwfc	___aodiv@dividend+1,f,c
  4459  0015CE  2205               	addwfc	___aodiv@dividend+2,f,c
  4460  0015D0  2206               	addwfc	___aodiv@dividend+3,f,c
  4461  0015D2  2207               	addwfc	___aodiv@dividend+4,f,c
  4462  0015D4  2208               	addwfc	___aodiv@dividend+5,f,c
  4463  0015D6  2209               	addwfc	___aodiv@dividend+6,f,c
  4464  0015D8  220A               	addwfc	___aodiv@dividend+7,f,c
  4465  0015DA  0E01               	movlw	1
  4466  0015DC  1A14               	xorwf	___aodiv@sign,f,c
  4467  0015DE                     l3205:
  4468  0015DE  EE20  F015         	lfsr	2,___aodiv@quotient
  4469  0015E2  0E07               	movlw	7
  4470  0015E4                     u3091:
  4471  0015E4  6ADE               	clrf	postinc2,c
  4472  0015E6  06E8               	decf	wreg,f,c
  4473  0015E8  E2FD               	bc	u3091
  4474  0015EA  500B               	movf	___aodiv@divisor,w,c
  4475  0015EC  100C               	iorwf	___aodiv@divisor+1,w,c
  4476  0015EE  100D               	iorwf	___aodiv@divisor+2,w,c
  4477  0015F0  100E               	iorwf	___aodiv@divisor+3,w,c
  4478  0015F2  100F               	iorwf	___aodiv@divisor+4,w,c
  4479  0015F4  1010               	iorwf	___aodiv@divisor+5,w,c
  4480  0015F6  1011               	iorwf	___aodiv@divisor+6,w,c
  4481  0015F8  1012               	iorwf	___aodiv@divisor+7,w,c
  4482  0015FA  B4D8               	btfsc	status,2,c
  4483  0015FC  D046               	goto	l3227
  4484  0015FE  0E01               	movlw	1
  4485  001600  6E13               	movwf	___aodiv@counter,c
  4486  001602  D00A               	goto	l3213
  4487  001604                     l3211:
  4488  001604  90D8               	bcf	status,0,c
  4489  001606  360B               	rlcf	___aodiv@divisor,f,c
  4490  001608  360C               	rlcf	___aodiv@divisor+1,f,c
  4491  00160A  360D               	rlcf	___aodiv@divisor+2,f,c
  4492  00160C  360E               	rlcf	___aodiv@divisor+3,f,c
  4493  00160E  360F               	rlcf	___aodiv@divisor+4,f,c
  4494  001610  3610               	rlcf	___aodiv@divisor+5,f,c
  4495  001612  3611               	rlcf	___aodiv@divisor+6,f,c
  4496  001614  3612               	rlcf	___aodiv@divisor+7,f,c
  4497  001616  2A13               	incf	___aodiv@counter,f,c
  4498  001618                     l3213:
  4499  001618  AE12               	btfss	___aodiv@divisor+7,7,c
  4500  00161A  D7F4               	goto	l3211
  4501  00161C                     u3110:
  4502  00161C  90D8               	bcf	status,0,c
  4503  00161E  3615               	rlcf	___aodiv@quotient,f,c
  4504  001620  3616               	rlcf	___aodiv@quotient+1,f,c
  4505  001622  3617               	rlcf	___aodiv@quotient+2,f,c
  4506  001624  3618               	rlcf	___aodiv@quotient+3,f,c
  4507  001626  3619               	rlcf	___aodiv@quotient+4,f,c
  4508  001628  361A               	rlcf	___aodiv@quotient+5,f,c
  4509  00162A  361B               	rlcf	___aodiv@quotient+6,f,c
  4510  00162C  361C               	rlcf	___aodiv@quotient+7,f,c
  4511  00162E  500B               	movf	___aodiv@divisor,w,c
  4512  001630  5C03               	subwf	___aodiv@dividend,w,c
  4513  001632  500C               	movf	___aodiv@divisor+1,w,c
  4514  001634  5804               	subwfb	___aodiv@dividend+1,w,c
  4515  001636  500D               	movf	___aodiv@divisor+2,w,c
  4516  001638  5805               	subwfb	___aodiv@dividend+2,w,c
  4517  00163A  500E               	movf	___aodiv@divisor+3,w,c
  4518  00163C  5806               	subwfb	___aodiv@dividend+3,w,c
  4519  00163E  500F               	movf	___aodiv@divisor+4,w,c
  4520  001640  5807               	subwfb	___aodiv@dividend+4,w,c
  4521  001642  5010               	movf	___aodiv@divisor+5,w,c
  4522  001644  5808               	subwfb	___aodiv@dividend+5,w,c
  4523  001646  5011               	movf	___aodiv@divisor+6,w,c
  4524  001648  5809               	subwfb	___aodiv@dividend+6,w,c
  4525  00164A  5012               	movf	___aodiv@divisor+7,w,c
  4526  00164C  580A               	subwfb	___aodiv@dividend+7,w,c
  4527  00164E  A0D8               	btfss	status,0,c
  4528  001650  D011               	goto	l3223
  4529  001652  500B               	movf	___aodiv@divisor,w,c
  4530  001654  5E03               	subwf	___aodiv@dividend,f,c
  4531  001656  500C               	movf	___aodiv@divisor+1,w,c
  4532  001658  5A04               	subwfb	___aodiv@dividend+1,f,c
  4533  00165A  500D               	movf	___aodiv@divisor+2,w,c
  4534  00165C  5A05               	subwfb	___aodiv@dividend+2,f,c
  4535  00165E  500E               	movf	___aodiv@divisor+3,w,c
  4536  001660  5A06               	subwfb	___aodiv@dividend+3,f,c
  4537  001662  500F               	movf	___aodiv@divisor+4,w,c
  4538  001664  5A07               	subwfb	___aodiv@dividend+4,f,c
  4539  001666  5010               	movf	___aodiv@divisor+5,w,c
  4540  001668  5A08               	subwfb	___aodiv@dividend+5,f,c
  4541  00166A  5011               	movf	___aodiv@divisor+6,w,c
  4542  00166C  5A09               	subwfb	___aodiv@dividend+6,f,c
  4543  00166E  5012               	movf	___aodiv@divisor+7,w,c
  4544  001670  5A0A               	subwfb	___aodiv@dividend+7,f,c
  4545  001672  8015               	bsf	___aodiv@quotient,0,c
  4546  001674                     l3223:
  4547  001674  90D8               	bcf	status,0,c
  4548  001676  3212               	rrcf	___aodiv@divisor+7,f,c
  4549  001678  3211               	rrcf	___aodiv@divisor+6,f,c
  4550  00167A  3210               	rrcf	___aodiv@divisor+5,f,c
  4551  00167C  320F               	rrcf	___aodiv@divisor+4,f,c
  4552  00167E  320E               	rrcf	___aodiv@divisor+3,f,c
  4553  001680  320D               	rrcf	___aodiv@divisor+2,f,c
  4554  001682  320C               	rrcf	___aodiv@divisor+1,f,c
  4555  001684  320B               	rrcf	___aodiv@divisor,f,c
  4556  001686  2E13               	decfsz	___aodiv@counter,f,c
  4557  001688  D7C9               	goto	u3110
  4558  00168A                     l3227:
  4559  00168A  5014               	movf	___aodiv@sign,w,c
  4560  00168C  B4D8               	btfsc	status,2,c
  4561  00168E  D010               	goto	l3231
  4562  001690  1E1C               	comf	___aodiv@quotient+7,f,c
  4563  001692  1E1B               	comf	___aodiv@quotient+6,f,c
  4564  001694  1E1A               	comf	___aodiv@quotient+5,f,c
  4565  001696  1E19               	comf	___aodiv@quotient+4,f,c
  4566  001698  1E18               	comf	___aodiv@quotient+3,f,c
  4567  00169A  1E17               	comf	___aodiv@quotient+2,f,c
  4568  00169C  1E16               	comf	___aodiv@quotient+1,f,c
  4569  00169E  6C15               	negf	___aodiv@quotient,c
  4570  0016A0  0E00               	movlw	0
  4571  0016A2  2216               	addwfc	___aodiv@quotient+1,f,c
  4572  0016A4  2217               	addwfc	___aodiv@quotient+2,f,c
  4573  0016A6  2218               	addwfc	___aodiv@quotient+3,f,c
  4574  0016A8  2219               	addwfc	___aodiv@quotient+4,f,c
  4575  0016AA  221A               	addwfc	___aodiv@quotient+5,f,c
  4576  0016AC  221B               	addwfc	___aodiv@quotient+6,f,c
  4577  0016AE  221C               	addwfc	___aodiv@quotient+7,f,c
  4578  0016B0                     l3231:
  4579  0016B0  C015  F003         	movff	___aodiv@quotient,?___aodiv
  4580  0016B4  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  4581  0016B8  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  4582  0016BC  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  4583  0016C0  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  4584  0016C4  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  4585  0016C8  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  4586  0016CC  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  4587  0016D0  0012               	return		;funcret
  4588  0016D2                     __end_of___aodiv:
  4589                           	opt callstack 0
  4590                           
  4591 ;; *************** function _read_MAX31856_temp *****************
  4592 ;; Defined at:
  4593 ;;		line 363 in file "main_ble.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  byte1           1   17[COMRAM] volatile unsigned char 
  4598 ;;  byte2           1   16[COMRAM] volatile unsigned char 
  4599 ;;  byte0           1   15[COMRAM] volatile unsigned char 
  4600 ;;  value           1   14[COMRAM] volatile unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  2   12[COMRAM] short 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         2       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4613 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4614 ;;Total ram usage:        6 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    2
  4617 ;; This function calls:
  4618 ;;		_convertTemp
  4619 ;;		_spi_read
  4620 ;;		_spi_send
  4621 ;; This function is called by:
  4622 ;;		_packetHandler
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text23
  4627  001CC4                     __ptext23:
  4628                           	opt callstack 0
  4629  001CC4                     _read_MAX31856_temp:
  4630                           	opt callstack 27
  4631                           
  4632                           ;main_ble.c: 365:     while(PORTBbits.RB4);
  4633                           
  4634                           ;incstack = 0
  4635  001CC4  B881               	btfsc	3969,4,c	;volatile
  4636  001CC6  D7FE               	goto	_read_MAX31856_temp
  4637                           
  4638                           ;main_ble.c: 366:     spi_send(0x0C);
  4639  001CC8  0E0C               	movlw	12
  4640  001CCA  EC78  F011         	call	_spi_send
  4641  001CCE                     l2885:
  4642  001CCE  505B               	movf	_drdy,w,c
  4643  001CD0  B4D8               	btfsc	status,2,c
  4644  001CD2  D7FD               	goto	l2885
  4645                           
  4646                           ;main_ble.c: 368:     drdy = 0;
  4647  001CD4  0E00               	movlw	0
  4648  001CD6  6E5B               	movwf	_drdy,c
  4649                           
  4650                           ;main_ble.c: 369:     volatile char value = spi_read();
  4651  001CD8  EC82  F011         	call	_spi_read	;wreg free
  4652  001CDC  6E0F               	movwf	read_MAX31856_temp@value,c	;volatile
  4653                           
  4654                           ;main_ble.c: 372:     spi_send(0xFF);
  4655  001CDE  0EFF               	movlw	255
  4656  001CE0  EC78  F011         	call	_spi_send
  4657  001CE4                     l2893:
  4658  001CE4  505B               	movf	_drdy,w,c
  4659  001CE6  B4D8               	btfsc	status,2,c
  4660  001CE8  D7FD               	goto	l2893
  4661                           
  4662                           ;main_ble.c: 374:     drdy = 0;
  4663  001CEA  0E00               	movlw	0
  4664  001CEC  6E5B               	movwf	_drdy,c
  4665                           
  4666                           ;main_ble.c: 375:     volatile char byte2 = spi_read();
  4667  001CEE  EC82  F011         	call	_spi_read	;wreg free
  4668  001CF2  6E11               	movwf	read_MAX31856_temp@byte2,c	;volatile
  4669                           
  4670                           ;main_ble.c: 378:     spi_send(0xFF);
  4671  001CF4  0EFF               	movlw	255
  4672  001CF6  EC78  F011         	call	_spi_send
  4673  001CFA                     l2901:
  4674  001CFA  505B               	movf	_drdy,w,c
  4675  001CFC  B4D8               	btfsc	status,2,c
  4676  001CFE  D7FD               	goto	l2901
  4677                           
  4678                           ;main_ble.c: 380:     drdy = 0;
  4679  001D00  0E00               	movlw	0
  4680  001D02  6E5B               	movwf	_drdy,c
  4681                           
  4682                           ;main_ble.c: 381:     volatile char byte1 = spi_read();
  4683  001D04  EC82  F011         	call	_spi_read	;wreg free
  4684  001D08  6E12               	movwf	read_MAX31856_temp@byte1,c	;volatile
  4685                           
  4686                           ;main_ble.c: 384:     spi_send(0xFF);
  4687  001D0A  0EFF               	movlw	255
  4688  001D0C  EC78  F011         	call	_spi_send
  4689  001D10                     l2909:
  4690  001D10  505B               	movf	_drdy,w,c
  4691  001D12  B4D8               	btfsc	status,2,c
  4692  001D14  D7FD               	goto	l2909
  4693                           
  4694                           ;main_ble.c: 386:     drdy = 0;
  4695  001D16  0E00               	movlw	0
  4696  001D18  6E5B               	movwf	_drdy,c
  4697                           
  4698                           ;main_ble.c: 387:     volatile char byte0 = spi_read();
  4699  001D1A  EC82  F011         	call	_spi_read	;wreg free
  4700  001D1E  6E10               	movwf	read_MAX31856_temp@byte0,c	;volatile
  4701                           
  4702                           ;main_ble.c: 389:     LATAbits.LA5 = 1;
  4703  001D20  8A89               	bsf	3977,5,c	;volatile
  4704                           
  4705                           ;main_ble.c: 391:     return convertTemp(byte2, byte1);
  4706  001D22  C012  F003         	movff	read_MAX31856_temp@byte1,convertTemp@byte1	;volatile
  4707  001D26  5011               	movf	read_MAX31856_temp@byte2,w,c	;volatile
  4708  001D28  ECCF  F00E         	call	_convertTemp
  4709  001D2C  C003  F00D         	movff	?_convertTemp,?_read_MAX31856_temp
  4710  001D30  C004  F00E         	movff	?_convertTemp+1,?_read_MAX31856_temp+1
  4711  001D34  0012               	return		;funcret
  4712  001D36                     __end_of_read_MAX31856_temp:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function _spi_read *****************
  4716 ;; Defined at:
  4717 ;;		line 359 in file "main_ble.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      unsigned char 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4734 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4735 ;;Total ram usage:        0 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    1
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_read_MAX31856_temp
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text24
  4746  002304                     __ptext24:
  4747                           	opt callstack 0
  4748  002304                     _spi_read:
  4749                           	opt callstack 27
  4750                           
  4751                           ;main_ble.c: 360:     return SSP1BUF;
  4752                           
  4753                           ;incstack = 0
  4754  002304  50C9               	movf	4041,w,c	;volatile
  4755  002306  0012               	return		;funcret
  4756  002308                     __end_of_spi_read:
  4757                           	opt callstack 0
  4758                           
  4759 ;; *************** function _convertTemp *****************
  4760 ;; Defined at:
  4761 ;;		line 394 in file "main_ble.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  byte2           1    wreg     unsigned char 
  4764 ;;  byte1           1    2[COMRAM] unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  byte2           1    7[COMRAM] unsigned char 
  4767 ;;  temp            2   10[COMRAM] volatile short 
  4768 ;;  sign            1    9[COMRAM] volatile unsigned char 
  4769 ;;  result          1    8[COMRAM] volatile unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2    2[COMRAM] short 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4779 ;;      Params:         2       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4782 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:       10 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_read_MAX31856_temp
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text25
  4794  001D9E                     __ptext25:
  4795                           	opt callstack 0
  4796  001D9E                     _convertTemp:
  4797                           	opt callstack 27
  4798                           
  4799                           ;incstack = 0
  4800                           ;convertTemp@byte2 stored from wreg
  4801  001D9E  6E08               	movwf	convertTemp@byte2,c
  4802                           
  4803                           ;main_ble.c: 395:     volatile char result = byte2 & (0b10000000);
  4804  001DA0  5008               	movf	convertTemp@byte2,w,c
  4805  001DA2  0B80               	andlw	128
  4806  001DA4  6E09               	movwf	convertTemp@result,c	;volatile
  4807                           
  4808                           ;main_ble.c: 396:     volatile char sign = 0;
  4809  001DA6  0E00               	movlw	0
  4810  001DA8  6E0A               	movwf	convertTemp@sign,c	;volatile
  4811                           
  4812                           ;main_ble.c: 398:     if(result != 0){
  4813  001DAA  5009               	movf	convertTemp@result,w,c	;volatile
  4814  001DAC  B4D8               	btfsc	status,2,c
  4815  001DAE  D005               	goto	l2629
  4816                           
  4817                           ;main_ble.c: 399:         sign = 1;
  4818  001DB0  0E01               	movlw	1
  4819  001DB2  6E0A               	movwf	convertTemp@sign,c	;volatile
  4820                           
  4821                           ;main_ble.c: 400:         byte2 = byte2 & (0b01111111);
  4822  001DB4  5008               	movf	convertTemp@byte2,w,c
  4823  001DB6  0B7F               	andlw	127
  4824  001DB8  6E08               	movwf	convertTemp@byte2,c
  4825  001DBA                     l2629:
  4826                           
  4827                           ;main_ble.c: 403:     volatile short int temp = (byte2<<4) | (byte1>>4);
  4828  001DBA  5008               	movf	convertTemp@byte2,w,c
  4829  001DBC  6E05               	movwf	??_convertTemp& (0+255),c
  4830  001DBE  6A06               	clrf	(??_convertTemp+1)& (0+255),c
  4831  001DC0  3A05               	swapf	??_convertTemp,f,c
  4832  001DC2  3A06               	swapf	??_convertTemp+1,f,c
  4833  001DC4  0EF0               	movlw	240
  4834  001DC6  1606               	andwf	??_convertTemp+1,f,c
  4835  001DC8  5005               	movf	??_convertTemp,w,c
  4836  001DCA  0B0F               	andlw	15
  4837  001DCC  1206               	iorwf	??_convertTemp+1,f,c
  4838  001DCE  0EF0               	movlw	240
  4839  001DD0  1605               	andwf	??_convertTemp,f,c
  4840  001DD2  C003  F007         	movff	convertTemp@byte1,??_convertTemp+2
  4841  001DD6  3A07               	swapf	??_convertTemp+2,f,c
  4842  001DD8  0E0F               	movlw	15
  4843  001DDA  1607               	andwf	??_convertTemp+2,f,c
  4844  001DDC  5007               	movf	??_convertTemp+2,w,c
  4845  001DDE  1005               	iorwf	??_convertTemp,w,c
  4846  001DE0  6E0B               	movwf	convertTemp@temp,c	;volatile
  4847  001DE2  5006               	movf	??_convertTemp+1,w,c
  4848  001DE4  6E0C               	movwf	convertTemp@temp+1,c	;volatile
  4849                           
  4850                           ;main_ble.c: 404:     if(sign){
  4851  001DE6  500A               	movf	convertTemp@sign,w,c	;volatile
  4852  001DE8  B4D8               	btfsc	status,2,c
  4853  001DEA  D006               	goto	l2633
  4854                           
  4855                           ;main_ble.c: 405:         temp = temp - 2048;
  4856  001DEC  0E00               	movlw	0
  4857  001DEE  240B               	addwf	convertTemp@temp,w,c	;volatile
  4858  001DF0  6E0B               	movwf	convertTemp@temp,c	;volatile
  4859  001DF2  0EF8               	movlw	248
  4860  001DF4  200C               	addwfc	convertTemp@temp+1,w,c	;volatile
  4861  001DF6  6E0C               	movwf	convertTemp@temp+1,c	;volatile
  4862  001DF8                     l2633:
  4863                           
  4864                           ;main_ble.c: 408:     return temp;
  4865  001DF8  C00B  F003         	movff	convertTemp@temp,?_convertTemp	;volatile
  4866  001DFC  C00C  F004         	movff	convertTemp@temp+1,?_convertTemp+1	;volatile
  4867  001E00  0012               	return		;funcret
  4868  001E02                     __end_of_convertTemp:
  4869                           	opt callstack 0
  4870                           
  4871 ;; *************** function _init_MAX31856 *****************
  4872 ;; Defined at:
  4873 ;;		line 411 in file "main_ble.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      unsigned char 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         0       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		_spi_send
  4896 ;; This function is called by:
  4897 ;;		_packetHandler
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text26
  4902  001FEC                     __ptext26:
  4903                           	opt callstack 0
  4904  001FEC                     _init_MAX31856:
  4905                           	opt callstack 27
  4906                           
  4907                           ;main_ble.c: 413:     spi_send(0x81);
  4908                           
  4909                           ;incstack = 0
  4910  001FEC  0E81               	movlw	129
  4911  001FEE  EC78  F011         	call	_spi_send
  4912  001FF2                     l2851:
  4913  001FF2  505B               	movf	_drdy,w,c
  4914  001FF4  B4D8               	btfsc	status,2,c
  4915  001FF6  D7FD               	goto	l2851
  4916                           
  4917                           ;main_ble.c: 415:     drdy = 0;
  4918  001FF8  0E00               	movlw	0
  4919  001FFA  6E5B               	movwf	_drdy,c
  4920                           
  4921                           ;main_ble.c: 416:     spi_send(0x43);
  4922  001FFC  0E43               	movlw	67
  4923  001FFE  EC78  F011         	call	_spi_send
  4924  002002                     l2857:
  4925  002002  505B               	movf	_drdy,w,c
  4926  002004  B4D8               	btfsc	status,2,c
  4927  002006  D7FD               	goto	l2857
  4928                           
  4929                           ;main_ble.c: 418:     drdy = 0;
  4930  002008  0E00               	movlw	0
  4931  00200A  6E5B               	movwf	_drdy,c
  4932                           
  4933                           ;main_ble.c: 419:     LATAbits.LA5 = 1;
  4934  00200C  8A89               	bsf	3977,5,c	;volatile
  4935                           
  4936                           ;main_ble.c: 420:     spi_send(0x80);
  4937  00200E  0E80               	movlw	128
  4938  002010  EC78  F011         	call	_spi_send
  4939  002014                     l2865:
  4940  002014  505B               	movf	_drdy,w,c
  4941  002016  B4D8               	btfsc	status,2,c
  4942  002018  D7FD               	goto	l2865
  4943                           
  4944                           ;main_ble.c: 422:     drdy = 0;
  4945  00201A  0E00               	movlw	0
  4946  00201C  6E5B               	movwf	_drdy,c
  4947                           
  4948                           ;main_ble.c: 423:     spi_send(0x41);
  4949  00201E  0E41               	movlw	65
  4950  002020  EC78  F011         	call	_spi_send
  4951  002024                     l2871:
  4952  002024  505B               	movf	_drdy,w,c
  4953  002026  B4D8               	btfsc	status,2,c
  4954  002028  D7FD               	goto	l2871
  4955                           
  4956                           ;main_ble.c: 425:     drdy = 0;
  4957  00202A  0E00               	movlw	0
  4958  00202C  6E5B               	movwf	_drdy,c
  4959                           
  4960                           ;main_ble.c: 427:     LATAbits.LA5 = 1;
  4961  00202E  8A89               	bsf	3977,5,c	;volatile
  4962                           
  4963                           ;main_ble.c: 428:     return 1;
  4964  002030  0E01               	movlw	1
  4965  002032  0012               	return		;funcret
  4966  002034                     __end_of_init_MAX31856:
  4967                           	opt callstack 0
  4968                           
  4969 ;; *************** function _spi_send *****************
  4970 ;; Defined at:
  4971 ;;		line 354 in file "main_ble.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  data            1    wreg     unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  data            1    2[COMRAM] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0
  4986 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4988 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4989 ;;Total ram usage:        1 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_read_MAX31856_temp
  4996 ;;		_init_MAX31856
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text27
  5001  0022F0                     __ptext27:
  5002                           	opt callstack 0
  5003  0022F0                     _spi_send:
  5004                           	opt callstack 27
  5005                           
  5006                           ;incstack = 0
  5007                           ;spi_send@data stored from wreg
  5008  0022F0  6E03               	movwf	spi_send@data,c
  5009                           
  5010                           ;main_ble.c: 355:     LATAbits.LA5 = 0;
  5011  0022F2  9A89               	bcf	3977,5,c	;volatile
  5012                           
  5013                           ;main_ble.c: 356:     SSP1BUF = data;
  5014  0022F4  C003  FFC9         	movff	spi_send@data,4041	;volatile
  5015  0022F8  0012               	return		;funcret
  5016  0022FA                     __end_of_spi_send:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function _RN4870_changeName *****************
  5020 ;; Defined at:
  5021 ;;		line 179 in file "main_ble.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  name            2   19[COMRAM] PTR unsigned char 
  5024 ;;		 -> name(50), 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  count           4   21[COMRAM] unsigned long 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      unsigned char 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5036 ;;      Params:         2       0       0       0       0       0       0       0       0
  5037 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5039 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        6 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    3
  5043 ;; This function calls:
  5044 ;;		_UART_Write_String
  5045 ;;		_memset
  5046 ;;		_strlen
  5047 ;;		_strstr
  5048 ;; This function is called by:
  5049 ;;		_packetHandler
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text28
  5054  000EBA                     __ptext28:
  5055                           	opt callstack 0
  5056  000EBA                     _RN4870_changeName:
  5057                           	opt callstack 26
  5058                           
  5059                           ;main_ble.c: 181:     UART_Write_String("$$$");
  5060                           
  5061                           ;incstack = 0
  5062  000EBA  0E97               	movlw	low STR_2
  5063  000EBC  6E07               	movwf	UART_Write_String@buffer,c
  5064  000EBE  0E08               	movlw	high STR_2
  5065  000EC0  6E08               	movwf	UART_Write_String@buffer+1,c
  5066  000EC2  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5067  000EC6                     l3465:
  5068                           
  5069                           ;main_ble.c: 182:     unsigned long count = 0;
  5070  000EC6  0E00               	movlw	0
  5071  000EC8  6E16               	movwf	RN4870_changeName@count,c
  5072  000ECA  0E00               	movlw	0
  5073  000ECC  6E17               	movwf	RN4870_changeName@count+1,c
  5074  000ECE  0E00               	movlw	0
  5075  000ED0  6E18               	movwf	RN4870_changeName@count+2,c
  5076  000ED2  0E00               	movlw	0
  5077  000ED4  6E19               	movwf	RN4870_changeName@count+3,c
  5078                           
  5079                           ;main_ble.c: 183:     while(strstr(RX_buffer,"CMD")==((void*)0)){
  5080  000ED6  D017               	goto	l3473
  5081  000ED8                     l3467:
  5082                           
  5083                           ;main_ble.c: 184:         count++;
  5084  000ED8  0E01               	movlw	1
  5085  000EDA  2616               	addwf	RN4870_changeName@count,f,c
  5086  000EDC  0E00               	movlw	0
  5087  000EDE  2217               	addwfc	RN4870_changeName@count+1,f,c
  5088  000EE0  2218               	addwfc	RN4870_changeName@count+2,f,c
  5089  000EE2  2219               	addwfc	RN4870_changeName@count+3,f,c
  5090                           
  5091                           ;main_ble.c: 185:         if(count>75000){
  5092  000EE4  5019               	movf	RN4870_changeName@count+3,w,c
  5093  000EE6  E108               	bnz	u3560
  5094  000EE8  0EF9               	movlw	249
  5095  000EEA  5C16               	subwf	RN4870_changeName@count,w,c
  5096  000EEC  0E24               	movlw	36
  5097  000EEE  5817               	subwfb	RN4870_changeName@count+1,w,c
  5098  000EF0  0E01               	movlw	1
  5099  000EF2  5818               	subwfb	RN4870_changeName@count+2,w,c
  5100  000EF4  A0D8               	btfss	status,0,c
  5101  000EF6  D007               	goto	l3473
  5102  000EF8                     u3560:
  5103                           
  5104                           ;main_ble.c: 186:             UART_Write_String("$$$");
  5105  000EF8  0E97               	movlw	low STR_2
  5106  000EFA  6E07               	movwf	UART_Write_String@buffer,c
  5107  000EFC  0E08               	movlw	high STR_2
  5108  000EFE  6E08               	movwf	UART_Write_String@buffer+1,c
  5109  000F00  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5110  000F04  D7E0               	goto	l3465
  5111  000F06                     l3473:
  5112                           
  5113                           ;main_ble.c: 183:     while(strstr(RX_buffer,"CMD")==((void*)0)){
  5114  000F06  0EB6               	movlw	low _RX_buffer
  5115  000F08  6E0E               	movwf	strstr@h,c
  5116  000F0A  0E01               	movlw	high _RX_buffer
  5117  000F0C  6E0F               	movwf	strstr@h+1,c
  5118  000F0E  0E9F               	movlw	low STR_3
  5119  000F10  6E10               	movwf	strstr@n,c
  5120  000F12  0E08               	movlw	high STR_3
  5121  000F14  6E11               	movwf	strstr@n+1,c
  5122  000F16  EC18  F00E         	call	_strstr	;wreg free
  5123  000F1A  500E               	movf	?_strstr,w,c
  5124  000F1C  100F               	iorwf	?_strstr+1,w,c
  5125  000F1E  B4D8               	btfsc	status,2,c
  5126  000F20  D7DB               	goto	l3467
  5127                           
  5128                           ;main_ble.c: 191:     memset(RX_buffer,0,strlen(RX_buffer));
  5129  000F22  0EB6               	movlw	low _RX_buffer
  5130  000F24  6E07               	movwf	memset@dest,c
  5131  000F26  0E01               	movlw	high _RX_buffer
  5132  000F28  6E08               	movwf	memset@dest+1,c
  5133  000F2A  0E00               	movlw	0
  5134  000F2C  6E0A               	movwf	memset@c+1,c
  5135  000F2E  0E00               	movlw	0
  5136  000F30  6E09               	movwf	memset@c,c
  5137  000F32  0EB6               	movlw	low _RX_buffer
  5138  000F34  6E03               	movwf	strlen@s,c
  5139  000F36  0E01               	movlw	high _RX_buffer
  5140  000F38  6E04               	movwf	strlen@s+1,c
  5141  000F3A  EC1A  F010         	call	_strlen	;wreg free
  5142  000F3E  C003  F00B         	movff	?_strlen,memset@n
  5143  000F42  C004  F00C         	movff	?_strlen+1,memset@n+1
  5144  000F46  EC69  F00B         	call	_memset	;wreg free
  5145                           
  5146                           ;main_ble.c: 192:     ix = 0;
  5147  000F4A  0E00               	movlw	0
  5148  000F4C  0100               	movlb	0	; () banked
  5149  000F4E  6FA4               	movwf	(_ix+1)& (0+255),b
  5150  000F50  0E00               	movlw	0
  5151  000F52  6FA3               	movwf	_ix& (0+255),b
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;main_ble.c: 194:     UART_Write_String("SS,C0\r");
  5155  000F54  0E78               	movlw	low STR_5
  5156  000F56  6E07               	movwf	UART_Write_String@buffer,c
  5157  000F58  0E08               	movlw	high STR_5
  5158  000F5A  6E08               	movwf	UART_Write_String@buffer+1,c
  5159  000F5C  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5160  000F60                     l3481:
  5161                           
  5162                           ;main_ble.c: 195:     count = 0;
  5163  000F60  0E00               	movlw	0
  5164  000F62  6E16               	movwf	RN4870_changeName@count,c
  5165  000F64  0E00               	movlw	0
  5166  000F66  6E17               	movwf	RN4870_changeName@count+1,c
  5167  000F68  0E00               	movlw	0
  5168  000F6A  6E18               	movwf	RN4870_changeName@count+2,c
  5169  000F6C  0E00               	movlw	0
  5170  000F6E  6E19               	movwf	RN4870_changeName@count+3,c
  5171                           
  5172                           ;main_ble.c: 196:     while(strstr(RX_buffer,"AOK")==((void*)0)){
  5173  000F70  D017               	goto	l3489
  5174  000F72                     l3483:
  5175                           
  5176                           ;main_ble.c: 197:         count++;
  5177  000F72  0E01               	movlw	1
  5178  000F74  2616               	addwf	RN4870_changeName@count,f,c
  5179  000F76  0E00               	movlw	0
  5180  000F78  2217               	addwfc	RN4870_changeName@count+1,f,c
  5181  000F7A  2218               	addwfc	RN4870_changeName@count+2,f,c
  5182  000F7C  2219               	addwfc	RN4870_changeName@count+3,f,c
  5183                           
  5184                           ;main_ble.c: 198:         if(count>75000){
  5185  000F7E  5019               	movf	RN4870_changeName@count+3,w,c
  5186  000F80  E108               	bnz	u3580
  5187  000F82  0EF9               	movlw	249
  5188  000F84  5C16               	subwf	RN4870_changeName@count,w,c
  5189  000F86  0E24               	movlw	36
  5190  000F88  5817               	subwfb	RN4870_changeName@count+1,w,c
  5191  000F8A  0E01               	movlw	1
  5192  000F8C  5818               	subwfb	RN4870_changeName@count+2,w,c
  5193  000F8E  A0D8               	btfss	status,0,c
  5194  000F90  D007               	goto	l3489
  5195  000F92                     u3580:
  5196                           
  5197                           ;main_ble.c: 199:             UART_Write_String("SS,C0\r");
  5198  000F92  0E78               	movlw	low STR_5
  5199  000F94  6E07               	movwf	UART_Write_String@buffer,c
  5200  000F96  0E08               	movlw	high STR_5
  5201  000F98  6E08               	movwf	UART_Write_String@buffer+1,c
  5202  000F9A  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5203  000F9E  D7E0               	goto	l3481
  5204  000FA0                     l3489:
  5205                           
  5206                           ;main_ble.c: 196:     while(strstr(RX_buffer,"AOK")==((void*)0)){
  5207  000FA0  0EB6               	movlw	low _RX_buffer
  5208  000FA2  6E0E               	movwf	strstr@h,c
  5209  000FA4  0E01               	movlw	high _RX_buffer
  5210  000FA6  6E0F               	movwf	strstr@h+1,c
  5211  000FA8  0EA3               	movlw	low STR_6
  5212  000FAA  6E10               	movwf	strstr@n,c
  5213  000FAC  0E08               	movlw	high STR_6
  5214  000FAE  6E11               	movwf	strstr@n+1,c
  5215  000FB0  EC18  F00E         	call	_strstr	;wreg free
  5216  000FB4  500E               	movf	?_strstr,w,c
  5217  000FB6  100F               	iorwf	?_strstr+1,w,c
  5218  000FB8  B4D8               	btfsc	status,2,c
  5219  000FBA  D7DB               	goto	l3483
  5220                           
  5221                           ;main_ble.c: 204:     memset(RX_buffer,0,strlen(RX_buffer));
  5222  000FBC  0EB6               	movlw	low _RX_buffer
  5223  000FBE  6E07               	movwf	memset@dest,c
  5224  000FC0  0E01               	movlw	high _RX_buffer
  5225  000FC2  6E08               	movwf	memset@dest+1,c
  5226  000FC4  0E00               	movlw	0
  5227  000FC6  6E0A               	movwf	memset@c+1,c
  5228  000FC8  0E00               	movlw	0
  5229  000FCA  6E09               	movwf	memset@c,c
  5230  000FCC  0EB6               	movlw	low _RX_buffer
  5231  000FCE  6E03               	movwf	strlen@s,c
  5232  000FD0  0E01               	movlw	high _RX_buffer
  5233  000FD2  6E04               	movwf	strlen@s+1,c
  5234  000FD4  EC1A  F010         	call	_strlen	;wreg free
  5235  000FD8  C003  F00B         	movff	?_strlen,memset@n
  5236  000FDC  C004  F00C         	movff	?_strlen+1,memset@n+1
  5237  000FE0  EC69  F00B         	call	_memset	;wreg free
  5238                           
  5239                           ;main_ble.c: 205:     ix = 0;
  5240  000FE4  0E00               	movlw	0
  5241  000FE6  0100               	movlb	0	; () banked
  5242  000FE8  6FA4               	movwf	(_ix+1)& (0+255),b
  5243  000FEA  0E00               	movlw	0
  5244  000FEC  6FA3               	movwf	_ix& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;main_ble.c: 207:     UART_Write_String("S-,");
  5248  000FEE  0E9B               	movlw	low STR_8
  5249  000FF0  6E07               	movwf	UART_Write_String@buffer,c
  5250  000FF2  0E08               	movlw	high STR_8
  5251  000FF4  6E08               	movwf	UART_Write_String@buffer+1,c
  5252  000FF6  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5253                           
  5254                           ;main_ble.c: 208:     UART_Write_String(name);
  5255  000FFA  C014  F007         	movff	RN4870_changeName@name,UART_Write_String@buffer
  5256  000FFE  C015  F008         	movff	RN4870_changeName@name+1,UART_Write_String@buffer+1
  5257  001002  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5258                           
  5259                           ;main_ble.c: 209:     UART_Write_String("\r");
  5260  001006  0E7D               	movlw	low (STR_5+5)
  5261  001008  6E07               	movwf	UART_Write_String@buffer,c
  5262  00100A  0E08               	movlw	high (STR_5+5)
  5263  00100C  6E08               	movwf	UART_Write_String@buffer+1,c
  5264  00100E  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5265  001012                     l3501:
  5266                           
  5267                           ;main_ble.c: 210:     count = 0;
  5268  001012  0E00               	movlw	0
  5269  001014  6E16               	movwf	RN4870_changeName@count,c
  5270  001016  0E00               	movlw	0
  5271  001018  6E17               	movwf	RN4870_changeName@count+1,c
  5272  00101A  0E00               	movlw	0
  5273  00101C  6E18               	movwf	RN4870_changeName@count+2,c
  5274  00101E  0E00               	movlw	0
  5275  001020  6E19               	movwf	RN4870_changeName@count+3,c
  5276                           
  5277                           ;main_ble.c: 211:     while(strstr(RX_buffer,"AOK")==((void*)0)){
  5278  001022  D023               	goto	l3509
  5279  001024                     l3503:
  5280                           
  5281                           ;main_ble.c: 212:         count++;
  5282  001024  0E01               	movlw	1
  5283  001026  2616               	addwf	RN4870_changeName@count,f,c
  5284  001028  0E00               	movlw	0
  5285  00102A  2217               	addwfc	RN4870_changeName@count+1,f,c
  5286  00102C  2218               	addwfc	RN4870_changeName@count+2,f,c
  5287  00102E  2219               	addwfc	RN4870_changeName@count+3,f,c
  5288                           
  5289                           ;main_ble.c: 213:         if(count>75000){
  5290  001030  5019               	movf	RN4870_changeName@count+3,w,c
  5291  001032  E108               	bnz	u3600
  5292  001034  0EF9               	movlw	249
  5293  001036  5C16               	subwf	RN4870_changeName@count,w,c
  5294  001038  0E24               	movlw	36
  5295  00103A  5817               	subwfb	RN4870_changeName@count+1,w,c
  5296  00103C  0E01               	movlw	1
  5297  00103E  5818               	subwfb	RN4870_changeName@count+2,w,c
  5298  001040  A0D8               	btfss	status,0,c
  5299  001042  D013               	goto	l3509
  5300  001044                     u3600:
  5301                           
  5302                           ;main_ble.c: 214:             UART_Write_String("S-,");
  5303  001044  0E9B               	movlw	low STR_8
  5304  001046  6E07               	movwf	UART_Write_String@buffer,c
  5305  001048  0E08               	movlw	high STR_8
  5306  00104A  6E08               	movwf	UART_Write_String@buffer+1,c
  5307  00104C  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5308                           
  5309                           ;main_ble.c: 215:             UART_Write_String(name);
  5310  001050  C014  F007         	movff	RN4870_changeName@name,UART_Write_String@buffer
  5311  001054  C015  F008         	movff	RN4870_changeName@name+1,UART_Write_String@buffer+1
  5312  001058  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5313                           
  5314                           ;main_ble.c: 216:             UART_Write_String("\r");
  5315  00105C  0E7D               	movlw	low (STR_5+5)
  5316  00105E  6E07               	movwf	UART_Write_String@buffer,c
  5317  001060  0E08               	movlw	high (STR_5+5)
  5318  001062  6E08               	movwf	UART_Write_String@buffer+1,c
  5319  001064  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5320  001068  D7D4               	goto	l3501
  5321  00106A                     l3509:
  5322                           
  5323                           ;main_ble.c: 211:     while(strstr(RX_buffer,"AOK")==((void*)0)){
  5324  00106A  0EB6               	movlw	low _RX_buffer
  5325  00106C  6E0E               	movwf	strstr@h,c
  5326  00106E  0E01               	movlw	high _RX_buffer
  5327  001070  6E0F               	movwf	strstr@h+1,c
  5328  001072  0EA3               	movlw	low STR_6
  5329  001074  6E10               	movwf	strstr@n,c
  5330  001076  0E08               	movlw	high STR_6
  5331  001078  6E11               	movwf	strstr@n+1,c
  5332  00107A  EC18  F00E         	call	_strstr	;wreg free
  5333  00107E  500E               	movf	?_strstr,w,c
  5334  001080  100F               	iorwf	?_strstr+1,w,c
  5335  001082  B4D8               	btfsc	status,2,c
  5336  001084  D7CF               	goto	l3503
  5337                           
  5338                           ;main_ble.c: 221:     memset(RX_buffer,0,strlen(RX_buffer));
  5339  001086  0EB6               	movlw	low _RX_buffer
  5340  001088  6E07               	movwf	memset@dest,c
  5341  00108A  0E01               	movlw	high _RX_buffer
  5342  00108C  6E08               	movwf	memset@dest+1,c
  5343  00108E  0E00               	movlw	0
  5344  001090  6E0A               	movwf	memset@c+1,c
  5345  001092  0E00               	movlw	0
  5346  001094  6E09               	movwf	memset@c,c
  5347  001096  0EB6               	movlw	low _RX_buffer
  5348  001098  6E03               	movwf	strlen@s,c
  5349  00109A  0E01               	movlw	high _RX_buffer
  5350  00109C  6E04               	movwf	strlen@s+1,c
  5351  00109E  EC1A  F010         	call	_strlen	;wreg free
  5352  0010A2  C003  F00B         	movff	?_strlen,memset@n
  5353  0010A6  C004  F00C         	movff	?_strlen+1,memset@n+1
  5354  0010AA  EC69  F00B         	call	_memset	;wreg free
  5355                           
  5356                           ;main_ble.c: 222:     ix = 0;
  5357  0010AE  0E00               	movlw	0
  5358  0010B0  0100               	movlb	0	; () banked
  5359  0010B2  6FA4               	movwf	(_ix+1)& (0+255),b
  5360  0010B4  0E00               	movlw	0
  5361  0010B6  6FA3               	movwf	_ix& (0+255),b
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main_ble.c: 224:     UART_Write_String("R,1\r");
  5365  0010B8  0E8D               	movlw	low STR_13
  5366  0010BA  6E07               	movwf	UART_Write_String@buffer,c
  5367  0010BC  0E08               	movlw	high STR_13
  5368  0010BE  6E08               	movwf	UART_Write_String@buffer+1,c
  5369  0010C0  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5370  0010C4                     l3517:
  5371                           
  5372                           ;main_ble.c: 225:     count = 0;
  5373  0010C4  0E00               	movlw	0
  5374  0010C6  6E16               	movwf	RN4870_changeName@count,c
  5375  0010C8  0E00               	movlw	0
  5376  0010CA  6E17               	movwf	RN4870_changeName@count+1,c
  5377  0010CC  0E00               	movlw	0
  5378  0010CE  6E18               	movwf	RN4870_changeName@count+2,c
  5379  0010D0  0E00               	movlw	0
  5380  0010D2  6E19               	movwf	RN4870_changeName@count+3,c
  5381                           
  5382                           ;main_ble.c: 226:     while(strstr(RX_buffer,"Rebooting")==((void*)0)){
  5383  0010D4  D017               	goto	l3525
  5384  0010D6                     l3519:
  5385                           
  5386                           ;main_ble.c: 227:         count++;
  5387  0010D6  0E01               	movlw	1
  5388  0010D8  2616               	addwf	RN4870_changeName@count,f,c
  5389  0010DA  0E00               	movlw	0
  5390  0010DC  2217               	addwfc	RN4870_changeName@count+1,f,c
  5391  0010DE  2218               	addwfc	RN4870_changeName@count+2,f,c
  5392  0010E0  2219               	addwfc	RN4870_changeName@count+3,f,c
  5393                           
  5394                           ;main_ble.c: 228:         if(count>75000){
  5395  0010E2  5019               	movf	RN4870_changeName@count+3,w,c
  5396  0010E4  E108               	bnz	u3620
  5397  0010E6  0EF9               	movlw	249
  5398  0010E8  5C16               	subwf	RN4870_changeName@count,w,c
  5399  0010EA  0E24               	movlw	36
  5400  0010EC  5817               	subwfb	RN4870_changeName@count+1,w,c
  5401  0010EE  0E01               	movlw	1
  5402  0010F0  5818               	subwfb	RN4870_changeName@count+2,w,c
  5403  0010F2  A0D8               	btfss	status,0,c
  5404  0010F4  D007               	goto	l3525
  5405  0010F6                     u3620:
  5406                           
  5407                           ;main_ble.c: 229:             UART_Write_String("R,1\r");
  5408  0010F6  0E8D               	movlw	low STR_13
  5409  0010F8  6E07               	movwf	UART_Write_String@buffer,c
  5410  0010FA  0E08               	movlw	high STR_13
  5411  0010FC  6E08               	movwf	UART_Write_String@buffer+1,c
  5412  0010FE  EC9B  F00E         	call	_UART_Write_String	;wreg free
  5413  001102  D7E0               	goto	l3517
  5414  001104                     l3525:
  5415                           
  5416                           ;main_ble.c: 226:     while(strstr(RX_buffer,"Rebooting")==((void*)0)){
  5417  001104  0EB6               	movlw	low _RX_buffer
  5418  001106  6E0E               	movwf	strstr@h,c
  5419  001108  0E01               	movlw	high _RX_buffer
  5420  00110A  6E0F               	movwf	strstr@h+1,c
  5421  00110C  0E57               	movlw	low STR_14
  5422  00110E  6E10               	movwf	strstr@n,c
  5423  001110  0E08               	movlw	high STR_14
  5424  001112  6E11               	movwf	strstr@n+1,c
  5425  001114  EC18  F00E         	call	_strstr	;wreg free
  5426  001118  500E               	movf	?_strstr,w,c
  5427  00111A  100F               	iorwf	?_strstr+1,w,c
  5428  00111C  B4D8               	btfsc	status,2,c
  5429  00111E  D7DB               	goto	l3519
  5430                           
  5431                           ;main_ble.c: 234:     memset(RX_buffer,0,strlen(RX_buffer));
  5432  001120  0EB6               	movlw	low _RX_buffer
  5433  001122  6E07               	movwf	memset@dest,c
  5434  001124  0E01               	movlw	high _RX_buffer
  5435  001126  6E08               	movwf	memset@dest+1,c
  5436  001128  0E00               	movlw	0
  5437  00112A  6E0A               	movwf	memset@c+1,c
  5438  00112C  0E00               	movlw	0
  5439  00112E  6E09               	movwf	memset@c,c
  5440  001130  0EB6               	movlw	low _RX_buffer
  5441  001132  6E03               	movwf	strlen@s,c
  5442  001134  0E01               	movlw	high _RX_buffer
  5443  001136  6E04               	movwf	strlen@s+1,c
  5444  001138  EC1A  F010         	call	_strlen	;wreg free
  5445  00113C  C003  F00B         	movff	?_strlen,memset@n
  5446  001140  C004  F00C         	movff	?_strlen+1,memset@n+1
  5447  001144  EC69  F00B         	call	_memset	;wreg free
  5448                           
  5449                           ;main_ble.c: 235:     ix = 0;
  5450  001148  0E00               	movlw	0
  5451  00114A  0100               	movlb	0	; () banked
  5452  00114C  6FA4               	movwf	(_ix+1)& (0+255),b
  5453  00114E  0E00               	movlw	0
  5454  001150  6FA3               	movwf	_ix& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457  001152  0012               	return		;funcret
  5458  001154                     __end_of_RN4870_changeName:
  5459                           	opt callstack 0
  5460                           
  5461 ;; *************** function _strstr *****************
  5462 ;; Defined at:
  5463 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strstr.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  h               2   13[COMRAM] PTR const unsigned char 
  5466 ;;		 -> NULL(0), RX_buffer(500), 
  5467 ;;  n               2   15[COMRAM] PTR const unsigned char 
  5468 ;;		 -> STR_28(12), STR_27(12), STR_24(10), STR_23(10), 
  5469 ;;		 -> STR_22(8), STR_20(8), STR_18(12), STR_16(4), 
  5470 ;;		 -> STR_14(10), STR_10(4), STR_6(4), STR_3(4), 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  nl              2   17[COMRAM] unsigned int 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  2   13[COMRAM] PTR unsigned char 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         4       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5485 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:        6 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    2
  5489 ;; This function calls:
  5490 ;;		_strchr
  5491 ;;		_strlen
  5492 ;;		_strncmp
  5493 ;; This function is called by:
  5494 ;;		_RN4870_changeName
  5495 ;;		_packetHandler
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text29
  5500  001C30                     __ptext29:
  5501                           	opt callstack 0
  5502  001C30                     _strstr:
  5503                           	opt callstack 27
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;incstack = 0
  5507  001C30  5010               	movf	strstr@n,w,c
  5508  001C32  1011               	iorwf	strstr@n+1,w,c
  5509  001C34  B4D8               	btfsc	status,2,c
  5510  001C36  D041               	goto	u3540
  5511  001C38  C010  F003         	movff	strstr@n,strlen@s
  5512  001C3C  C011  F004         	movff	strstr@n+1,strlen@s+1
  5513  001C40  EC1A  F010         	call	_strlen	;wreg free
  5514  001C44  C003  F012         	movff	?_strlen,strstr@nl
  5515  001C48  C004  F013         	movff	?_strlen+1,strstr@nl+1
  5516  001C4C  D02B               	goto	l3447
  5517  001C4E                     l3439:
  5518  001C4E  C00E  F003         	movff	strstr@h,strncmp@_l
  5519  001C52  C00F  F004         	movff	strstr@h+1,strncmp@_l+1
  5520  001C56  C010  F005         	movff	strstr@n,strncmp@_r
  5521  001C5A  C011  F006         	movff	strstr@n+1,strncmp@_r+1
  5522  001C5E  C012  F007         	movff	strstr@nl,strncmp@n
  5523  001C62  C013  F008         	movff	strstr@nl+1,strncmp@n+1
  5524  001C66  EC2A  F00D         	call	_strncmp	;wreg free
  5525  001C6A  5003               	movf	?_strncmp,w,c
  5526  001C6C  1004               	iorwf	?_strncmp+1,w,c
  5527  001C6E  A4D8               	btfss	status,2,c
  5528  001C70  D005               	goto	l3445
  5529  001C72  C00E  F00E         	movff	strstr@h,?_strstr
  5530  001C76  C00F  F00F         	movff	strstr@h+1,?_strstr+1
  5531  001C7A  0012               	return	
  5532  001C7C                     l3445:
  5533  001C7C  0E01               	movlw	1
  5534  001C7E  240E               	addwf	strstr@h,w,c
  5535  001C80  6E03               	movwf	strchr@s,c
  5536  001C82  0E00               	movlw	0
  5537  001C84  200F               	addwfc	strstr@h+1,w,c
  5538  001C86  6E04               	movwf	strchr@s+1,c
  5539  001C88  C010  FFF6         	movff	strstr@n,tblptrl
  5540  001C8C  C011  FFF7         	movff	strstr@n+1,tblptrh
  5541  001C90                     	if	0	;tblptru may be non-zero
  5542  001C90                     	endif
  5543  001C90                     	if	0	;tblptru may be non-zero
  5544  001C90                     	endif
  5545  001C90  0008               	tblrd		*
  5546  001C92  50F5               	movf	tablat,w,c
  5547  001C94  6E05               	movwf	strchr@c,c
  5548  001C96  6A06               	clrf	strchr@c+1,c
  5549  001C98  EC93  F010         	call	_strchr	;wreg free
  5550  001C9C  C003  F00E         	movff	?_strchr,strstr@h
  5551  001CA0  C004  F00F         	movff	?_strchr+1,strstr@h+1
  5552  001CA4                     l3447:
  5553  001CA4  500E               	movf	strstr@h,w,c
  5554  001CA6  100F               	iorwf	strstr@h+1,w,c
  5555  001CA8  B4D8               	btfsc	status,2,c
  5556  001CAA  D007               	goto	u3540
  5557  001CAC  C00E  FFD9         	movff	strstr@h,fsr2l
  5558  001CB0  C00F  FFDA         	movff	strstr@h+1,fsr2h
  5559  001CB4  50DF               	movf	indf2,w,c
  5560  001CB6  A4D8               	btfss	status,2,c
  5561  001CB8  D7CA               	goto	l3439
  5562  001CBA                     u3540:
  5563  001CBA  0E00               	movlw	0
  5564  001CBC  6E0E               	movwf	?_strstr,c
  5565  001CBE  0E00               	movlw	0
  5566  001CC0  6E0F               	movwf	?_strstr+1,c
  5567  001CC2  0012               	return		;funcret
  5568  001CC4                     __end_of_strstr:
  5569                           	opt callstack 0
  5570                           
  5571 ;; *************** function _strncmp *****************
  5572 ;; Defined at:
  5573 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  5576 ;;		 -> NULL(0), RX_buffer(500), 
  5577 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  5578 ;;		 -> STR_28(12), STR_27(12), STR_24(10), STR_23(10), 
  5579 ;;		 -> STR_22(8), STR_20(8), STR_18(12), STR_16(4), 
  5580 ;;		 -> STR_14(10), STR_10(4), STR_6(4), STR_3(4), 
  5581 ;;  n               2    6[COMRAM] unsigned int 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  r               2   11[COMRAM] PTR const unsigned char 
  5584 ;;		 -> STR_28(12), STR_27(12), STR_24(10), STR_23(10), 
  5585 ;;		 -> STR_22(8), STR_20(8), STR_18(12), STR_16(4), 
  5586 ;;		 -> STR_14(10), STR_10(4), STR_6(4), STR_3(4), 
  5587 ;;  l               2    9[COMRAM] PTR const unsigned char 
  5588 ;;		 -> NULL(0), RX_buffer(500), 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    2[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5598 ;;      Params:         6       0       0       0       0       0       0       0       0
  5599 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5601 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5602 ;;Total ram usage:       11 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_strstr
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text30
  5613  001A54                     __ptext30:
  5614                           	opt callstack 0
  5615  001A54                     _strncmp:
  5616                           	opt callstack 27
  5617                           
  5618                           ;incstack = 0
  5619  001A54  C003  F00A         	movff	strncmp@_l,strncmp@l
  5620  001A58  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  5621  001A5C  C005  F00C         	movff	strncmp@_r,strncmp@r
  5622  001A60  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  5623  001A64  0607               	decf	strncmp@n,f,c
  5624  001A66  A0D8               	btfss	status,0,c
  5625  001A68  0608               	decf	strncmp@n+1,f,c
  5626  001A6A  2807               	incf	strncmp@n,w,c
  5627  001A6C  E10F               	bnz	l2495
  5628  001A6E  2808               	incf	strncmp@n+1,w,c
  5629  001A70  A4D8               	btfss	status,2,c
  5630  001A72  D00C               	goto	l2495
  5631  001A74  0E00               	movlw	0
  5632  001A76  6E04               	movwf	?_strncmp+1,c
  5633  001A78  0E00               	movlw	0
  5634  001A7A  6E03               	movwf	?_strncmp,c
  5635  001A7C  0012               	return	
  5636  001A7E                     l2493:
  5637  001A7E  4A0A               	infsnz	strncmp@l,f,c
  5638  001A80  2A0B               	incf	strncmp@l+1,f,c
  5639  001A82  4A0C               	infsnz	strncmp@r,f,c
  5640  001A84  2A0D               	incf	strncmp@r+1,f,c
  5641  001A86  0607               	decf	strncmp@n,f,c
  5642  001A88  A0D8               	btfss	status,0,c
  5643  001A8A  0608               	decf	strncmp@n+1,f,c
  5644  001A8C                     l2495:
  5645  001A8C  C00A  FFD9         	movff	strncmp@l,fsr2l
  5646  001A90  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5647  001A94  50DF               	movf	indf2,w,c
  5648  001A96  B4D8               	btfsc	status,2,c
  5649  001A98  D01C               	goto	u2110
  5650  001A9A  C00C  FFF6         	movff	strncmp@r,tblptrl
  5651  001A9E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5652  001AA2                     	if	0	;tblptru may be non-zero
  5653  001AA2                     	endif
  5654  001AA2                     	if	0	;tblptru may be non-zero
  5655  001AA2                     	endif
  5656  001AA2  0008               	tblrd		*
  5657  001AA4  50F5               	movf	tablat,w,c
  5658  001AA6  0900               	iorlw	0
  5659  001AA8  B4D8               	btfsc	status,2,c
  5660  001AAA  D013               	goto	u2110
  5661  001AAC  5007               	movf	strncmp@n,w,c
  5662  001AAE  1008               	iorwf	strncmp@n+1,w,c
  5663  001AB0  B4D8               	btfsc	status,2,c
  5664  001AB2  D00F               	goto	u2110
  5665  001AB4  C00A  FFD9         	movff	strncmp@l,fsr2l
  5666  001AB8  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5667  001ABC  50DF               	movf	indf2,w,c
  5668  001ABE  6E09               	movwf	??_strncmp& (0+255),c
  5669  001AC0  C00C  FFF6         	movff	strncmp@r,tblptrl
  5670  001AC4  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5671  001AC8                     	if	0	;tblptru may be non-zero
  5672  001AC8                     	endif
  5673  001AC8                     	if	0	;tblptru may be non-zero
  5674  001AC8                     	endif
  5675  001AC8  0008               	tblrd		*
  5676  001ACA  50F5               	movf	tablat,w,c
  5677  001ACC  1809               	xorwf	??_strncmp,w,c
  5678  001ACE  B4D8               	btfsc	status,2,c
  5679  001AD0  D7D6               	goto	l2493
  5680  001AD2                     u2110:
  5681  001AD2  C00A  FFD9         	movff	strncmp@l,fsr2l
  5682  001AD6  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5683  001ADA  50DF               	movf	indf2,w,c
  5684  001ADC  6E09               	movwf	??_strncmp& (0+255),c
  5685  001ADE  C00C  FFF6         	movff	strncmp@r,tblptrl
  5686  001AE2  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5687  001AE6                     	if	0	;tblptru may be non-zero
  5688  001AE6                     	endif
  5689  001AE6                     	if	0	;tblptru may be non-zero
  5690  001AE6                     	endif
  5691  001AE6  0008               	tblrd		*
  5692  001AE8  50F5               	movf	tablat,w,c
  5693  001AEA  5C09               	subwf	??_strncmp,w,c
  5694  001AEC  6E03               	movwf	?_strncmp,c
  5695  001AEE  6A04               	clrf	?_strncmp+1,c
  5696  001AF0  A0D8               	btfss	status,0,c
  5697  001AF2  0604               	decf	?_strncmp+1,f,c
  5698  001AF4  0012               	return		;funcret
  5699  001AF6                     __end_of_strncmp:
  5700                           	opt callstack 0
  5701                           
  5702 ;; *************** function _strchr *****************
  5703 ;; Defined at:
  5704 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strchr.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5707 ;;		 -> NULL(0), RX_buffer(500), 
  5708 ;;  c               2    4[COMRAM] int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  2    2[COMRAM] PTR unsigned char 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5720 ;;      Params:         4       0       0       0       0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5722 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5723 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5724 ;;Total ram usage:        5 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_strstr
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text31
  5735  002126                     __ptext31:
  5736                           	opt callstack 0
  5737  002126                     _strchr:
  5738                           	opt callstack 27
  5739                           
  5740                           ;incstack = 0
  5741  002126  C003  FFD9         	movff	strchr@s,fsr2l
  5742  00212A  C004  FFDA         	movff	strchr@s+1,fsr2h
  5743  00212E  5005               	movf	strchr@c,w,c
  5744  002130  18DE               	xorwf	postinc2,w,c
  5745  002132  A4D8               	btfss	status,2,c
  5746  002134  D005               	goto	l2513
  5747  002136  C003  F003         	movff	strchr@s,?_strchr
  5748  00213A  C004  F004         	movff	strchr@s+1,?_strchr+1
  5749  00213E  0012               	return	
  5750  002140                     l2513:
  5751  002140  C003  FFD9         	movff	strchr@s,fsr2l
  5752  002144  C004  FFDA         	movff	strchr@s+1,fsr2h
  5753  002148  4A03               	infsnz	strchr@s,f,c
  5754  00214A  2A04               	incf	strchr@s+1,f,c
  5755  00214C  50DF               	movf	indf2,w,c
  5756  00214E  A4D8               	btfss	status,2,c
  5757  002150  D7EA               	goto	_strchr
  5758  002152  0E00               	movlw	0
  5759  002154  6E03               	movwf	?_strchr,c
  5760  002156  0E00               	movlw	0
  5761  002158  6E04               	movwf	?_strchr+1,c
  5762  00215A  0012               	return		;funcret
  5763  00215C                     __end_of_strchr:
  5764                           	opt callstack 0
  5765                           
  5766 ;; *************** function _memset *****************
  5767 ;; Defined at:
  5768 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  dest            2    6[COMRAM] PTR void 
  5771 ;;		 -> RX_buffer(500), 
  5772 ;;  c               2    8[COMRAM] int 
  5773 ;;  n               2   10[COMRAM] unsigned int 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  s               2   16[COMRAM] PTR unsigned char 
  5776 ;;		 -> RX_buffer(500), 
  5777 ;;  k               2   14[COMRAM] unsigned int 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  2    6[COMRAM] PTR void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5787 ;;      Params:         6       0       0       0       0       0       0       0       0
  5788 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5789 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5790 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5791 ;;Total ram usage:       12 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_RN4870_changeName
  5798 ;;		_packetHandler
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text32
  5803  0016D2                     __ptext32:
  5804                           	opt callstack 0
  5805  0016D2                     _memset:
  5806                           	opt callstack 28
  5807                           
  5808                           ;incstack = 0
  5809  0016D2  C007  F011         	movff	memset@dest,memset@s
  5810  0016D6  C008  F012         	movff	memset@dest+1,memset@s+1
  5811  0016DA  500B               	movf	memset@n,w,c
  5812  0016DC  100C               	iorwf	memset@n+1,w,c
  5813  0016DE  B4D8               	btfsc	status,2,c
  5814  0016E0  0012               	return	
  5815  0016E2  C011  FFD9         	movff	memset@s,fsr2l
  5816  0016E6  C012  FFDA         	movff	memset@s+1,fsr2h
  5817  0016EA  C009  FFDF         	movff	memset@c,indf2
  5818  0016EE  500B               	movf	memset@n,w,c
  5819  0016F0  2411               	addwf	memset@s,w,c
  5820  0016F2  6E0D               	movwf	??_memset& (0+255),c
  5821  0016F4  500C               	movf	memset@n+1,w,c
  5822  0016F6  2012               	addwfc	memset@s+1,w,c
  5823  0016F8  6E0E               	movwf	(??_memset+1)& (0+255),c
  5824  0016FA  0EFF               	movlw	255
  5825  0016FC  240D               	addwf	??_memset,w,c
  5826  0016FE  6ED9               	movwf	fsr2l,c
  5827  001700  0EFF               	movlw	255
  5828  001702  200E               	addwfc	??_memset+1,w,c
  5829  001704  6EDA               	movwf	fsr2h,c
  5830  001706  C009  FFDF         	movff	memset@c,indf2
  5831  00170A  500C               	movf	memset@n+1,w,c
  5832  00170C  E104               	bnz	l2589
  5833  00170E  0E03               	movlw	3
  5834  001710  5C0B               	subwf	memset@n,w,c
  5835  001712  A0D8               	btfss	status,0,c
  5836  001714  0012               	return	
  5837  001716                     l2589:
  5838  001716  EE20 F001          	lfsr	2,1
  5839  00171A  5011               	movf	memset@s,w,c
  5840  00171C  26D9               	addwf	fsr2l,f,c
  5841  00171E  5012               	movf	memset@s+1,w,c
  5842  001720  22DA               	addwfc	fsr2h,f,c
  5843  001722  C009  FFDF         	movff	memset@c,indf2
  5844  001726  EE20 F002          	lfsr	2,2
  5845  00172A  5011               	movf	memset@s,w,c
  5846  00172C  26D9               	addwf	fsr2l,f,c
  5847  00172E  5012               	movf	memset@s+1,w,c
  5848  001730  22DA               	addwfc	fsr2h,f,c
  5849  001732  C009  FFDF         	movff	memset@c,indf2
  5850  001736  500B               	movf	memset@n,w,c
  5851  001738  2411               	addwf	memset@s,w,c
  5852  00173A  6E0D               	movwf	??_memset& (0+255),c
  5853  00173C  500C               	movf	memset@n+1,w,c
  5854  00173E  2012               	addwfc	memset@s+1,w,c
  5855  001740  6E0E               	movwf	(??_memset+1)& (0+255),c
  5856  001742  0EFE               	movlw	254
  5857  001744  240D               	addwf	??_memset,w,c
  5858  001746  6ED9               	movwf	fsr2l,c
  5859  001748  0EFF               	movlw	255
  5860  00174A  200E               	addwfc	??_memset+1,w,c
  5861  00174C  6EDA               	movwf	fsr2h,c
  5862  00174E  C009  FFDF         	movff	memset@c,indf2
  5863  001752  500B               	movf	memset@n,w,c
  5864  001754  2411               	addwf	memset@s,w,c
  5865  001756  6E0D               	movwf	??_memset& (0+255),c
  5866  001758  500C               	movf	memset@n+1,w,c
  5867  00175A  2012               	addwfc	memset@s+1,w,c
  5868  00175C  6E0E               	movwf	(??_memset+1)& (0+255),c
  5869  00175E  0EFD               	movlw	253
  5870  001760  240D               	addwf	??_memset,w,c
  5871  001762  6ED9               	movwf	fsr2l,c
  5872  001764  0EFF               	movlw	255
  5873  001766  200E               	addwfc	??_memset+1,w,c
  5874  001768  6EDA               	movwf	fsr2h,c
  5875  00176A  C009  FFDF         	movff	memset@c,indf2
  5876  00176E  500C               	movf	memset@n+1,w,c
  5877  001770  E104               	bnz	l2595
  5878  001772  0E07               	movlw	7
  5879  001774  5C0B               	subwf	memset@n,w,c
  5880  001776  A0D8               	btfss	status,0,c
  5881  001778  0012               	return	
  5882  00177A                     l2595:
  5883  00177A  EE20 F003          	lfsr	2,3
  5884  00177E  5011               	movf	memset@s,w,c
  5885  001780  26D9               	addwf	fsr2l,f,c
  5886  001782  5012               	movf	memset@s+1,w,c
  5887  001784  22DA               	addwfc	fsr2h,f,c
  5888  001786  C009  FFDF         	movff	memset@c,indf2
  5889  00178A  500B               	movf	memset@n,w,c
  5890  00178C  2411               	addwf	memset@s,w,c
  5891  00178E  6E0D               	movwf	??_memset& (0+255),c
  5892  001790  500C               	movf	memset@n+1,w,c
  5893  001792  2012               	addwfc	memset@s+1,w,c
  5894  001794  6E0E               	movwf	(??_memset+1)& (0+255),c
  5895  001796  0EFC               	movlw	252
  5896  001798  240D               	addwf	??_memset,w,c
  5897  00179A  6ED9               	movwf	fsr2l,c
  5898  00179C  0EFF               	movlw	255
  5899  00179E  200E               	addwfc	??_memset+1,w,c
  5900  0017A0  6EDA               	movwf	fsr2h,c
  5901  0017A2  C009  FFDF         	movff	memset@c,indf2
  5902  0017A6  500C               	movf	memset@n+1,w,c
  5903  0017A8  E104               	bnz	l2601
  5904  0017AA  0E09               	movlw	9
  5905  0017AC  5C0B               	subwf	memset@n,w,c
  5906  0017AE  A0D8               	btfss	status,0,c
  5907  0017B0  0012               	return	
  5908  0017B2                     l2601:
  5909  0017B2  C011  F00D         	movff	memset@s,??_memset
  5910  0017B6  C012  F00E         	movff	memset@s+1,??_memset+1
  5911  0017BA  1E0D               	comf	??_memset,f,c
  5912  0017BC  1E0E               	comf	??_memset+1,f,c
  5913  0017BE  4A0D               	infsnz	??_memset,f,c
  5914  0017C0  2A0E               	incf	??_memset+1,f,c
  5915  0017C2  0E03               	movlw	3
  5916  0017C4  140D               	andwf	??_memset,w,c
  5917  0017C6  6E0F               	movwf	memset@k,c
  5918  0017C8  6A10               	clrf	memset@k+1,c
  5919  0017CA  500F               	movf	memset@k,w,c
  5920  0017CC  2611               	addwf	memset@s,f,c
  5921  0017CE  5010               	movf	memset@k+1,w,c
  5922  0017D0  2212               	addwfc	memset@s+1,f,c
  5923  0017D2  500F               	movf	memset@k,w,c
  5924  0017D4  5E0B               	subwf	memset@n,f,c
  5925  0017D6  5010               	movf	memset@k+1,w,c
  5926  0017D8  5A0C               	subwfb	memset@n+1,f,c
  5927  0017DA  0EFC               	movlw	252
  5928  0017DC  160B               	andwf	memset@n,f,c
  5929  0017DE  0EFF               	movlw	255
  5930  0017E0  160C               	andwf	memset@n+1,f,c
  5931  0017E2  D00B               	goto	l2609
  5932  0017E4                     l2603:
  5933  0017E4  C011  FFD9         	movff	memset@s,fsr2l
  5934  0017E8  C012  FFDA         	movff	memset@s+1,fsr2h
  5935  0017EC  C009  FFDF         	movff	memset@c,indf2
  5936  0017F0  060B               	decf	memset@n,f,c
  5937  0017F2  A0D8               	btfss	status,0,c
  5938  0017F4  060C               	decf	memset@n+1,f,c
  5939  0017F6  4A11               	infsnz	memset@s,f,c
  5940  0017F8  2A12               	incf	memset@s+1,f,c
  5941  0017FA                     l2609:
  5942  0017FA  500B               	movf	memset@n,w,c
  5943  0017FC  100C               	iorwf	memset@n+1,w,c
  5944  0017FE  B4D8               	btfsc	status,2,c
  5945  001800  0012               	return	
  5946  001802  D7F0               	goto	l2603
  5947  001804                     __end_of_memset:
  5948                           	opt callstack 0
  5949                           
  5950 ;; *************** function _UART_Write_String *****************
  5951 ;; Defined at:
  5952 ;;		line 172 in file "main_ble.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  buffer          2    6[COMRAM] PTR unsigned char 
  5955 ;;		 -> packetHandler@answer_1211(50), name(50), packetHandler@answer_1204(50), packetHandler@answer_1195(20), 
  5956 ;;		 -> STR_19(16), packetHandler@answer(50), STR_17(7), STR_15(5), 
  5957 ;;		 -> STR_13(5), STR_12(2), STR_11(4), STR_9(2), 
  5958 ;;		 -> STR_8(4), STR_7(7), STR_5(7), STR_4(4), 
  5959 ;;		 -> STR_2(4), STR_1(7), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  i               2   10[COMRAM] int 
  5962 ;;  size            2   12[COMRAM] volatile int 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5972 ;;      Params:         2       0       0       0       0       0       0       0       0
  5973 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5974 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5975 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5976 ;;Total ram usage:        8 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    2
  5979 ;; This function calls:
  5980 ;;		_UART_Write
  5981 ;;		_strlen
  5982 ;; This function is called by:
  5983 ;;		_main
  5984 ;;		_RN4870_changeName
  5985 ;;		_packetHandler
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text33
  5990  001D36                     __ptext33:
  5991                           	opt callstack 0
  5992  001D36                     _UART_Write_String:
  5993                           	opt callstack 27
  5994                           
  5995                           ;main_ble.c: 173:     volatile int size = strlen(buffer);
  5996                           
  5997                           ;incstack = 0
  5998  001D36  C007  F003         	movff	UART_Write_String@buffer,strlen@s
  5999  001D3A  C008  F004         	movff	UART_Write_String@buffer+1,strlen@s+1
  6000  001D3E  EC1A  F010         	call	_strlen	;wreg free
  6001  001D42  C003  F00D         	movff	?_strlen,UART_Write_String@size	;volatile
  6002  001D46  C004  F00E         	movff	?_strlen+1,UART_Write_String@size+1	;volatile
  6003                           
  6004                           ;main_ble.c: 174:     for(int i = 0 ; i < size ; i++){
  6005  001D4A  0E00               	movlw	0
  6006  001D4C  6E0C               	movwf	UART_Write_String@i+1,c
  6007  001D4E  0E00               	movlw	0
  6008  001D50  6E0B               	movwf	UART_Write_String@i,c
  6009  001D52  D01A               	goto	l3433
  6010  001D54                     l3429:
  6011                           
  6012                           ;main_ble.c: 175:       UART_Write(buffer[i]);
  6013  001D54  500B               	movf	UART_Write_String@i,w,c
  6014  001D56  2407               	addwf	UART_Write_String@buffer,w,c
  6015  001D58  6E09               	movwf	??_UART_Write_String& (0+255),c
  6016  001D5A  500C               	movf	UART_Write_String@i+1,w,c
  6017  001D5C  2008               	addwfc	UART_Write_String@buffer+1,w,c
  6018  001D5E  6E0A               	movwf	(??_UART_Write_String+1)& (0+255),c
  6019  001D60  C009  FFF6         	movff	??_UART_Write_String,tblptrl
  6020  001D64  C00A  FFF7         	movff	??_UART_Write_String+1,tblptrh
  6021  001D68  6AF8               	clrf	tblptru,c
  6022  001D6A  0E07               	movlw	(high __ramtop+-1)
  6023  001D6C  64F7               	cpfsgt	tblptrh,c
  6024  001D6E  D003               	bra	u3497
  6025  001D70  0008               	tblrd		*
  6026  001D72  50F5               	movf	tablat,w,c
  6027  001D74  D005               	bra	u3490
  6028  001D76                     u3497:
  6029  001D76  CFF6 FFE1          	movff	tblptrl,fsr1l
  6030  001D7A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6031  001D7E  50E7               	movf	indf1,w,c
  6032  001D80                     u3490:
  6033  001D80  EC72  F011         	call	_UART_Write
  6034                           
  6035                           ;main_ble.c: 176:     }
  6036  001D84  4A0B               	infsnz	UART_Write_String@i,f,c
  6037  001D86  2A0C               	incf	UART_Write_String@i+1,f,c
  6038  001D88                     l3433:
  6039  001D88  500D               	movf	UART_Write_String@size,w,c	;volatile
  6040  001D8A  5C0B               	subwf	UART_Write_String@i,w,c
  6041  001D8C  500C               	movf	UART_Write_String@i+1,w,c
  6042  001D8E  0A80               	xorlw	128
  6043  001D90  6E09               	movwf	??_UART_Write_String& (0+255),c
  6044  001D92  500E               	movf	UART_Write_String@size+1,w,c	;volatile
  6045  001D94  0A80               	xorlw	128
  6046  001D96  5809               	subwfb	??_UART_Write_String& (0+255),w,c
  6047  001D98  B0D8               	btfsc	status,0,c
  6048  001D9A  0012               	return	
  6049  001D9C  D7DB               	goto	l3429
  6050  001D9E                     __end_of_UART_Write_String:
  6051                           	opt callstack 0
  6052                           
  6053 ;; *************** function _strlen *****************
  6054 ;; Defined at:
  6055 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  s               2    2[COMRAM] PTR const unsigned char 
  6058 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1211(50), 
  6059 ;;		 -> name(50), STR_29(12), STR_28(12), STR_27(12), 
  6060 ;;		 -> packetHandler@answer_1204(50), STR_25(10), STR_24(10), STR_23(10), 
  6061 ;;		 -> STR_22(8), packetHandler@answer_1195(20), STR_20(8), STR_19(16), 
  6062 ;;		 -> STR_18(12), packetHandler@answer(50), STR_17(7), STR_16(4), 
  6063 ;;		 -> STR_14(10), STR_15(5), STR_13(5), STR_10(4), 
  6064 ;;		 -> STR_12(2), STR_11(4), STR_9(2), STR_8(4), 
  6065 ;;		 -> STR_6(4), STR_7(7), STR_5(7), NULL(0), 
  6066 ;;		 -> STR_3(4), STR_4(4), STR_2(4), STR_1(7), 
  6067 ;;		 -> RX_buffer(500), 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6070 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1211(50), 
  6071 ;;		 -> name(50), STR_29(12), STR_28(12), STR_27(12), 
  6072 ;;		 -> packetHandler@answer_1204(50), STR_25(10), STR_24(10), STR_23(10), 
  6073 ;;		 -> STR_22(8), packetHandler@answer_1195(20), STR_20(8), STR_19(16), 
  6074 ;;		 -> STR_18(12), packetHandler@answer(50), STR_17(7), STR_16(4), 
  6075 ;;		 -> STR_14(10), STR_15(5), STR_13(5), STR_10(4), 
  6076 ;;		 -> STR_12(2), STR_11(4), STR_9(2), STR_8(4), 
  6077 ;;		 -> STR_6(4), STR_7(7), STR_5(7), NULL(0), 
  6078 ;;		 -> STR_3(4), STR_4(4), STR_2(4), STR_1(7), 
  6079 ;;		 -> RX_buffer(500), 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2    2[COMRAM] unsigned int 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6092 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6093 ;;Total ram usage:        4 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_UART_Write_String
  6100 ;;		_RN4870_changeName
  6101 ;;		_packetHandler
  6102 ;;		_pad
  6103 ;;		_stoa
  6104 ;;		_strstr
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text34
  6109  002034                     __ptext34:
  6110                           	opt callstack 0
  6111  002034                     _strlen:
  6112                           	opt callstack 27
  6113                           
  6114                           ;incstack = 0
  6115  002034  C003  F005         	movff	strlen@s,strlen@a
  6116  002038  C004  F006         	movff	strlen@s+1,strlen@a+1
  6117  00203C  D002               	goto	l3151
  6118  00203E                     l3149:
  6119  00203E  4A03               	infsnz	strlen@s,f,c
  6120  002040  2A04               	incf	strlen@s+1,f,c
  6121  002042                     l3151:
  6122  002042  C003  FFF6         	movff	strlen@s,tblptrl
  6123  002046  C004  FFF7         	movff	strlen@s+1,tblptrh
  6124  00204A  6AF8               	clrf	tblptru,c
  6125  00204C  0E07               	movlw	(high __ramtop+-1)
  6126  00204E  64F7               	cpfsgt	tblptrh,c
  6127  002050  D003               	bra	u2997
  6128  002052  0008               	tblrd		*
  6129  002054  50F5               	movf	tablat,w,c
  6130  002056  D005               	bra	u2990
  6131  002058                     u2997:
  6132  002058  CFF6 FFE1          	movff	tblptrl,fsr1l
  6133  00205C  CFF7 FFE2          	movff	tblptrh,fsr1h
  6134  002060  50E7               	movf	indf1,w,c
  6135  002062                     u2990:
  6136  002062  0900               	iorlw	0
  6137  002064  A4D8               	btfss	status,2,c
  6138  002066  D7EB               	goto	l3149
  6139  002068  5005               	movf	strlen@a,w,c
  6140  00206A  5C03               	subwf	strlen@s,w,c
  6141  00206C  6E03               	movwf	?_strlen,c
  6142  00206E  5006               	movf	strlen@a+1,w,c
  6143  002070  5804               	subwfb	strlen@s+1,w,c
  6144  002072  6E04               	movwf	?_strlen+1,c
  6145  002074  0012               	return		;funcret
  6146  002076                     __end_of_strlen:
  6147                           	opt callstack 0
  6148                           
  6149 ;; *************** function _UART_Write *****************
  6150 ;; Defined at:
  6151 ;;		line 165 in file "main_ble.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  data            1    wreg     unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  data            1    2[COMRAM] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6165 ;;      Params:         0       0       0       0       0       0       0       0       0
  6166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6169 ;;Total ram usage:        1 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_UART_Write_String
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text35
  6180  0022E4                     __ptext35:
  6181                           	opt callstack 0
  6182  0022E4                     _UART_Write:
  6183                           	opt callstack 27
  6184                           
  6185                           ;incstack = 0
  6186                           ;UART_Write@data stored from wreg
  6187  0022E4  6E03               	movwf	UART_Write@data,c
  6188  0022E6                     
  6189                           ;main_ble.c: 168:     while(!TXSTA1bits.TRMT);
  6190  0022E6  A2AC               	btfss	4012,1,c	;volatile
  6191  0022E8  D7FE               	goto	l2423
  6192                           
  6193                           ;main_ble.c: 169:     TXREG1 = data;
  6194  0022EA  C003  FFAD         	movff	UART_Write@data,4013	;volatile
  6195  0022EE  0012               	return		;funcret
  6196  0022F0                     __end_of_UART_Write:
  6197                           	opt callstack 0
  6198                           
  6199 ;; *************** function _UART_Init *****************
  6200 ;; Defined at:
  6201 ;;		line 129 in file "main_ble.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0
  6216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6219 ;;Total ram usage:        0 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    1
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_main
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text36
  6230  0022AE                     __ptext36:
  6231                           	opt callstack 0
  6232  0022AE                     _UART_Init:
  6233                           	opt callstack 29
  6234                           
  6235                           ;main_ble.c: 130:     TXSTA1bits.SYNC = 0;
  6236                           
  6237                           ;incstack = 0
  6238  0022AE  98AC               	bcf	4012,4,c	;volatile
  6239                           
  6240                           ;main_ble.c: 131:     RCSTA1bits.SPEN = 1;
  6241  0022B0  8EAB               	bsf	4011,7,c	;volatile
  6242                           
  6243                           ;main_ble.c: 132:     TXSTA1bits.BRGH = 1;
  6244  0022B2  84AC               	bsf	4012,2,c	;volatile
  6245                           
  6246                           ;main_ble.c: 133:     BAUDCON1bits.BRG16 = 1;
  6247  0022B4  86B8               	bsf	4024,3,c	;volatile
  6248                           
  6249                           ;main_ble.c: 134:     SPBRG1 = 34;
  6250  0022B6  0E22               	movlw	34
  6251  0022B8  6EAF               	movwf	4015,c	;volatile
  6252                           
  6253                           ;main_ble.c: 146:     TRISCbits.RC6 = 1;
  6254  0022BA  8C94               	bsf	3988,6,c	;volatile
  6255                           
  6256                           ;main_ble.c: 147:     TRISCbits.RC7 = 1;
  6257  0022BC  8E94               	bsf	3988,7,c	;volatile
  6258                           
  6259                           ;main_ble.c: 150:     INTCONbits.GIE = 0;
  6260  0022BE  9EF2               	bcf	4082,7,c	;volatile
  6261                           
  6262                           ;main_ble.c: 151:     RCONbits.IPEN = 1;
  6263  0022C0  8ED0               	bsf	4048,7,c	;volatile
  6264                           
  6265                           ;main_ble.c: 152:     PIE1bits.RCIE = 1;
  6266  0022C2  8A9D               	bsf	3997,5,c	;volatile
  6267                           
  6268                           ;main_ble.c: 153:     IPR1bits.RCIP = 1;
  6269  0022C4  8A9F               	bsf	3999,5,c	;volatile
  6270                           
  6271                           ;main_ble.c: 155:     RCSTA1bits.CREN = 1;
  6272  0022C6  88AB               	bsf	4011,4,c	;volatile
  6273                           
  6274                           ;main_ble.c: 158:     PIR1bits.RCIF = 0;
  6275  0022C8  9A9E               	bcf	3998,5,c	;volatile
  6276                           
  6277                           ;main_ble.c: 159:     PIR1bits.TXIF = 0;
  6278  0022CA  989E               	bcf	3998,4,c	;volatile
  6279                           
  6280                           ;main_ble.c: 161:     TXSTA1bits.TXEN = 1;
  6281  0022CC  8AAC               	bsf	4012,5,c	;volatile
  6282                           
  6283                           ;main_ble.c: 162:     INTCONbits.GIE = 1;
  6284  0022CE  8EF2               	bsf	4082,7,c	;volatile
  6285  0022D0  0012               	return		;funcret
  6286  0022D2                     __end_of_UART_Init:
  6287                           	opt callstack 0
  6288                           
  6289 ;; *************** function _SYSTEM_Initialize *****************
  6290 ;; Defined at:
  6291 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6305 ;;      Params:         0       0       0       0       0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    2
  6312 ;; This function calls:
  6313 ;;		_OSCILLATOR_Initialize
  6314 ;;		_PIN_MANAGER_Initialize
  6315 ;; This function is called by:
  6316 ;;		_main
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text37
  6321  0022FA                     __ptext37:
  6322                           	opt callstack 0
  6323  0022FA                     _SYSTEM_Initialize:
  6324                           	opt callstack 28
  6325                           
  6326                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6327                           
  6328                           ;incstack = 0
  6329  0022FA  EC42  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  6330                           
  6331                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6332  0022FE  EC69  F011         	call	_OSCILLATOR_Initialize	;wreg free
  6333  002302  0012               	return		;funcret
  6334  002304                     __end_of_SYSTEM_Initialize:
  6335                           	opt callstack 0
  6336                           
  6337 ;; *************** function _PIN_MANAGER_Initialize *****************
  6338 ;; Defined at:
  6339 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;		None
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;		None
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6353 ;;      Params:         0       0       0       0       0       0       0       0       0
  6354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6356 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6357 ;;Total ram usage:        0 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_SYSTEM_Initialize
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text38
  6368  002284                     __ptext38:
  6369                           	opt callstack 0
  6370  002284                     _PIN_MANAGER_Initialize:
  6371                           	opt callstack 28
  6372                           
  6373                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6374                           
  6375                           ;incstack = 0
  6376  002284  0E00               	movlw	0
  6377  002286  6E89               	movwf	3977,c	;volatile
  6378                           
  6379                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6380  002288  0E00               	movlw	0
  6381  00228A  6E8A               	movwf	3978,c	;volatile
  6382                           
  6383                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6384  00228C  0E00               	movlw	0
  6385  00228E  6E8B               	movwf	3979,c	;volatile
  6386                           
  6387                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  6388  002290  6892               	setf	3986,c	;volatile
  6389                           
  6390                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  6391  002292  6893               	setf	3987,c	;volatile
  6392                           
  6393                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xC7;
  6394  002294  0EC7               	movlw	199
  6395  002296  6E94               	movwf	3988,c	;volatile
  6396                           
  6397                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  6398  002298  0E00               	movlw	0
  6399  00229A  010F               	movlb	15	; () banked
  6400  00229C  6F5D               	movwf	93,b	;volatile
  6401                           
  6402                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6403  00229E  0E00               	movlw	0
  6404  0022A0  6F5C               	movwf	92,b	;volatile
  6405                           
  6406                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  6407  0022A2  0E00               	movlw	0
  6408  0022A4  6F5B               	movwf	91,b	;volatile
  6409                           
  6410                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6411  0022A6  0E00               	movlw	0
  6412  0022A8  6E85               	movwf	3973,c	;volatile
  6413                           
  6414                           ; BSR set to: 15
  6415                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  6416  0022AA  8EF1               	bsf	4081,7,c	;volatile
  6417                           
  6418                           ; BSR set to: 15
  6419  0022AC  0012               	return		;funcret
  6420  0022AE                     __end_of_PIN_MANAGER_Initialize:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _OSCILLATOR_Initialize *****************
  6424 ;; Defined at:
  6425 ;;		line 57 in file "mcc_generated_files/mcc.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    1
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_SYSTEM_Initialize
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text39
  6454  0022D2                     __ptext39:
  6455                           	opt callstack 0
  6456  0022D2                     _OSCILLATOR_Initialize:
  6457                           	opt callstack 28
  6458                           
  6459                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x70;
  6460                           
  6461                           ; BSR set to: 15
  6462                           ;incstack = 0
  6463  0022D2  0E70               	movlw	112
  6464  0022D4  6ED3               	movwf	4051,c	;volatile
  6465                           
  6466                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x90;
  6467  0022D6  0E90               	movlw	144
  6468  0022D8  6ED2               	movwf	4050,c	;volatile
  6469                           
  6470                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x80;
  6471  0022DA  0E80               	movlw	128
  6472  0022DC  6E9B               	movwf	3995,c	;volatile
  6473                           
  6474                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
  6475  0022DE  0E00               	movlw	0
  6476  0022E0  6EB5               	movwf	4021,c	;volatile
  6477  0022E2  0012               	return		;funcret
  6478  0022E4                     __end_of_OSCILLATOR_Initialize:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function _high_ISR *****************
  6482 ;; Defined at:
  6483 ;;		line 58 in file "main_ble.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6497 ;;      Params:         0       0       0       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6500 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6501 ;;Total ram usage:        2 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		Interrupt level 2
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	intcode
  6511  000008                     __pintcode:
  6512                           	opt callstack 0
  6513  000008                     _high_ISR:
  6514                           	opt callstack 21
  6515                           
  6516                           ;incstack = 0
  6517  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6518  00000A  CFD9 F001          	movff	fsr2l,??_high_ISR
  6519  00000E  CFDA F002          	movff	fsr2h,??_high_ISR+1
  6520                           
  6521                           ;main_ble.c: 60:    if(PIR1bits.SSPIF == 1){
  6522  000012  A69E               	btfss	3998,3,c	;volatile
  6523  000014  D003               	goto	i2l3095
  6524                           
  6525                           ;main_ble.c: 61:         drdy = 1;
  6526  000016  0E01               	movlw	1
  6527  000018  6E5B               	movwf	_drdy,c
  6528                           
  6529                           ;main_ble.c: 63:         PIR1bits.SSPIF = 0;
  6530  00001A  969E               	bcf	3998,3,c	;volatile
  6531  00001C                     i2l3095:
  6532                           
  6533                           ;main_ble.c: 65:    if (PIR1bits.RCIF == 1){
  6534  00001C  AA9E               	btfss	3998,5,c	;volatile
  6535  00001E  D00E               	goto	i2l146
  6536                           
  6537                           ;main_ble.c: 66:         if(debug){
  6538  000020  0100               	movlb	0	; () banked
  6539  000022  51A7               	movf	_debug& (0+255),w,b
  6540  000024  A4D8               	btfss	status,2,c
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;main_ble.c: 67:            LATAbits.LA1 = 1;
  6544  000026  8289               	bsf	3977,1,c	;volatile
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;main_ble.c: 69:         RX_buffer[ix] = RCREG1;
  6548  000028  0EB6               	movlw	low _RX_buffer
  6549  00002A  25A3               	addwf	_ix& (0+255),w,b
  6550  00002C  6ED9               	movwf	fsr2l,c
  6551  00002E  0E01               	movlw	high _RX_buffer
  6552  000030  21A4               	addwfc	(_ix+1)& (0+255),w,b
  6553  000032  6EDA               	movwf	fsr2h,c
  6554  000034  CFAE FFDF          	movff	4014,indf2	;volatile
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;main_ble.c: 70:         ix++;
  6558  000038  4BA3               	infsnz	_ix& (0+255),f,b
  6559  00003A  2BA4               	incf	(_ix+1)& (0+255),f,b
  6560  00003C                     i2l146:
  6561  00003C  C002  FFDA         	movff	??_high_ISR+1,fsr2h
  6562  000040  C001  FFD9         	movff	??_high_ISR,fsr2l
  6563  000044  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6564  000046  0011               	retfie		f
  6565  000048                     __end_of_high_ISR:
  6566                           	opt callstack 0
  6567                           
  6568                           	psect	rparam
  6569  0000                     
  6570                           	psect	temp
  6571  00005D                     btemp:
  6572                           	opt callstack 0
  6573  00005D                     	ds	1
  6574  0000                     int$flags	set	btemp
  6575  0000                     wtemp8	set	btemp+1
  6576  0000                     ttemp5	set	btemp+1
  6577  0000                     ttemp6	set	btemp+4
  6578  0000                     ttemp7	set	btemp+8
  6579                           tosu	equ	0xFFF
  6580                           tosh	equ	0xFFE
  6581                           tosl	equ	0xFFD
  6582                           stkptr	equ	0xFFC
  6583                           pclatu	equ	0xFFB
  6584                           pclath	equ	0xFFA
  6585                           pcl	equ	0xFF9
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           indf0	equ	0xFEF
  6593                           postinc0	equ	0xFEE
  6594                           postdec0	equ	0xFED
  6595                           preinc0	equ	0xFEC
  6596                           plusw0	equ	0xFEB
  6597                           fsr0h	equ	0xFEA
  6598                           fsr0l	equ	0xFE9
  6599                           wreg	equ	0xFE8
  6600                           indf1	equ	0xFE7
  6601                           postinc1	equ	0xFE6
  6602                           postdec1	equ	0xFE5
  6603                           preinc1	equ	0xFE4
  6604                           plusw1	equ	0xFE3
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           bsr	equ	0xFE0
  6608                           indf2	equ	0xFDF
  6609                           postinc2	equ	0xFDE
  6610                           postdec2	equ	0xFDD
  6611                           preinc2	equ	0xFDC
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8


Data Sizes:
    Strings     170
    Constant    0
    Data        57
    BSS         550
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     25     131
    BANK1           256    182     182
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[12]), STR_27(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), STR_20(CODE[8]), STR_18(CODE[12]), STR_16(CODE[4]), 
		 -> STR_14(CODE[10]), STR_10(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[12]), STR_27(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), STR_20(CODE[8]), STR_18(CODE[12]), STR_16(CODE[4]), 
		 -> STR_14(CODE[10]), STR_10(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> packetHandler@end(BANK1[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> packetHandler@end(BANK1[2]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[12]), STR_27(CODE[12]), STR_24(CODE[10]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), STR_20(CODE[8]), STR_18(CODE[12]), STR_16(CODE[4]), 
		 -> STR_14(CODE[10]), STR_10(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 500
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), packetHandler@answer_1211(BANK1[50]), 
		 -> name(BANK0[50]), STR_29(CODE[12]), STR_28(CODE[12]), STR_27(CODE[12]), 
		 -> packetHandler@answer_1204(BANK1[50]), STR_25(CODE[10]), STR_24(CODE[10]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), packetHandler@answer_1195(BANK1[20]), STR_20(CODE[8]), STR_19(CODE[16]), 
		 -> STR_18(CODE[12]), packetHandler@answer(BANK1[50]), STR_17(CODE[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[10]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[4]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_9(CODE[2]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_7(CODE[7]), STR_5(CODE[7]), NULL(NULL[0]), 
		 -> STR_3(CODE[4]), STR_4(CODE[4]), STR_2(CODE[4]), STR_1(CODE[7]), 
		 -> RX_buffer(BIGRAM[500]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 500
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), packetHandler@answer_1211(BANK1[50]), 
		 -> name(BANK0[50]), STR_29(CODE[12]), STR_28(CODE[12]), STR_27(CODE[12]), 
		 -> packetHandler@answer_1204(BANK1[50]), STR_25(CODE[10]), STR_24(CODE[10]), STR_23(CODE[10]), 
		 -> STR_22(CODE[8]), packetHandler@answer_1195(BANK1[20]), STR_20(CODE[8]), STR_19(CODE[16]), 
		 -> STR_18(CODE[12]), packetHandler@answer(BANK1[50]), STR_17(CODE[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[10]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[4]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_9(CODE[2]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_7(CODE[7]), STR_5(CODE[7]), NULL(NULL[0]), 
		 -> STR_3(CODE[4]), STR_4(CODE[4]), STR_2(CODE[4]), STR_1(CODE[7]), 
		 -> RX_buffer(BIGRAM[500]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[20]), STR_30(CODE[5]), STR_26(CODE[16]), STR_21(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1211(BANK1[50]), name(BANK0[50]), packetHandler@answer_1204(BANK1[50]), packetHandler@answer_1195(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1211(BANK1[50]), name(BANK0[50]), packetHandler@answer_1204(BANK1[50]), packetHandler@answer_1195(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1780_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1211(BANK1[50]), name(BANK0[50]), packetHandler@answer_1204(BANK1[50]), packetHandler@answer_1195(BANK1[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1211(BANK1[50]), name(BANK0[50]), packetHandler@answer_1204(BANK1[50]), packetHandler@answer_1195(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    memset@s	PTR unsigned char  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[20]), STR_30(CODE[5]), STR_26(CODE[16]), STR_21(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[20]), STR_30(CODE[5]), STR_26(CODE[16]), STR_21(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    packetHandler@txt	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    packetHandler@end	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    packetHandler@pos	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    RN4870_changeName@name	PTR unsigned char  size(2) Largest target is 50
		 -> name(BANK0[50]), 

    sp__memset	PTR void  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    UART_Write_String@buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1211(BANK1[50]), name(BANK0[50]), packetHandler@answer_1204(BANK1[50]), packetHandler@answer_1195(BANK1[20]), 
		 -> STR_19(CODE[16]), packetHandler@answer(BANK1[50]), STR_17(CODE[7]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_12(CODE[2]), STR_11(CODE[4]), STR_9(CODE[2]), 
		 -> STR_8(CODE[4]), STR_7(CODE[7]), STR_5(CODE[7]), STR_4(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _strtol->___strtoxl
    ___strtoxl->_toupper
    _toupper->_islower
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _read_MAX31856_temp->_convertTemp
    _init_MAX31856->_spi_send
    _RN4870_changeName->_strstr
    _strstr->_strncmp
    _memset->_strlen
    _UART_Write_String->_strlen

Critical Paths under _high_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_packetHandler
    _packetHandler->_sprintf
    _sprintf->_vfprintf

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_packetHandler

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   48421
                                             89 COMRAM     1     1      0
                                             24 BANK0      1     1      0
                  _SYSTEM_Initialize
                          _UART_Init
                  _UART_Write_String
                      _packetHandler
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _packetHandler                                      186   184      2   44949
                                             20 BANK0      4     2      2
                                              0 BANK1    182   182      0
                  _RN4870_changeName
                  _UART_Write_String
                      _init_MAX31856
                             _memset
                 _read_MAX31856_temp
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    3156
                                             52 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           36    29      7    2862
                                             16 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              8     6      2     412
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     207
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   15912
                                              2 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   14880
                                             83 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           41    35      6   14398
                                             65 COMRAM    18    12      6
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    3902
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8023
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5757
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1577
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _read_MAX31856_temp                                   6     4      2     328
                                             12 COMRAM     6     4      2
                        _convertTemp
                           _spi_read
                           _spi_send
 ---------------------------------------------------------------------------------
 (3) _spi_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _convertTemp                                         10     8      2     258
                                              2 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (2) _init_MAX31856                                        0     0      0      22
                           _spi_send
 ---------------------------------------------------------------------------------
 (3) _spi_send                                             1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RN4870_changeName                                    6     4      2   12678
                                             19 COMRAM     6     4      2
                  _UART_Write_String
                             _memset
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    4649
                                             13 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6     453
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     240
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2771
                                              6 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    8     6      2    3466
                                              6 COMRAM     8     6      2
                         _UART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1480
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_ISR                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _UART_Init
   _UART_Write_String
     _UART_Write
     _strlen
   _packetHandler
     _RN4870_changeName
       _UART_Write_String
         _UART_Write
         _strlen
       _memset
         _strlen (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
     _UART_Write_String
       _UART_Write
       _strlen
     _init_MAX31856
       _spi_send
     _memset
       _strlen (ARG)
     _read_MAX31856_temp
       _convertTemp
       _spi_read
       _spi_send
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _stoa
             _fputc
               _putch
             _strlen
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
     _strtol
       ___strtoxl
         ___lmul
         _isalpha
         _isdigit
         _isspace
         _toupper
           _islower
   _spi_init

 _high_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     1F4      21       24.4%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     B6      B6       8       71.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195       6        0.0%
DATA                 0      0     389       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 30 16:02:46 2021

                             _ID 00A5          UART_Write_String@buffer 0007  
                             _og 00E2                               _ix 00A3  
     __size_of_UART_Write_String 0068                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_LVP$ON 000000  
                            l318 186A                              l291 11D0  
                            l195 0EAE                              l278 1BC6  
                            l289 11C8                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              _abs 21C2  
                            _pad 1B96                              wreg 000FE8  
                     _TXSTA1bits 000FAC                     __CFG_CPUDIV$ 000002  
                   ?_convertTemp 0003                             l1025 21EA  
                           l1203 1FE2                             ?_abs 0015  
                           l1132 09D6                             l1133 0A04  
                           l1139 0A0C                             l3211 1604  
                           l3213 1618                             l3205 15DE  
                           l2423 22E6                             l3151 2042  
                           l3231 16B0                             l3223 1674  
                           l2601 17B2                             l2513 2140  
                           l3305 12F0                             l3401 14F8  
                           l2603 17E4                             l3227 168A  
                           l3251 199A                             l3243 195C  
                           l3139 1B0E                             l3163 210E  
                           l3411 153E                             l3149 203E  
                           l3501 1012                             l3253 19AE  
                           l3173 1BBE                             l3325 1358  
                           l3341 182E                             l3503 1024  
                           l3263 1A0C                             l3247 1980  
                           l3159 20F8                             l3183 1C16  
                           l3175 1BD0                             l3351 1882  
                           l3407 1534                             l2527 20AC  
                           l3433 1D88                             l2609 17FA  
                           l2633 1DF8                             l3169 1BB0  
                           l3329 1370                             l3417 1556  
                           l2713 09F2                             l2705 09C6  
                           l3267 1A32                             l3259 19F6  
                           l3179 1BE8                             l3291 11EA  
                           l3355 189A                             l2483 1E26  
                           l2731 0AA2                             l2723 0A6A  
                           l3429 1D54                             l2493 1A7E  
                           l3445 1C7C                             l3525 1104  
                           l3517 10C4                             l3509 106A  
                           l2629 1DBA                             l2901 1CFA  
                           l3277 11AA                             l3373 1912  
                           l3365 18DE                             l3461 1E92  
                           l2495 1A8C                             l3439 1C4E  
                           l3447 1CA4                             l3519 10D6  
                           l3199 15B6                             l3295 11F8  
                           l3359 18B8                             l2479 1E12  
                           l2751 0B62                             l2655 08DC  
                           l3607 0D48                             l3481 0F60  
                           l3473 0F06                             l3465 0EC6  
                           l3369 18FA                             l3393 148A  
                           l2665 091E                             l3553 0C1C  
                           l2595 177A                             l3483 0F72  
                           l3467 0ED8                             l2851 1FF2  
                           l3459 1E6C                             l2763 0B94  
                           l2747 0B4C                             l2683 095E  
                           l3627 0DE8                             l2589 1716  
                           l2909 1D10                             l2765 0BA4  
                           l2677 0944                             l2757 0B7E  
                           l3573 0C52                             l3549 0BEA  
                           ?_pad 0013                             l2871 2024  
                           l2679 0956                             l3559 0C28  
                           l3671 1F96                             l3489 0FA0  
                           l2865 2014                             l2857 2002  
                           l2699 09B2                             l3595 0D2A  
                           l3587 0CE6                             l2893 1CE4  
                           l2885 1CCE                             l3589 0CFA  
        read_MAX31856_temp@byte0 0010          read_MAX31856_temp@byte1 0012  
        read_MAX31856_temp@byte2 0011                             STR_1 0871  
                           STR_2 0897                             STR_3 089F  
                           STR_4 0897                             STR_5 0878  
                           STR_6 08A3                             STR_7 0878  
                           STR_8 089B                             STR_9 087D  
                           u2110 1AD2                             u2210 227C  
                           u2220 227E                             _LATA 000F89  
                           u3110 161C                             u2150 20A8  
                           _LATB 000F8A                             _LATC 000F8B  
                           u3200 117C                             u2160 2188  
                           u2400 091A                             u3210 117E  
                           u2170 218A                             u3060 21D0  
                           u3300 132E                             u2180 1FCA  
                           u3310 1334                             u2190 1FCC  
                           u3240 11BE                             u3400 18AE  
                           u3170 19B2                             u3330 1342  
                           u2530 0A4A                             u3091 15E4  
                           u3260 11E4                             u2540 0A4C  
                           u2460 0988                             u3270 12FE  
                           u3430 1926                             u2630 0B2E  
                           u3351 180E                             u3600 1044  
                           u2560 0A90                             u2480 0998  
                           u3290 1320                             u2570 0A92  
                           u3291 131E                             u3540 1CBA  
                           u3620 10F6                             u3460 140C  
                           u3560 0EF8                             u3490 1D80  
                           u1970 224C                             u3580 0F92  
                           u1980 224E                             u3717 1F72  
                           u3670 0D1C                             u3727 0E94  
                           u2960 1B06                             u3497 1D76  
                           u2980 1B4E                             u2990 2062  
                           u2997 2058          read_MAX31856_temp@value 000F  
                           _WPUB 000F85                             abs@a 0015  
                           _dbuf 00A9                             _drdy 005B  
                           _main 1F52                             _dtoa 1154  
                           _name 0067                             _prec 009F  
                           _nout 009B                             pad@i 001A  
                           pad@p 0017                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001C                             fsr2l 000FD9  
                           _stoa 1804                             btemp 005D  
                  __CFG_BORV$190 000000                             start 0048  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
         __size_of_init_MAX31856 0048                     ___param_bank 000000  
         __size_of_packetHandler 0304                     spi_send@data 0003  
                          ??_abs 0017                            ??_pad 0019  
                   _BAUDCON1bits 000FB8   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 22E4                  __end_of___aodiv 16D2  
                          ?_main 0001                            ?_dtoa 001E  
                __end_of___aomod 1A54                            STR_10 08A3  
                          STR_11 089B                            STR_12 087D  
                          STR_20 0869                            STR_13 088D  
                          STR_21 087F                            STR_30 0892  
                          STR_22 0861                            STR_14 0857  
                          STR_15 088D                            STR_23 084D  
                          STR_31 0801                            STR_24 084D  
                          STR_16 08A7                            STR_25 084D  
                          STR_17 0886                            STR_18 0841  
                          STR_26 0825                            STR_27 0835  
                          STR_19 0815                            STR_28 0835  
                          STR_29 0835                            ?_stoa 000C  
                 __CFG_DEBUG$OFF 000000              packetHandler@answer 0100  
                          i2l146 003C                     vfpfcnvrt@fmt 0044  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
            ___lmul@multiplicand 0007                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                      ?_UART_Write 0001  
             __size_of_UART_Init 0024                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            _debug 00A7  
                          _flags 00A1       __end_of_read_MAX31856_temp 1D36  
                          _cycle 005C                            _errno 0099  
                          _fputc 1AF6                  __end_of_isalpha 2190  
                          _fputs 20EE                  __end_of_isdigit 2284  
                          pad@fp 0013                            _width 009D  
                          _putch 2308                            dtoa@d 0020  
                          dtoa@i 0040                            dtoa@n 0038  
                          dtoa@p 0032                            dtoa@s 0036  
                          dtoa@w 0034                  __end_of_islower 2254  
                __end_of_isspace 20B4                            tablat 000FF5  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0018                            stoa@l 0020  
                          stoa@p 001E                            stoa@s 000E  
                          stoa@w 001A                            ttemp5 005E  
                          ttemp6 0061                            ttemp7 0065  
                          status 000FD8                   __CFG_T3CMX$RC0 000000  
                          wtemp8 005E                  __end_of_sprintf 1F52  
                __end_of_strncmp 1AF6                  __end_of_toupper 1FEC  
                 __CFG_ICPRT$OFF 000000                     _toupper$1950 000F  
                __initialization 1EAE                     __end_of_main 1FA2  
                   __end_of_dtoa 139A                     __end_of_stoa 1930  
                 __CFG_PCLKEN$ON 000000                           ??_main 005A  
                         ??_dtoa 0028                           ??_stoa 0010  
                  __activetblptr 000002                   __CFG_SDOMX$RB3 000000  
                  _init_MAX31856 1FEC                  __CFG_CCP2MX$RC1 000000  
                  _packetHandler 0BB6                           ?_fputc 0003  
                         _ACTCON 000FB5                           ?_fputs 000C  
                         _ANSELA 000F5B                           ?_putch 0001  
                         _ANSELB 000F5C                           _ANSELC 000F5D  
                 __CFG_WDTEN$OFF 000000                           i2l3095 001C  
                         _RCREG1 000FAE                           _OSCCON 000FD3  
                         _SPBRG1 000FAF                           _TXREG1 000FAD  
                 __CFG_XINST$OFF 000000                 __end_of_high_ISR 0048  
                   ___strtoxl@cp 0032                     vfprintf@cfmt 00C9  
              __end_of_UART_Init 22D2                           ___lmul 1E02  
            __size_of_UART_Write 000C                        ??___aodiv 0013  
                      ??___aomod 0013                   __CFG_STVREN$ON 000000  
                         _memset 16D2                 ___strtoxl@endptr 0013  
                         clear_0 1ED6                           clear_1 1EE8  
                         pad@buf 0015                           _status 00A8  
                         dtoa@fp 001E                           _strchr 2126  
               ___strtoxl@prev_a 001C                           _strlen 2034  
                         _strtol 2190                           _strstr 1C30  
                         fputc@c 0003                           fputs@c 0010  
                         fputs@i 0011                           fputs@s 000C  
                      ??_isalpha 0005                        ??_isdigit 0005  
                 ?_init_MAX31856 0001                        ??_islower 0005  
                   __mediumconst 0000                        ??_isspace 0005  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 __end_of_spi_init 2224  
               __end_of_spi_read 2308                   ?_packetHandler 00DD  
               __end_of_spi_send 22FA                           stoa@cp 001C  
                         stoa@fp 000C                           putch@c 0001  
               __end_of_vfprintf 1EAE                        ??_sprintf 005A  
                      ??_strncmp 0009                        ??_toupper 000B  
           __size_of_convertTemp 0064             __CFG_LS48MHZ$SYS24X4 000000  
              _SYSTEM_Initialize 22FA                       __accesstop 0060  
        __end_of__initialization 1EF2                  __CFG_PBADEN$OFF 000000  
              _RN4870_changeName 0EBA               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001               ?_RN4870_changeName 0014  
                 __pcstackCOMRAM 0001               __size_of___strtoxl 030A  
               __CFG_nPWRTEN$OFF 000000                     __pidataBANK0 20B4  
            ??_SYSTEM_Initialize 0003                    __end_of_fputc 1B96  
                  __end_of_fputs 2126              ??_RN4870_changeName 0016  
                  __end_of_putch 230A                          ??_fputc 0007  
      __end_of_SYSTEM_Initialize 2304                          ??_fputs 0010  
                        ??_putch 0003            RN4870_changeName@name 0014  
                     __pbssBANK0 0099        __end_of_RN4870_changeName 1154  
              __CFG_PLLSEL$PLL3X 000000                          ?___lmul 0003  
                        ?_memset 0007                   ___lmul@product 000B  
                        ?_strchr 0003                          ?_strlen 0003  
                ??_init_MAX31856 0004                          ?_strtol 0035  
                        ?_strstr 000E                  ??_packetHandler 00DF  
                        _OSCCON2 000FD2                     ??_UART_Write 0003  
             __size_of_vfpfcnvrt 01F0                          _OSCTUNE 000F9B  
                        _SSP1BUF 000FC9                __end_of___strtoxl 0BB6  
                      ?_high_ISR 0001                 __CFG_CFGPLLEN$ON 000000  
               convertTemp@byte1 0003                 convertTemp@byte2 0008  
                        __Hparam 0000                          __Lparam 0000  
             _read_MAX31856_temp 1CC4                          ___aodiv 158A  
                      ?_spi_init 0001                        ?_spi_read 0001  
                        ___aomod 1930                        ?_spi_send 0001  
                __size_of___lmul 0056               __end_of_UART_Write 22F0  
                      ?_vfprintf 0054                     __psmallconst 0800  
            ?_read_MAX31856_temp 000D                          __pcinit 1EAE  
                __size_of_memset 0132                          __ramtop 0800  
                        __ptext0 1F52                          __ptext1 21F4  
                        __ptext2 0BB6                          __ptext3 2190  
                        __ptext4 08AC                          __ptext5 1FA2  
                        __ptext6 2224                          __ptext7 2076  
                        __ptext8 2254                          __ptext9 215C  
                __size_of_strchr 0036                  __size_of_strlen 0042  
                __size_of_strtol 0032                  __size_of_strstr 0094  
          _OSCILLATOR_Initialize 22D2                     __size_of_abs 0032  
                   __size_of_pad 009A                          _isalpha 215C  
                        _isdigit 2254                          _islower 2224  
       ??_PIN_MANAGER_Initialize 0003                          _isspace 2076  
                     ??_high_ISR 0001       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 1F00                          _strncmp 1A54  
                        _toupper 1FA2             end_of_initialization 1EF2  
           ??_read_MAX31856_temp 000F       __size_of_RN4870_changeName 029A  
                        fputc@fp 0005                          memset@c 0009  
                        memset@k 000F                          memset@n 000B  
                        memset@s 0011                    __Lmediumconst 0000  
                        fputs@fp 000E                __end_of_vfpfcnvrt 158A  
                        postdec1 000FE5                          postdec2 000FDD  
                     ??_spi_init 0003                       ??_spi_read 0003  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_spi_send 0003  
                     ??_vfprintf 005A                          strchr@c 0005  
                        strchr@s 0003                          strlen@a 0005  
                        strlen@s 0003                        _UART_Init 22AE  
                        strtol@s 0035                          strstr@h 000E  
                        strstr@n 0010                        _PORTBbits 000F81  
                      _PORTCbits 000F82                   UART_Write@data 0003  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     strtol@endptr 0037  
          UART_Write_String@size 000D                       main@status 00E1  
                 __end_of___lmul 1E58               packetHandler@count 01B0  
                    vfpfcnvrt@ap 0046                      vfpfcnvrt@cp 0052  
                    vfpfcnvrt@fp 0042                      vfpfcnvrt@ll 004A  
                      _RX_buffer 01B6                       ?_UART_Init 0001  
         ?_OSCILLATOR_Initialize 0001                   __end_of_memset 1804  
                 __end_of_strchr 215C                   __end_of_strlen 2076  
                 __end_of_strtol 21C2                   __end_of_strstr 1CC4  
            start_initialization 1EAE                    ??_convertTemp 0005  
__size_of_PIN_MANAGER_Initialize 002A                      __end_of_abs 21F4  
                    __end_of_pad 1C30                  __CFG_nLPBOR$OFF 000000  
                    ___strtoxl@a 002E                      ___strtoxl@c 0034  
                    ___strtoxl@s 0011                      vfprintf@fmt 0056  
                       ??___lmul 000B                  ___strtoxl@limit 0028  
                    __pdataBANK0 0060                         ??_memset 000D  
                     memset@dest 0007                         ??_strchr 0007  
                       ??_strlen 0005           RN4870_changeName@count 0016  
                       ??_strtol 003B                         ??_strstr 0012  
                    __pbssBIGRAM 01B6                      __pbssCOMRAM 005B  
                  __pcstackBANK0 00C9                    __pcstackBANK1 0100  
               ___aodiv@dividend 0003                __size_of_high_ISR 0040  
                      ___strtoxl 08AC              __end_of_convertTemp 1E02  
                      __pnvBANK0 00E2           _PIN_MANAGER_Initialize 2284  
                      _dtoa$1301 0030                        __pintcode 0008  
                       ?___aodiv 0003                         ?___aomod 0003  
               ___aodiv@quotient 0015                      ??_UART_Init 0003  
              __size_of_spi_init 0030                __size_of_spi_read 0004  
              __size_of_spi_send 000A                __size_of_vfprintf 0056  
                    __smallconst 0800                         ?_isalpha 0003  
                       ?_isdigit 0003            __end_of_init_MAX31856 2034  
                convertTemp@sign 000A                  convertTemp@temp 000B  
                       ?_islower 0003                         ?_isspace 0003  
          __end_of_packetHandler 0EBA                         ?_sprintf 00CB  
                 __size_of_fputc 00A0                   __size_of_fputs 0038  
                       ?_strncmp 0003                         ?_toupper 0009  
                 __size_of_putch 0002              ___strtoxl@conv_done 0027  
                     ?___strtoxl 0011                         _LATAbits 000F89  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       _PMD1bits 000F7F                         _PIR1bits 000F9E  
            ___strtoxl@is_signed 0017                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        _vfpfcnvrt 139A  
                   _isspace$1926 0009                      _convertTemp 1D9E  
              packetHandler@temp 01B4                ___lmul@multiplier 0003  
                    _INTCON2bits 000FF1                        copy_data0 1EC2  
    __size_of_read_MAX31856_temp 0072                   ___strtoxl$1900 0024  
                 ___strtoxl$1897 0020                   ___strtoxl$1898 0026  
                 ___strtoxl$1899 0022                convertTemp@result 0009  
                       __Hrparam 0000                       vfprintf@ap 0058  
                       __Lrparam 0000                       vfprintf@fp 0054  
             __CFG_BOREN$SBORDIS 000000                   ___strtoxl@base 0015  
                 ___strtoxl@sign 002C                   ___strtoxl@skip 002D  
        ??_OSCILLATOR_Initialize 0003                 __size_of___aodiv 0148  
               __size_of___aomod 0124                       ?_vfpfcnvrt 0042  
                ___aodiv@divisor 000B                  ___aodiv@counter 0013  
                     _ANSELAbits 000F5B                _UART_Write_String 1D36  
                     sprintf@fmt 00CD                 __size_of_isalpha 0034  
               __size_of_isdigit 0030               ?_UART_Write_String 0007  
               __size_of_islower 0030                 __size_of_isspace 003E  
                       __ptext10 1E02                         __ptext11 1F00  
                       __ptext20 21C2                         __ptext12 1E58  
                       __ptext21 1930                         __ptext13 139A  
                       __ptext30 1A54                         __ptext22 158A  
                       __ptext14 1804                         __ptext31 2126  
                       __ptext23 1CC4                         __ptext15 1154  
                       __ptext32 16D2                         __ptext24 2304  
                       __ptext16 1B96                         __ptext33 1D36  
                       __ptext25 1D9E                         __ptext17 20EE  
                       __ptext34 2034                         __ptext26 1FEC  
                       __ptext18 1AF6                         __ptext35 22E4  
                       __ptext27 22F0                         __ptext19 2308  
                       __ptext36 22AE                         __ptext28 0EBA  
                       __ptext37 22FA                         __ptext29 1C30  
                       __ptext38 2284                         __ptext39 22D2  
                       _high_ISR 0008                     _SSP1CON1bits 000FC6  
               __size_of_sprintf 0052                 __size_of_strncmp 00A2  
               __size_of_toupper 004A              ??_UART_Write_String 0009  
                    ??___strtoxl 0018                    __size_of_main 0050  
                  __size_of_dtoa 0246                    __size_of_stoa 012C  
                      stoa@F1139 0060                         _spi_init 21F4  
                       _spi_read 2304                         _spi_send 22F0  
                       int$flags 005D                       strtol@base 0039  
       packetHandler@answer_1211 0164         packetHandler@answer_1204 0132  
       packetHandler@answer_1195 0196                         _vfprintf 1E58  
      __end_of_UART_Write_String 1D9E                 packetHandler@end 01AE  
               packetHandler@pos 01AA                 ___aomod@dividend 0003  
               packetHandler@txt 01AC                       _INTCONbits 000FF2  
                       isalpha@c 0003                         isdigit@c 0003  
                       intlevel2 0000                        sprintf@ap 00D5  
                       islower@c 0003                         isspace@c 0003  
        ?_PIN_MANAGER_Initialize 0001                       _RCSTA1bits 000FAB  
                      strncmp@_l 0003                        strncmp@_r 0005  
             UART_Write_String@i 000B                  ___aomod@divisor 000B  
                    ??_vfpfcnvrt 0048                         stoa@nuls 0011  
                ___aomod@counter 0013                         sprintf@f 00D7  
                       sprintf@s 00CB                         strncmp@l 000A  
                       strncmp@n 0007                         strncmp@r 000C  
                       toupper@c 0009                       _UART_Write 22E4  
                       strstr@nl 0012               __CFG_FOSC$INTOSCIO 000000  
                   ___aodiv@sign 0014   __end_of_PIN_MANAGER_Initialize 22AE  
                   ___aomod@sign 0014  
