

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 22 17:58:49 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F25K50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  002A52                     __pidataCOMRAM:
    98                           	opt callstack 0
    99                           
   100                           ;initializer for stoa@F1139
   101  002A52  28                 	db	40
   102  002A53  6E                 	db	110
   103  002A54  75                 	db	117
   104  002A55  6C                 	db	108
   105  002A56  6C                 	db	108
   106  002A57  29                 	db	41
   107  002A58  00                 	db	0
   108                           
   109                           ;initializer for _UART_RN4870_mode
   110  002A59  01                 	db	1
   111                           
   112                           	psect	idataBANK0
   113  002914                     __pidataBANK0:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _name
   117  002914  53                 	db	83
   118  002915  45                 	db	69
   119  002916  4E                 	db	78
   120  002917  53                 	db	83
   121  002918  4F                 	db	79
   122  002919  52                 	db	82
   123  00291A  00                 	db	0
   124  00291B  00                 	db	0
   125  00291C  00                 	db	0
   126  00291D  00                 	db	0
   127  00291E  00                 	db	0
   128  00291F  00                 	db	0
   129  002920  00                 	db	0
   130  002921  00                 	db	0
   131  002922  00                 	db	0
   132  002923  00                 	db	0
   133  002924  00                 	db	0
   134  002925  00                 	db	0
   135  002926  00                 	db	0
   136  002927  00                 	db	0
   137  002928  00                 	db	0
   138  002929  00                 	db	0
   139  00292A  00                 	db	0
   140  00292B  00                 	db	0
   141  00292C  00                 	db	0
   142  00292D  00                 	db	0
   143  00292E  00                 	db	0
   144  00292F  00                 	db	0
   145  002930  00                 	db	0
   146  002931  00                 	db	0
   147  002932  00                 	db	0
   148  002933  00                 	db	0
   149  002934  00                 	db	0
   150  002935  00                 	db	0
   151  002936  00                 	db	0
   152  002937  00                 	db	0
   153  002938  00                 	db	0
   154  002939  00                 	db	0
   155  00293A  00                 	db	0
   156  00293B  00                 	db	0
   157  00293C  00                 	db	0
   158  00293D  00                 	db	0
   159  00293E  00                 	db	0
   160  00293F  00                 	db	0
   161  002940  00                 	db	0
   162  002941  00                 	db	0
   163  002942  00                 	db	0
   164  002943  00                 	db	0
   165  002944  00                 	db	0
   166  002945  00                 	db	0
   167                           
   168                           	psect	nvCOMRAM
   169  000045                     __pnvCOMRAM:
   170                           	opt callstack 0
   171  000045                     _og:
   172                           	opt callstack 0
   173  000045                     	ds	1
   174  0000                     _ANSELA	set	3931
   175  0000                     _ANSELB	set	3932
   176  0000                     _ANSELC	set	3933
   177  0000                     _TXREG1	set	4013
   178  0000                     _IPR1bits	set	3999
   179  0000                     _PIE1bits	set	3997
   180  0000                     _RCONbits	set	4048
   181  0000                     _SPBRG1	set	4015
   182  0000                     _BAUDCON1bits	set	4024
   183  0000                     _RCSTA1bits	set	4011
   184  0000                     _TXSTA1bits	set	4012
   185  0000                     _LATBbits	set	3978
   186  0000                     _TRISCbits	set	3988
   187  0000                     _TRISBbits	set	3987
   188  0000                     _TRISAbits	set	3986
   189  0000                     _PORTCbits	set	3970
   190  0000                     _RCREG1	set	4014
   191  0000                     _LATAbits	set	3977
   192  0000                     _PIR1bits	set	3998
   193  0000                     _ACTCON	set	4021
   194  0000                     _OSCTUNE	set	3995
   195  0000                     _OSCCON2	set	4050
   196  0000                     _OSCCON	set	4051
   197  0000                     _INTCONbits	set	4082
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _WPUB	set	3973
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISA	set	3986
   203  0000                     _LATC	set	3979
   204  0000                     _LATB	set	3978
   205  0000                     _LATA	set	3977
   206                           
   207                           	psect	smallconst
   208  001100                     __psmallconst:
   209                           	opt callstack 0
   210  001100  00                 	db	0
   211  001101                     STR_18:
   212  001101  54                 	db	84	;'T'
   213  001102  68                 	db	104	;'h'
   214  001103  65                 	db	101	;'e'
   215  001104  20                 	db	32
   216  001105  74                 	db	116	;'t'
   217  001106  65                 	db	101	;'e'
   218  001107  6D                 	db	109	;'m'
   219  001108  70                 	db	112	;'p'
   220  001109  65                 	db	101	;'e'
   221  00110A  72                 	db	114	;'r'
   222  00110B  61                 	db	97	;'a'
   223  00110C  74                 	db	116	;'t'
   224  00110D  75                 	db	117	;'u'
   225  00110E  72                 	db	114	;'r'
   226  00110F  65                 	db	101	;'e'
   227  001110  20                 	db	32
   228  001111  69                 	db	105	;'i'
   229  001112  73                 	db	115	;'s'
   230  001113  20                 	db	32
   231  001114  25                 	db	37
   232  001115  69                 	db	105	;'i'
   233  001116  0D                 	db	13
   234  001117  00                 	db	0
   235  001118                     STR_27:
   236  001118  63                 	db	99	;'c'
   237  001119  68                 	db	104	;'h'
   238  00111A  61                 	db	97	;'a'
   239  00111B  6E                 	db	110	;'n'
   240  00111C  67                 	db	103	;'g'
   241  00111D  65                 	db	101	;'e'
   242  00111E  4E                 	db	78	;'N'
   243  00111F  61                 	db	97	;'a'
   244  001120  6D                 	db	109	;'m'
   245  001121  65                 	db	101	;'e'
   246  001122  3A                 	db	58	;':'
   247  001123  6E                 	db	110	;'n'
   248  001124  61                 	db	97	;'a'
   249  001125  6D                 	db	109	;'m'
   250  001126  65                 	db	101	;'e'
   251  001127  41                 	db	65	;'A'
   252  001128  43                 	db	67	;'C'
   253  001129  4B                 	db	75	;'K'
   254  00112A  0D                 	db	13
   255  00112B  00                 	db	0
   256  00112C                     STR_16:
   257  00112C  47                 	db	71	;'G'
   258  00112D  65                 	db	101	;'e'
   259  00112E  6E                 	db	110	;'n'
   260  00112F  65                 	db	101	;'e'
   261  001130  72                 	db	114	;'r'
   262  001131  61                 	db	97	;'a'
   263  001132  6C                 	db	108	;'l'
   264  001133  20                 	db	32
   265  001134  4B                 	db	75	;'K'
   266  001135  65                 	db	101	;'e'
   267  001136  6E                 	db	110	;'n'
   268  001137  6F                 	db	111	;'o'
   269  001138  62                 	db	98	;'b'
   270  001139  69                 	db	105	;'i'
   271  00113A  0A                 	db	10
   272  00113B  00                 	db	0
   273  00113C                     STR_22:
   274  00113C  63                 	db	99	;'c'
   275  00113D  68                 	db	104	;'h'
   276  00113E  61                 	db	97	;'a'
   277  00113F  6E                 	db	110	;'n'
   278  001140  67                 	db	103	;'g'
   279  001141  65                 	db	101	;'e'
   280  001142  49                 	db	73	;'I'
   281  001143  44                 	db	68	;'D'
   282  001144  3A                 	db	58	;':'
   283  001145  49                 	db	73	;'I'
   284  001146  44                 	db	68	;'D'
   285  001147  41                 	db	65	;'A'
   286  001148  43                 	db	67	;'C'
   287  001149  4B                 	db	75	;'K'
   288  00114A  0D                 	db	13
   289  00114B  00                 	db	0
   290  00114C                     STR_23:
   291  00114C  63                 	db	99	;'c'
   292  00114D  68                 	db	104	;'h'
   293  00114E  61                 	db	97	;'a'
   294  00114F  6E                 	db	110	;'n'
   295  001150  67                 	db	103	;'g'
   296  001151  65                 	db	101	;'e'
   297  001152  4E                 	db	78	;'N'
   298  001153  61                 	db	97	;'a'
   299  001154  6D                 	db	109	;'m'
   300  001155  65                 	db	101	;'e'
   301  001156  3A                 	db	58	;':'
   302  001157  00                 	db	0
   303  001158                     STR_15:
   304  001158  68                 	db	104	;'h'
   305  001159  65                 	db	101	;'e'
   306  00115A  6C                 	db	108	;'l'
   307  00115B  6C                 	db	108	;'l'
   308  00115C  6F                 	db	111	;'o'
   309  00115D  20                 	db	32
   310  00115E  74                 	db	116	;'t'
   311  00115F  68                 	db	104	;'h'
   312  001160  65                 	db	101	;'e'
   313  001161  72                 	db	114	;'r'
   314  001162  65                 	db	101	;'e'
   315  001163  00                 	db	0
   316  001164                     STR_19:
   317  001164  63                 	db	99	;'c'
   318  001165  68                 	db	104	;'h'
   319  001166  61                 	db	97	;'a'
   320  001167  6E                 	db	110	;'n'
   321  001168  67                 	db	103	;'g'
   322  001169  65                 	db	101	;'e'
   323  00116A  49                 	db	73	;'I'
   324  00116B  44                 	db	68	;'D'
   325  00116C  3A                 	db	58	;':'
   326  00116D  00                 	db	0
   327  00116E                     STR_12:
   328  00116E  52                 	db	82	;'R'
   329  00116F  65                 	db	101	;'e'
   330  001170  62                 	db	98	;'b'
   331  001171  6F                 	db	111	;'o'
   332  001172  6F                 	db	111	;'o'
   333  001173  74                 	db	116	;'t'
   334  001174  69                 	db	105	;'i'
   335  001175  6E                 	db	110	;'n'
   336  001176  67                 	db	103	;'g'
   337  001177  00                 	db	0
   338  001178                     STR_14:
   339  001178  68                 	db	104	;'h'
   340  001179  61                 	db	97	;'a'
   341  00117A  6C                 	db	108	;'l'
   342  00117B  6C                 	db	108	;'l'
   343  00117C  6F                 	db	111	;'o'
   344  00117D  0A                 	db	10
   345  00117E  00                 	db	0
   346  00117F                     STR_1:
   347  00117F  53                 	db	83	;'S'
   348  001180  74                 	db	116	;'t'
   349  001181  61                 	db	97	;'a'
   350  001182  72                 	db	114	;'r'
   351  001183  74                 	db	116	;'t'
   352  001184  0A                 	db	10
   353  001185  00                 	db	0
   354  001186                     STR_6:
   355  001186  53                 	db	83	;'S'
   356  001187  53                 	db	83	;'S'
   357  001188  2C                 	db	44
   358  001189  43                 	db	67	;'C'
   359  00118A  30                 	db	48	;'0'
   360  00118B  0D                 	db	13
   361  00118C  00                 	db	0
   362  00118D                     STR_11:
   363  00118D  52                 	db	82	;'R'
   364  00118E  2C                 	db	44
   365  00118F  31                 	db	49	;'1'
   366  001190  0D                 	db	13
   367  001191  00                 	db	0
   368  001192                     STR_26:
   369  001192  25                 	db	37
   370  001193  73                 	db	115	;'s'
   371  001194  25                 	db	37
   372  001195  64                 	db	100	;'d'
   373  001196  00                 	db	0
   374  001197                     STR_17:
   375  001197  74                 	db	116	;'t'
   376  001198  65                 	db	101	;'e'
   377  001199  6D                 	db	109	;'m'
   378  00119A  70                 	db	112	;'p'
   379  00119B  00                 	db	0
   380  00119C                     STR_2:
   381  00119C  24                 	db	36
   382  00119D  24                 	db	36
   383  00119E  24                 	db	36
   384  00119F  00                 	db	0
   385  0011A0                     STR_8:
   386  0011A0  53                 	db	83	;'S'
   387  0011A1  2D                 	db	45
   388  0011A2  2C                 	db	44
   389  0011A3  00                 	db	0
   390  0011A4                     STR_3:
   391  0011A4  43                 	db	67	;'C'
   392  0011A5  4D                 	db	77	;'M'
   393  0011A6  44                 	db	68	;'D'
   394  0011A7  00                 	db	0
   395  0011A8                     STR_7:
   396  0011A8  41                 	db	65	;'A'
   397  0011A9  4F                 	db	79	;'O'
   398  0011AA  4B                 	db	75	;'K'
   399  0011AB  00                 	db	0
   400  0011AC                     STR_13:
   401  0011AC  68                 	db	104	;'h'
   402  0011AD  65                 	db	101	;'e'
   403  0011AE  79                 	db	121	;'y'
   404  0011AF  00                 	db	0
   405  0011B0                     STR_4:
   406  0011B0  21                 	db	33
   407  0011B1  3D                 	db	61	;'='
   408  0011B2  00                 	db	0
   409  0011B3                     STR_5:
   410  0011B3  7C                 	db	124
   411  0011B4  00                 	db	0
   412  0000                     
   413                           ; #config settings
   414  0011B5  00                 	db	0	; dummy byte at the end
   415  0000                     
   416                           	psect	cinit
   417  00251A                     __pcinit:
   418                           	opt callstack 0
   419  00251A                     start_initialization:
   420                           	opt callstack 0
   421  00251A                     __initialization:
   422                           	opt callstack 0
   423                           
   424                           ; Initialize objects allocated to BANK0 (50 bytes)
   425                           ; load TBLPTR registers with __pidataBANK0
   426  00251A  0E14               	movlw	low __pidataBANK0
   427  00251C  6EF6               	movwf	tblptrl,c
   428  00251E  0E29               	movlw	high __pidataBANK0
   429  002520  6EF7               	movwf	tblptrh,c
   430  002522  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   431  002524  6EF8               	movwf	tblptru,c
   432  002526  EE00  F0AA         	lfsr	0,__pdataBANK0
   433  00252A  EE10 F032          	lfsr	1,50
   434  00252E                     copy_data0:
   435  00252E  0009               	tblrd		*+
   436  002530  CFF5 FFEE          	movff	tablat,postinc0
   437  002534  50E5               	movf	postdec1,w,c
   438  002536  50E1               	movf	fsr1l,w,c
   439  002538  E1FA               	bnz	copy_data0
   440                           
   441                           ; Initialize objects allocated to COMRAM (8 bytes)
   442                           ; load TBLPTR registers with __pidataCOMRAM
   443  00253A  0E52               	movlw	low __pidataCOMRAM
   444  00253C  6EF6               	movwf	tblptrl,c
   445  00253E  0E2A               	movlw	high __pidataCOMRAM
   446  002540  6EF7               	movwf	tblptrh,c
   447  002542  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   448  002544  6EF8               	movwf	tblptru,c
   449  002546  EE00  F03D         	lfsr	0,__pdataCOMRAM
   450  00254A  EE10 F008          	lfsr	1,8
   451  00254E                     copy_data1:
   452  00254E  0009               	tblrd		*+
   453  002550  CFF5 FFEE          	movff	tablat,postinc0
   454  002554  50E5               	movf	postdec1,w,c
   455  002556  50E1               	movf	fsr1l,w,c
   456  002558  E1FA               	bnz	copy_data1
   457                           
   458                           ; Clear objects allocated to BIGRAM (500 bytes)
   459  00255A  EE01  F097         	lfsr	0,__pbssBIGRAM
   460  00255E  EE11 F0F4          	lfsr	1,500
   461  002562                     clear_0:
   462  002562  6AEE               	clrf	postinc0,c
   463  002564  50E5               	movf	postdec1,w,c
   464  002566  50E1               	movf	fsr1l,w,c
   465  002568  E1FC               	bnz	clear_0
   466  00256A  50E2               	movf	fsr1h,w,c
   467  00256C  E1FA               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to BANK0 (36 bytes)
   470  00256E  EE00  F0DC         	lfsr	0,__pbssBANK0
   471  002572  0E24               	movlw	36
   472  002574                     clear_1:
   473  002574  6AEE               	clrf	postinc0,c
   474  002576  06E8               	decf	wreg,f,c
   475  002578  E1FD               	bnz	clear_1
   476                           
   477                           ; Clear objects allocated to COMRAM (14 bytes)
   478  00257A  EE00  F02F         	lfsr	0,__pbssCOMRAM
   479  00257E  0E0E               	movlw	14
   480  002580                     clear_2:
   481  002580  6AEE               	clrf	postinc0,c
   482  002582  06E8               	decf	wreg,f,c
   483  002584  E1FD               	bnz	clear_2
   484  002586                     end_of_initialization:
   485                           	opt callstack 0
   486  002586                     __end_of__initialization:
   487                           	opt callstack 0
   488  002586  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   489  002588  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   490  00258A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   491  00258C  6EF8               	movwf	tblptru,c
   492  00258E  0100               	movlb	0
   493  002590  EF49  F012         	goto	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMRAM
   496  00002F                     __pbssCOMRAM:
   497                           	opt callstack 0
   498  00002F                     _errno:
   499                           	opt callstack 0
   500  00002F                     	ds	2
   501  000031                     _width:
   502                           	opt callstack 0
   503  000031                     	ds	2
   504  000033                     _prec:
   505                           	opt callstack 0
   506  000033                     	ds	2
   507  000035                     _flags:
   508                           	opt callstack 0
   509  000035                     	ds	2
   510  000037                     _ix:
   511                           	opt callstack 0
   512  000037                     	ds	2
   513  000039                     _expected:
   514                           	opt callstack 0
   515  000039                     	ds	2
   516  00003B                     _debug:
   517                           	opt callstack 0
   518  00003B                     	ds	1
   519  00003C                     _UART_RX:
   520                           	opt callstack 0
   521  00003C                     	ds	1
   522                           
   523                           	psect	dataCOMRAM
   524  00003D                     __pdataCOMRAM:
   525                           	opt callstack 0
   526  00003D                     stoa@F1139:
   527                           	opt callstack 0
   528  00003D                     	ds	7
   529  000044                     _UART_RN4870_mode:
   530                           	opt callstack 0
   531  000044                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  0000DC                     __pbssBANK0:
   535                           	opt callstack 0
   536  0000DC                     _nout:
   537                           	opt callstack 0
   538  0000DC                     	ds	2
   539  0000DE                     _ID:
   540                           	opt callstack 0
   541  0000DE                     	ds	2
   542  0000E0                     _dbuf:
   543                           	opt callstack 0
   544  0000E0                     	ds	32
   545                           
   546                           	psect	dataBANK0
   547  0000AA                     __pdataBANK0:
   548                           	opt callstack 0
   549  0000AA                     _name:
   550                           	opt callstack 0
   551  0000AA                     	ds	50
   552                           
   553                           	psect	bssBIGRAM
   554  000197                     __pbssBIGRAM:
   555                           	opt callstack 0
   556  000197                     _RX_buffer:
   557                           	opt callstack 0
   558  000197                     	ds	500
   559                           
   560                           	psect	cstackBANK1
   561  000100                     __pcstackBANK1:
   562                           	opt callstack 0
   563  000100                     ?_sprintf:
   564                           	opt callstack 0
   565  000100                     sprintf@s:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x0
   569  000100                     	ds	2
   570  000102                     sprintf@fmt:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574  000102                     	ds	8
   575  00010A                     sprintf@ap:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xA
   579  00010A                     	ds	2
   580  00010C                     sprintf@f:
   581                           	opt callstack 0
   582                           
   583                           ; 6 bytes @ 0xC
   584  00010C                     	ds	6
   585  000112                     ??_packetHandler:
   586                           
   587                           ; 1 bytes @ 0x12
   588  000112                     	ds	2
   589  000114                     packetHandler@answer_1080:
   590                           	opt callstack 0
   591                           
   592                           ; 50 bytes @ 0x14
   593  000114                     	ds	50
   594  000146                     packetHandler@answer_1087:
   595                           	opt callstack 0
   596                           
   597                           ; 50 bytes @ 0x46
   598  000146                     	ds	50
   599  000178                     packetHandler@answer:
   600                           	opt callstack 0
   601                           
   602                           ; 20 bytes @ 0x78
   603  000178                     	ds	22
   604  00018E                     packetHandler@pos:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x8E
   608  00018E                     	ds	2
   609  000190                     packetHandler@txt:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x90
   613  000190                     	ds	2
   614  000192                     packetHandler@end:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x92
   618  000192                     	ds	2
   619  000194                     ??_main:
   620                           
   621                           ; 1 bytes @ 0x94
   622  000194                     	ds	2
   623  000196                     main@status:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0x96
   627  000196                     	ds	1
   628                           
   629                           	psect	cstackBANK0
   630  000060                     __pcstackBANK0:
   631                           	opt callstack 0
   632  000060                     ??_abs:
   633  000060                     ??___strtoxl:
   634  000060                     ?_pad:
   635                           	opt callstack 0
   636  000060                     ___aodiv@counter:
   637                           	opt callstack 0
   638  000060                     pad@fp:
   639                           	opt callstack 0
   640  000060                     stoa@nuls:
   641                           	opt callstack 0
   642                           
   643                           ; 7 bytes @ 0x0
   644  000060                     	ds	1
   645  000061                     ___aodiv@sign:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x1
   649  000061                     	ds	1
   650  000062                     pad@buf:
   651                           	opt callstack 0
   652  000062                     ___aodiv@quotient:
   653                           	opt callstack 0
   654                           
   655                           ; 8 bytes @ 0x2
   656  000062                     	ds	2
   657  000064                     pad@p:
   658                           	opt callstack 0
   659  000064                     ___strtoxl@prev_a:
   660                           	opt callstack 0
   661                           
   662                           ; 4 bytes @ 0x4
   663  000064                     	ds	3
   664  000067                     stoa@i:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x7
   668  000067                     	ds	1
   669  000068                     ___strtoxl$1729:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x8
   673  000068                     	ds	1
   674  000069                     stoa@w:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x9
   678  000069                     	ds	1
   679  00006A                     ?_dtoa:
   680                           	opt callstack 0
   681  00006A                     dtoa@fp:
   682                           	opt callstack 0
   683  00006A                     ___strtoxl$1731:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xA
   687  00006A                     	ds	1
   688  00006B                     stoa@cp:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0xB
   692  00006B                     	ds	1
   693  00006C                     ___strtoxl$1732:
   694                           	opt callstack 0
   695  00006C                     dtoa@d:
   696                           	opt callstack 0
   697                           
   698                           ; 8 bytes @ 0xC
   699  00006C                     	ds	1
   700  00006D                     stoa@p:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0xD
   704  00006D                     	ds	1
   705  00006E                     ___strtoxl$1730:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0xE
   709  00006E                     	ds	1
   710  00006F                     ___strtoxl@conv_done:
   711                           	opt callstack 0
   712  00006F                     stoa@l:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0xF
   716  00006F                     	ds	1
   717  000070                     ___strtoxl@limit:
   718                           	opt callstack 0
   719                           
   720                           ; 4 bytes @ 0x10
   721  000070                     	ds	4
   722  000074                     ??_dtoa:
   723  000074                     ___strtoxl@sign:
   724                           	opt callstack 0
   725                           
   726                           ; 1 bytes @ 0x14
   727  000074                     	ds	1
   728  000075                     ___strtoxl@skip:
   729                           	opt callstack 0
   730                           
   731                           ; 1 bytes @ 0x15
   732  000075                     	ds	1
   733  000076                     ___strtoxl@a:
   734                           	opt callstack 0
   735                           
   736                           ; 4 bytes @ 0x16
   737  000076                     	ds	4
   738  00007A                     ___strtoxl@cp:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x1A
   742  00007A                     	ds	2
   743  00007C                     ___strtoxl@c:
   744                           	opt callstack 0
   745  00007C                     _dtoa$1133:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x1C
   749  00007C                     	ds	1
   750  00007D                     ?_strtol:
   751                           	opt callstack 0
   752  00007D                     strtol@s:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x1D
   756  00007D                     	ds	1
   757  00007E                     dtoa@p:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x1E
   761  00007E                     	ds	1
   762  00007F                     strtol@endptr:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x1F
   766  00007F                     	ds	1
   767  000080                     dtoa@w:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x20
   771  000080                     	ds	1
   772  000081                     strtol@base:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x21
   776  000081                     	ds	1
   777  000082                     dtoa@s:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x22
   781  000082                     	ds	2
   782  000084                     dtoa@n:
   783                           	opt callstack 0
   784                           
   785                           ; 8 bytes @ 0x24
   786  000084                     	ds	8
   787  00008C                     dtoa@i:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x2C
   791  00008C                     	ds	2
   792  00008E                     ?_vfpfcnvrt:
   793                           	opt callstack 0
   794  00008E                     vfpfcnvrt@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x2E
   798  00008E                     	ds	2
   799  000090                     vfpfcnvrt@fmt:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x30
   803  000090                     	ds	2
   804  000092                     vfpfcnvrt@ap:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x32
   808  000092                     	ds	2
   809  000094                     ??_vfpfcnvrt:
   810                           
   811                           ; 1 bytes @ 0x34
   812  000094                     	ds	2
   813  000096                     vfpfcnvrt@ll:
   814                           	opt callstack 0
   815                           
   816                           ; 8 bytes @ 0x36
   817  000096                     	ds	8
   818  00009E                     vfpfcnvrt@cp:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x3E
   822  00009E                     	ds	2
   823  0000A0                     ?_vfprintf:
   824                           	opt callstack 0
   825  0000A0                     vfprintf@fp:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x40
   829  0000A0                     	ds	2
   830  0000A2                     vfprintf@fmt:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x42
   834  0000A2                     	ds	2
   835  0000A4                     vfprintf@ap:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x44
   839  0000A4                     	ds	2
   840  0000A6                     vfprintf@cfmt:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x46
   844  0000A6                     	ds	2
   845  0000A8                     ?_packetHandler:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x48
   849  0000A8                     	ds	2
   850                           
   851                           	psect	cstackCOMRAM
   852  000001                     __pcstackCOMRAM:
   853                           	opt callstack 0
   854  000001                     ?i2_strlen:
   855                           	opt callstack 0
   856  000001                     ?i2_strchr:
   857                           	opt callstack 0
   858  000001                     ?i2_strncmp:
   859                           	opt callstack 0
   860  000001                     i2strlen@s:
   861                           	opt callstack 0
   862  000001                     i2strchr@s:
   863                           	opt callstack 0
   864  000001                     i2strncmp@_l:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x0
   868  000001                     	ds	2
   869  000003                     i2strlen@a:
   870                           	opt callstack 0
   871  000003                     i2strchr@c:
   872                           	opt callstack 0
   873  000003                     i2strncmp@_r:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x2
   877  000003                     	ds	2
   878  000005                     i2strncmp@n:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x4
   882  000005                     	ds	2
   883  000007                     ??i2_strncmp:
   884                           
   885                           ; 1 bytes @ 0x6
   886  000007                     	ds	1
   887  000008                     i2strncmp@l:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x7
   891  000008                     	ds	2
   892  00000A                     i2strncmp@r:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x9
   896  00000A                     	ds	2
   897  00000C                     ?i2_strstr:
   898                           	opt callstack 0
   899  00000C                     i2strstr@h:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0xB
   903  00000C                     	ds	2
   904  00000E                     i2strstr@n:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0xD
   908  00000E                     	ds	2
   909  000010                     i2strstr@nl:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0xF
   913  000010                     	ds	2
   914  000012                     ??_high_ISR:
   915                           
   916                           ; 1 bytes @ 0x11
   917  000012                     	ds	8
   918  00001A                     ?_strlen:
   919                           	opt callstack 0
   920  00001A                     ?_strncmp:
   921                           	opt callstack 0
   922  00001A                     ?_strchr:
   923                           	opt callstack 0
   924  00001A                     ?_isspace:
   925                           	opt callstack 0
   926  00001A                     ?_isalpha:
   927                           	opt callstack 0
   928  00001A                     ?_isdigit:
   929                           	opt callstack 0
   930  00001A                     ?_islower:
   931                           	opt callstack 0
   932  00001A                     ?___lmul:
   933                           	opt callstack 0
   934  00001A                     ?___aodiv:
   935                           	opt callstack 0
   936  00001A                     ?___aomod:
   937                           	opt callstack 0
   938  00001A                     UART_Write@data:
   939                           	opt callstack 0
   940  00001A                     fputc@c:
   941                           	opt callstack 0
   942  00001A                     strlen@s:
   943                           	opt callstack 0
   944  00001A                     isalpha@c:
   945                           	opt callstack 0
   946  00001A                     isdigit@c:
   947                           	opt callstack 0
   948  00001A                     isspace@c:
   949                           	opt callstack 0
   950  00001A                     strchr@s:
   951                           	opt callstack 0
   952  00001A                     strncmp@_l:
   953                           	opt callstack 0
   954  00001A                     islower@c:
   955                           	opt callstack 0
   956  00001A                     ___lmul@multiplier:
   957                           	opt callstack 0
   958  00001A                     ___aodiv@dividend:
   959                           	opt callstack 0
   960  00001A                     ___aomod@dividend:
   961                           	opt callstack 0
   962                           
   963                           ; 8 bytes @ 0x19
   964  00001A                     	ds	2
   965  00001C                     ??_isspace:
   966  00001C                     ??_isalpha:
   967  00001C                     ??_isdigit:
   968  00001C                     ??_islower:
   969  00001C                     fputc@fp:
   970                           	opt callstack 0
   971  00001C                     strlen@a:
   972                           	opt callstack 0
   973  00001C                     strchr@c:
   974                           	opt callstack 0
   975  00001C                     strncmp@_r:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x1B
   979  00001C                     	ds	2
   980  00001E                     ??_fputc:
   981  00001E                     UART_Write_String@buffer:
   982                           	opt callstack 0
   983  00001E                     memset@dest:
   984                           	opt callstack 0
   985  00001E                     strncmp@n:
   986                           	opt callstack 0
   987  00001E                     ___lmul@multiplicand:
   988                           	opt callstack 0
   989                           
   990                           ; 4 bytes @ 0x1D
   991  00001E                     	ds	2
   992  000020                     ??_UART_Write_String:
   993  000020                     ??_strncmp:
   994  000020                     ?_toupper:
   995                           	opt callstack 0
   996  000020                     _isspace$1758:
   997                           	opt callstack 0
   998  000020                     memset@c:
   999                           	opt callstack 0
  1000  000020                     toupper@c:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x1F
  1004  000020                     	ds	1
  1005  000021                     strncmp@l:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x20
  1009  000021                     	ds	1
  1010  000022                     ??_toupper:
  1011  000022                     UART_Write_String@i:
  1012                           	opt callstack 0
  1013  000022                     memset@n:
  1014                           	opt callstack 0
  1015  000022                     ___lmul@product:
  1016                           	opt callstack 0
  1017  000022                     ___aodiv@divisor:
  1018                           	opt callstack 0
  1019  000022                     ___aomod@divisor:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 8 bytes @ 0x21
  1023  000022                     	ds	1
  1024  000023                     ?_stoa:
  1025                           	opt callstack 0
  1026  000023                     stoa@fp:
  1027                           	opt callstack 0
  1028  000023                     fputs@s:
  1029                           	opt callstack 0
  1030  000023                     strncmp@r:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x22
  1034  000023                     	ds	1
  1035  000024                     ??_memset:
  1036  000024                     UART_Write_String@size:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x23
  1040  000024                     	ds	1
  1041  000025                     ?_strstr:
  1042                           	opt callstack 0
  1043  000025                     stoa@s:
  1044                           	opt callstack 0
  1045  000025                     fputs@fp:
  1046                           	opt callstack 0
  1047  000025                     strstr@h:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x24
  1051  000025                     	ds	1
  1052  000026                     RN4870_changeName@name:
  1053                           	opt callstack 0
  1054  000026                     memset@k:
  1055                           	opt callstack 0
  1056  000026                     _toupper$1782:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x25
  1060  000026                     	ds	1
  1061  000027                     ??_stoa:
  1062  000027                     fputs@c:
  1063                           	opt callstack 0
  1064  000027                     strstr@n:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x26
  1068  000027                     	ds	1
  1069  000028                     ??_RN4870_changeName:
  1070  000028                     ?___strtoxl:
  1071                           	opt callstack 0
  1072  000028                     memset@s:
  1073                           	opt callstack 0
  1074  000028                     fputs@i:
  1075                           	opt callstack 0
  1076  000028                     ___strtoxl@s:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x27
  1080  000028                     	ds	1
  1081  000029                     strstr@nl:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x28
  1085  000029                     	ds	1
  1086  00002A                     ??_pad:
  1087  00002A                     ___aomod@counter:
  1088                           	opt callstack 0
  1089  00002A                     ___strtoxl@endptr:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x29
  1093  00002A                     	ds	1
  1094  00002B                     ___aomod@sign:
  1095                           	opt callstack 0
  1096  00002B                     pad@i:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x2A
  1100  00002B                     	ds	1
  1101  00002C                     ?_abs:
  1102                           	opt callstack 0
  1103  00002C                     abs@a:
  1104                           	opt callstack 0
  1105  00002C                     ___strtoxl@base:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x2B
  1109  00002C                     	ds	1
  1110  00002D                     pad@w:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x2C
  1114  00002D                     	ds	1
  1115  00002E                     ___strtoxl@is_signed:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x2D
  1119  00002E                     	ds	1
  1120  00002F                     
  1121                           ; 1 bytes @ 0x2E
  1122 ;;
  1123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1124 ;;
  1125 ;; *************** function _main *****************
  1126 ;; Defined at:
  1127 ;;		line 77 in file "main_ble.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  status          1  150[BANK1 ] volatile unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1141 ;;      Params:         0       0       0       0       0       0       0       0       0
  1142 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1144 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1145 ;;Total ram usage:        3 bytes
  1146 ;; Hardware stack levels required when called:   12
  1147 ;; This function calls:
  1148 ;;		_SYSTEM_Initialize
  1149 ;;		_UART_Init
  1150 ;;		_UART_Write_String
  1151 ;;		_packetHandler
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text0
  1158  002492                     __ptext0:
  1159                           	opt callstack 0
  1160  002492                     _main:
  1161                           	opt callstack 19
  1162                           
  1163                           ;main_ble.c: 79:     volatile char status = 0;
  1164                           
  1165                           ;incstack = 0
  1166  002492  0E00               	movlw	0
  1167  002494  0101               	movlb	1	; () banked
  1168  002496  6F96               	movwf	main@status& (0+255),b	;volatile
  1169                           
  1170                           ; BSR set to: 1
  1171                           ;main_ble.c: 80:     og = PORTCbits.RC0;
  1172  002498  0E00               	movlw	0
  1173  00249A  B082               	btfsc	3970,0,c	;volatile
  1174  00249C  0E01               	movlw	1
  1175  00249E  6E45               	movwf	_og,c
  1176                           
  1177                           ; BSR set to: 1
  1178                           ;main_ble.c: 83:     SYSTEM_Initialize();
  1179  0024A0  EC24  F015         	call	_SYSTEM_Initialize	;wreg free
  1180                           
  1181                           ;main_ble.c: 84:     UART_Init();
  1182  0024A4  EC01  F015         	call	_UART_Init	;wreg free
  1183                           
  1184                           ;main_ble.c: 86:     _delay(100000);
  1185  0024A8  0E82               	movlw	130
  1186  0024AA  0101               	movlb	1	; () banked
  1187  0024AC  6F94               	movwf	??_main& (0+255),b
  1188  0024AE  0EDD               	movlw	221
  1189  0024B0                     u4357:
  1190  0024B0  2EE8               	decfsz	wreg,f,c
  1191  0024B2  D7FE               	bra	u4357
  1192  0024B4  2F94               	decfsz	??_main& (0+255),f,b
  1193  0024B6  D7FC               	bra	u4357
  1194  0024B8  D000               	nop2	
  1195                           
  1196                           ;main_ble.c: 89:     debug = 1;
  1197  0024BA  0E01               	movlw	1
  1198  0024BC  6E3B               	movwf	_debug,c
  1199                           
  1200                           ;main_ble.c: 90:     TRISAbits.RA1 = 0;
  1201  0024BE  9292               	bcf	3986,1,c	;volatile
  1202                           
  1203                           ;main_ble.c: 91:     TRISBbits.RB3 = 0;
  1204  0024C0  9693               	bcf	3987,3,c	;volatile
  1205                           
  1206                           ;main_ble.c: 92:     TRISBbits.RB4 = 0;
  1207  0024C2  9893               	bcf	3987,4,c	;volatile
  1208                           
  1209                           ;main_ble.c: 93:     TRISBbits.RB5 = 0;
  1210  0024C4  9A93               	bcf	3987,5,c	;volatile
  1211                           
  1212                           ;main_ble.c: 94:     TRISCbits.RC0 = 1;
  1213  0024C6  8094               	bsf	3988,0,c	;volatile
  1214                           
  1215                           ;main_ble.c: 97:     UART_Write_String("Start\n");
  1216  0024C8  0E7F               	movlw	low STR_1
  1217  0024CA  6E1E               	movwf	UART_Write_String@buffer,c
  1218  0024CC  0E11               	movlw	high STR_1
  1219  0024CE  6E1F               	movwf	UART_Write_String@buffer+1,c
  1220  0024D0  ECCA  F012         	call	_UART_Write_String	;wreg free
  1221  0024D4                     l3632:
  1222                           
  1223                           ;main_ble.c: 100:     {;main_ble.c: 102:         status = packetHandler();
  1224  0024D4  EC85  F00B         	call	_packetHandler	;wreg free
  1225  0024D8  0100               	movlb	0	; () banked
  1226  0024DA  51A8               	movf	?_packetHandler& (0+255),w,b
  1227  0024DC  0101               	movlb	1	; () banked
  1228  0024DE  6F96               	movwf	main@status& (0+255),b	;volatile
  1229                           
  1230                           ; BSR set to: 1
  1231                           ;main_ble.c: 105:         LATBbits.LB5 = 1;
  1232  0024E0  8A8A               	bsf	3978,5,c	;volatile
  1233                           
  1234                           ; BSR set to: 1
  1235                           ;main_ble.c: 106:         _delay(1000000);
  1236  0024E2  0E06               	movlw	6
  1237  0024E4  0101               	movlb	1	; () banked
  1238  0024E6  6F95               	movwf	(??_main+1)& (0+255),b
  1239  0024E8  0E13               	movlw	19
  1240  0024EA  6F94               	movwf	??_main& (0+255),b
  1241  0024EC  0EAD               	movlw	173
  1242  0024EE                     u4367:
  1243  0024EE  2EE8               	decfsz	wreg,f,c
  1244  0024F0  D7FE               	bra	u4367
  1245  0024F2  2F94               	decfsz	??_main& (0+255),f,b
  1246  0024F4  D7FC               	bra	u4367
  1247  0024F6  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1248  0024F8  D7FA               	bra	u4367
  1249  0024FA  D000               	nop2	
  1250                           
  1251                           ;main_ble.c: 107:         LATBbits.LB5 = 0;
  1252  0024FC  9A8A               	bcf	3978,5,c	;volatile
  1253                           
  1254                           ;main_ble.c: 108:         _delay(1000000);
  1255  0024FE  0E06               	movlw	6
  1256  002500  0101               	movlb	1	; () banked
  1257  002502  6F95               	movwf	(??_main+1)& (0+255),b
  1258  002504  0E13               	movlw	19
  1259  002506  6F94               	movwf	??_main& (0+255),b
  1260  002508  0EAD               	movlw	173
  1261  00250A                     u4377:
  1262  00250A  2EE8               	decfsz	wreg,f,c
  1263  00250C  D7FE               	bra	u4377
  1264  00250E  2F94               	decfsz	??_main& (0+255),f,b
  1265  002510  D7FC               	bra	u4377
  1266  002512  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1267  002514  D7FA               	bra	u4377
  1268  002516  D000               	nop2	
  1269  002518  D7DD               	goto	l3632
  1270  00251A                     __end_of_main:
  1271                           	opt callstack 0
  1272                           
  1273 ;; *************** function _packetHandler *****************
  1274 ;; Defined at:
  1275 ;;		line 197 in file "main_ble.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  answer         50   70[BANK1 ] unsigned char [50]
  1280 ;;  txt             2  144[BANK1 ] PTR unsigned char 
  1281 ;;		 -> NULL(0), RX_buffer(500), 
  1282 ;;  answer         50   20[BANK1 ] unsigned char [50]
  1283 ;;  end             2  146[BANK1 ] PTR unsigned char 
  1284 ;;		 -> NULL(0), RX_buffer(500), 
  1285 ;;  pos             2  142[BANK1 ] PTR unsigned char 
  1286 ;;		 -> NULL(0), RX_buffer(500), 
  1287 ;;  answer         20  120[BANK1 ] unsigned char [20]
  1288 ;;  temp            2    0        short 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2   72[BANK0 ] int 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         0       2       0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0     128       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1301 ;;      Totals:         0       2     130       0       0       0       0       0       0
  1302 ;;Total ram usage:      132 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:   11
  1305 ;; This function calls:
  1306 ;;		_RN4870_changeName
  1307 ;;		_UART_Write_String
  1308 ;;		_memset
  1309 ;;		_sprintf
  1310 ;;		_strlen
  1311 ;;		_strstr
  1312 ;;		_strtol
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text1
  1319  00170A                     __ptext1:
  1320                           	opt callstack 0
  1321  00170A                     _packetHandler:
  1322                           	opt callstack 19
  1323                           
  1324                           ;main_ble.c: 198:     if(strstr(RX_buffer,"hey")!=((void*)0)){
  1325                           
  1326                           ;incstack = 0
  1327  00170A  0E97               	movlw	low _RX_buffer
  1328  00170C  6E25               	movwf	strstr@h,c
  1329  00170E  0E01               	movlw	high _RX_buffer
  1330  001710  6E26               	movwf	strstr@h+1,c
  1331  001712  0EAC               	movlw	low STR_13
  1332  001714  6E27               	movwf	strstr@n,c
  1333  001716  0E11               	movlw	high STR_13
  1334  001718  6E28               	movwf	strstr@n+1,c
  1335  00171A  ECB5  F011         	call	_strstr	;wreg free
  1336  00171E  5025               	movf	?_strstr,w,c
  1337  001720  1026               	iorwf	?_strstr+1,w,c
  1338  001722  B4D8               	btfsc	status,2,c
  1339  001724  D024               	goto	l3504
  1340                           
  1341                           ;main_ble.c: 199:         UART_Write_String("hallo\n");
  1342  001726  0E78               	movlw	low STR_14
  1343  001728  6E1E               	movwf	UART_Write_String@buffer,c
  1344  00172A  0E11               	movlw	high STR_14
  1345  00172C  6E1F               	movwf	UART_Write_String@buffer+1,c
  1346  00172E  ECCA  F012         	call	_UART_Write_String	;wreg free
  1347  001732                     l3494:
  1348                           
  1349                           ;main_ble.c: 202:         memset(RX_buffer,0,strlen(RX_buffer));
  1350  001732  0E97               	movlw	low _RX_buffer
  1351  001734  6E1E               	movwf	memset@dest,c
  1352  001736  0E01               	movlw	high _RX_buffer
  1353  001738  6E1F               	movwf	memset@dest+1,c
  1354  00173A  0E00               	movlw	0
  1355  00173C  6E21               	movwf	memset@c+1,c
  1356  00173E  0E00               	movlw	0
  1357  001740  6E20               	movwf	memset@c,c
  1358  001742  0E97               	movlw	low _RX_buffer
  1359  001744  6E1A               	movwf	strlen@s,c
  1360  001746  0E01               	movlw	high _RX_buffer
  1361  001748  6E1B               	movwf	strlen@s+1,c
  1362  00174A  ECA3  F013         	call	_strlen	;wreg free
  1363  00174E  C01A  F022         	movff	?_strlen,memset@n
  1364  001752  C01B  F023         	movff	?_strlen+1,memset@n+1
  1365  001756  ECDB  F00E         	call	_memset	;wreg free
  1366                           
  1367                           ;main_ble.c: 203:         ix = 0;
  1368  00175A  0E00               	movlw	0
  1369  00175C  6E38               	movwf	_ix+1,c
  1370  00175E  0E00               	movlw	0
  1371  001760  6E37               	movwf	_ix,c
  1372  001762                     l3498:
  1373                           
  1374                           ;main_ble.c: 204:         return 1;
  1375  001762  0E00               	movlw	0
  1376  001764  0100               	movlb	0	; () banked
  1377  001766  6FA9               	movwf	(?_packetHandler+1)& (0+255),b
  1378  001768  0E01               	movlw	1
  1379  00176A  6FA8               	movwf	?_packetHandler& (0+255),b
  1380  00176C  0012               	return	
  1381  00176E                     l3504:
  1382  00176E  0E97               	movlw	low _RX_buffer
  1383  001770  6E25               	movwf	strstr@h,c
  1384  001772  0E01               	movlw	high _RX_buffer
  1385  001774  6E26               	movwf	strstr@h+1,c
  1386  001776  0E58               	movlw	low STR_15
  1387  001778  6E27               	movwf	strstr@n,c
  1388  00177A  0E11               	movlw	high STR_15
  1389  00177C  6E28               	movwf	strstr@n+1,c
  1390  00177E  ECB5  F011         	call	_strstr	;wreg free
  1391  001782  5025               	movf	?_strstr,w,c
  1392  001784  1026               	iorwf	?_strstr+1,w,c
  1393  001786  B4D8               	btfsc	status,2,c
  1394  001788  D007               	goto	l3518
  1395                           
  1396                           ;main_ble.c: 207:         UART_Write_String("General Kenobi\n");
  1397  00178A  0E2C               	movlw	low STR_16
  1398  00178C  6E1E               	movwf	UART_Write_String@buffer,c
  1399  00178E  0E11               	movlw	high STR_16
  1400  001790  6E1F               	movwf	UART_Write_String@buffer+1,c
  1401  001792  ECCA  F012         	call	_UART_Write_String	;wreg free
  1402  001796  D7CD               	goto	l3494
  1403  001798                     l3518:
  1404  001798  0E97               	movlw	low _RX_buffer
  1405  00179A  6E25               	movwf	strstr@h,c
  1406  00179C  0E01               	movlw	high _RX_buffer
  1407  00179E  6E26               	movwf	strstr@h+1,c
  1408  0017A0  0E97               	movlw	low STR_17
  1409  0017A2  6E27               	movwf	strstr@n,c
  1410  0017A4  0E11               	movlw	high STR_17
  1411  0017A6  6E28               	movwf	strstr@n+1,c
  1412  0017A8  ECB5  F011         	call	_strstr	;wreg free
  1413  0017AC  5025               	movf	?_strstr,w,c
  1414  0017AE  1026               	iorwf	?_strstr+1,w,c
  1415  0017B0  B4D8               	btfsc	status,2,c
  1416  0017B2  D016               	goto	l3536
  1417                           
  1418                           ;main_ble.c: 216:         char answer[20];;main_ble.c: 217:         sprintf(answer,"The 
      +                          temperature is %i\r",temp);
  1419  0017B4  0E78               	movlw	low packetHandler@answer
  1420  0017B6  0101               	movlb	1	; () banked
  1421  0017B8  6F00               	movwf	sprintf@s& (0+255),b
  1422  0017BA  0E01               	movlw	high packetHandler@answer
  1423  0017BC  6F01               	movwf	(sprintf@s+1)& (0+255),b
  1424  0017BE  0E01               	movlw	low STR_18
  1425  0017C0  6F02               	movwf	sprintf@fmt& (0+255),b
  1426  0017C2  0E11               	movlw	high STR_18
  1427  0017C4  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  1428  0017C6  0E00               	movlw	0
  1429  0017C8  6F05               	movwf	(?_sprintf+5)& (0+255),b
  1430  0017CA  0E19               	movlw	25
  1431  0017CC  6F04               	movwf	(?_sprintf+4)& (0+255),b
  1432  0017CE  EC54  F013         	call	_sprintf	;wreg free
  1433                           
  1434                           ;main_ble.c: 218:         UART_Write_String(answer);
  1435  0017D2  0E78               	movlw	low packetHandler@answer
  1436  0017D4  6E1E               	movwf	UART_Write_String@buffer,c
  1437  0017D6  0E01               	movlw	high packetHandler@answer
  1438  0017D8  6E1F               	movwf	UART_Write_String@buffer+1,c
  1439  0017DA  ECCA  F012         	call	_UART_Write_String	;wreg free
  1440  0017DE  D7A9               	goto	l3494
  1441  0017E0                     l3536:
  1442  0017E0  0E97               	movlw	low _RX_buffer
  1443  0017E2  6E25               	movwf	strstr@h,c
  1444  0017E4  0E01               	movlw	high _RX_buffer
  1445  0017E6  6E26               	movwf	strstr@h+1,c
  1446  0017E8  0E64               	movlw	low STR_19
  1447  0017EA  6E27               	movwf	strstr@n,c
  1448  0017EC  0E11               	movlw	high STR_19
  1449  0017EE  6E28               	movwf	strstr@n+1,c
  1450  0017F0  ECB5  F011         	call	_strstr	;wreg free
  1451  0017F4  5025               	movf	?_strstr,w,c
  1452  0017F6  1026               	iorwf	?_strstr+1,w,c
  1453  0017F8  B4D8               	btfsc	status,2,c
  1454  0017FA  D040               	goto	l3556
  1455                           
  1456                           ;main_ble.c: 226:         char *pos = strstr(RX_buffer,"changeID:") + strlen("changeID:"
      +                          );
  1457  0017FC  0E97               	movlw	low _RX_buffer
  1458  0017FE  6E25               	movwf	strstr@h,c
  1459  001800  0E01               	movlw	high _RX_buffer
  1460  001802  6E26               	movwf	strstr@h+1,c
  1461  001804  0E64               	movlw	low STR_19
  1462  001806  6E27               	movwf	strstr@n,c
  1463  001808  0E11               	movlw	high STR_19
  1464  00180A  6E28               	movwf	strstr@n+1,c
  1465  00180C  ECB5  F011         	call	_strstr	;wreg free
  1466  001810  C025  F112         	movff	?_strstr,??_packetHandler
  1467  001814  C026  F113         	movff	?_strstr+1,??_packetHandler+1
  1468  001818  0E64               	movlw	low STR_19
  1469  00181A  6E1A               	movwf	strlen@s,c
  1470  00181C  0E11               	movlw	high STR_19
  1471  00181E  6E1B               	movwf	strlen@s+1,c
  1472  001820  ECA3  F013         	call	_strlen	;wreg free
  1473  001824  501A               	movf	?_strlen,w,c
  1474  001826  0101               	movlb	1	; () banked
  1475  001828  2512               	addwf	??_packetHandler& (0+255),w,b
  1476  00182A  6F8E               	movwf	packetHandler@pos& (0+255),b
  1477  00182C  501B               	movf	?_strlen+1,w,c
  1478  00182E  2113               	addwfc	(??_packetHandler+1)& (0+255),w,b
  1479  001830  6F8F               	movwf	(packetHandler@pos+1)& (0+255),b
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;main_ble.c: 227:         char *end;;main_ble.c: 228:         ID = strtol(pos,&end,10);
  1483  001832  C18E  F07D         	movff	packetHandler@pos,strtol@s
  1484  001836  C18F  F07E         	movff	packetHandler@pos+1,strtol@s+1
  1485  00183A  0E92               	movlw	low packetHandler@end
  1486  00183C  0100               	movlb	0	; () banked
  1487  00183E  6F7F               	movwf	strtol@endptr& (0+255),b
  1488  001840  0E01               	movlw	high packetHandler@end
  1489  001842  6F80               	movwf	(strtol@endptr+1)& (0+255),b
  1490  001844  0E00               	movlw	0
  1491  001846  6F82               	movwf	(strtol@base+1)& (0+255),b
  1492  001848  0E0A               	movlw	10
  1493  00184A  6F81               	movwf	strtol@base& (0+255),b
  1494  00184C  ECA3  F014         	call	_strtol	;wreg free
  1495  001850  C07D  F0DE         	movff	?_strtol,_ID
  1496  001854  C07E  F0DF         	movff	?_strtol+1,_ID+1
  1497                           
  1498                           ;main_ble.c: 230:         char answer[50];;main_ble.c: 232:         sprintf(answer,"chan
      +                          geID:IDACK\r");
  1499  001858  0E14               	movlw	low packetHandler@answer_1080
  1500  00185A  0101               	movlb	1	; () banked
  1501  00185C  6F00               	movwf	sprintf@s& (0+255),b
  1502  00185E  0E01               	movlw	high packetHandler@answer_1080
  1503  001860  6F01               	movwf	(sprintf@s+1)& (0+255),b
  1504  001862  0E3C               	movlw	low STR_22
  1505  001864  6F02               	movwf	sprintf@fmt& (0+255),b
  1506  001866  0E11               	movlw	high STR_22
  1507  001868  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  1508  00186A  EC54  F013         	call	_sprintf	;wreg free
  1509                           
  1510                           ;main_ble.c: 233:         UART_Write_String(answer);
  1511  00186E  0E14               	movlw	low packetHandler@answer_1080
  1512  001870  6E1E               	movwf	UART_Write_String@buffer,c
  1513  001872  0E01               	movlw	high packetHandler@answer_1080
  1514  001874  6E1F               	movwf	UART_Write_String@buffer+1,c
  1515  001876  ECCA  F012         	call	_UART_Write_String	;wreg free
  1516  00187A  D75B               	goto	l3494
  1517  00187C                     l3556:
  1518  00187C  0E97               	movlw	low _RX_buffer
  1519  00187E  6E25               	movwf	strstr@h,c
  1520  001880  0E01               	movlw	high _RX_buffer
  1521  001882  6E26               	movwf	strstr@h+1,c
  1522  001884  0E4C               	movlw	low STR_23
  1523  001886  6E27               	movwf	strstr@n,c
  1524  001888  0E11               	movlw	high STR_23
  1525  00188A  6E28               	movwf	strstr@n+1,c
  1526  00188C  ECB5  F011         	call	_strstr	;wreg free
  1527  001890  5025               	movf	?_strstr,w,c
  1528  001892  1026               	iorwf	?_strstr+1,w,c
  1529  001894  B4D8               	btfsc	status,2,c
  1530  001896  D051               	goto	l175
  1531                           
  1532                           ;main_ble.c: 241:         char *txt = strstr(RX_buffer,"changeName:") + strlen("changeNa
      +                          me:");
  1533  001898  0E97               	movlw	low _RX_buffer
  1534  00189A  6E25               	movwf	strstr@h,c
  1535  00189C  0E01               	movlw	high _RX_buffer
  1536  00189E  6E26               	movwf	strstr@h+1,c
  1537  0018A0  0E4C               	movlw	low STR_23
  1538  0018A2  6E27               	movwf	strstr@n,c
  1539  0018A4  0E11               	movlw	high STR_23
  1540  0018A6  6E28               	movwf	strstr@n+1,c
  1541  0018A8  ECB5  F011         	call	_strstr	;wreg free
  1542  0018AC  C025  F112         	movff	?_strstr,??_packetHandler
  1543  0018B0  C026  F113         	movff	?_strstr+1,??_packetHandler+1
  1544  0018B4  0E4C               	movlw	low STR_23
  1545  0018B6  6E1A               	movwf	strlen@s,c
  1546  0018B8  0E11               	movlw	high STR_23
  1547  0018BA  6E1B               	movwf	strlen@s+1,c
  1548  0018BC  ECA3  F013         	call	_strlen	;wreg free
  1549  0018C0  501A               	movf	?_strlen,w,c
  1550  0018C2  0101               	movlb	1	; () banked
  1551  0018C4  2512               	addwf	??_packetHandler& (0+255),w,b
  1552  0018C6  6F90               	movwf	packetHandler@txt& (0+255),b
  1553  0018C8  501B               	movf	?_strlen+1,w,c
  1554  0018CA  2113               	addwfc	(??_packetHandler+1)& (0+255),w,b
  1555  0018CC  6F91               	movwf	(packetHandler@txt+1)& (0+255),b
  1556                           
  1557                           ;main_ble.c: 242:         sprintf(name,"%s%d",txt,ID);
  1558  0018CE  0EAA               	movlw	low _name
  1559  0018D0  6F00               	movwf	sprintf@s& (0+255),b
  1560  0018D2  0E00               	movlw	high _name
  1561  0018D4  6F01               	movwf	(sprintf@s+1)& (0+255),b
  1562  0018D6  0E92               	movlw	low STR_26
  1563  0018D8  6F02               	movwf	sprintf@fmt& (0+255),b
  1564  0018DA  0E11               	movlw	high STR_26
  1565  0018DC  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  1566  0018DE  C190  F104         	movff	packetHandler@txt,?_sprintf+4
  1567  0018E2  C191  F105         	movff	packetHandler@txt+1,?_sprintf+5
  1568  0018E6  C0DE  F106         	movff	_ID,?_sprintf+6
  1569  0018EA  C0DF  F107         	movff	_ID+1,?_sprintf+7
  1570  0018EE  EC54  F013         	call	_sprintf	;wreg free
  1571                           
  1572                           ;main_ble.c: 245:         char answer[50];;main_ble.c: 246:         sprintf(answer,"chan
      +                          geName:nameACK\r");
  1573  0018F2  0E46               	movlw	low packetHandler@answer_1087
  1574  0018F4  0101               	movlb	1	; () banked
  1575  0018F6  6F00               	movwf	sprintf@s& (0+255),b
  1576  0018F8  0E01               	movlw	high packetHandler@answer_1087
  1577  0018FA  6F01               	movwf	(sprintf@s+1)& (0+255),b
  1578  0018FC  0E18               	movlw	low STR_27
  1579  0018FE  6F02               	movwf	sprintf@fmt& (0+255),b
  1580  001900  0E11               	movlw	high STR_27
  1581  001902  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  1582  001904  EC54  F013         	call	_sprintf	;wreg free
  1583                           
  1584                           ;main_ble.c: 247:         UART_Write_String(answer);
  1585  001908  0E46               	movlw	low packetHandler@answer_1087
  1586  00190A  6E1E               	movwf	UART_Write_String@buffer,c
  1587  00190C  0E01               	movlw	high packetHandler@answer_1087
  1588  00190E  6E1F               	movwf	UART_Write_String@buffer+1,c
  1589  001910  ECCA  F012         	call	_UART_Write_String	;wreg free
  1590                           
  1591                           ;main_ble.c: 249:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1592  001914  0E03               	movlw	3
  1593  001916  0101               	movlb	1	; () banked
  1594  001918  6F13               	movwf	(??_packetHandler+1)& (0+255),b
  1595  00191A  0E08               	movlw	8
  1596  00191C  6F12               	movwf	??_packetHandler& (0+255),b
  1597  00191E  0E77               	movlw	119
  1598  001920                     u4387:
  1599  001920  2EE8               	decfsz	wreg,f,c
  1600  001922  D7FE               	bra	u4387
  1601  001924  2F12               	decfsz	??_packetHandler& (0+255),f,b
  1602  001926  D7FC               	bra	u4387
  1603  001928  2F13               	decfsz	(??_packetHandler+1)& (0+255),f,b
  1604  00192A  D7FA               	bra	u4387
  1605                           
  1606                           ;main_ble.c: 252:         RN4870_changeName(name);
  1607  00192C  0EAA               	movlw	low _name
  1608  00192E  6E26               	movwf	RN4870_changeName@name,c
  1609  001930  0E00               	movlw	high _name
  1610  001932  6E27               	movwf	RN4870_changeName@name+1,c
  1611  001934  EC06  F010         	call	_RN4870_changeName	;wreg free
  1612  001938  D714               	goto	l3498
  1613  00193A                     l175:
  1614                           
  1615                           ;main_ble.c: 264:     return 0;
  1616  00193A  0E00               	movlw	0
  1617  00193C  0100               	movlb	0	; () banked
  1618  00193E  6FA9               	movwf	(?_packetHandler+1)& (0+255),b
  1619  001940  0E00               	movlw	0
  1620  001942  6FA8               	movwf	?_packetHandler& (0+255),b
  1621                           
  1622                           ; BSR set to: 0
  1623  001944  0012               	return		;funcret
  1624  001946                     __end_of_packetHandler:
  1625                           	opt callstack 0
  1626                           
  1627 ;; *************** function _strtol *****************
  1628 ;; Defined at:
  1629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strtol.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  s               2   29[BANK0 ] PTR const unsigned char 
  1632 ;;		 -> NULL(0), RX_buffer(500), 
  1633 ;;  endptr          2   31[BANK0 ] PTR PTR unsigned char 
  1634 ;;		 -> packetHandler@end(2), 
  1635 ;;  base            2   33[BANK0 ] int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  4   29[BANK0 ] long 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1647 ;;      Params:         0       6       0       0       0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1650 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1651 ;;Total ram usage:        6 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    6
  1654 ;; This function calls:
  1655 ;;		___strtoxl
  1656 ;; This function is called by:
  1657 ;;		_packetHandler
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text2
  1662  002946                     __ptext2:
  1663                           	opt callstack 0
  1664  002946                     _strtol:
  1665                           	opt callstack 23
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;incstack = 0
  1669  002946  C07D  F028         	movff	strtol@s,___strtoxl@s
  1670  00294A  C07E  F029         	movff	strtol@s+1,___strtoxl@s+1
  1671  00294E  C07F  F02A         	movff	strtol@endptr,___strtoxl@endptr
  1672  002952  C080  F02B         	movff	strtol@endptr+1,___strtoxl@endptr+1
  1673  002956  C081  F02C         	movff	strtol@base,___strtoxl@base
  1674  00295A  C082  F02D         	movff	strtol@base+1,___strtoxl@base+1
  1675  00295E  0E01               	movlw	1
  1676  002960  6E2E               	movwf	___strtoxl@is_signed,c
  1677  002962  ECDB  F008         	call	___strtoxl	;wreg free
  1678  002966  C028  F07D         	movff	?___strtoxl,?_strtol
  1679  00296A  C029  F07E         	movff	?___strtoxl+1,?_strtol+1
  1680  00296E  C02A  F07F         	movff	?___strtoxl+2,?_strtol+2
  1681  002972  C02B  F080         	movff	?___strtoxl+3,?_strtol+3
  1682  002976  0012               	return		;funcret
  1683  002978                     __end_of_strtol:
  1684                           	opt callstack 0
  1685                           
  1686 ;; *************** function ___strtoxl *****************
  1687 ;; Defined at:
  1688 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__strtoxl.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  s               2   39[COMRAM] PTR const unsigned char 
  1691 ;;		 -> NULL(0), RX_buffer(500), 
  1692 ;;  endptr          2   41[COMRAM] PTR PTR unsigned char 
  1693 ;;		 -> packetHandler@end(2), 
  1694 ;;  base            2   43[COMRAM] int 
  1695 ;;  is_signed       1   45[COMRAM] unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  a               4   22[BANK0 ] unsigned long 
  1698 ;;  limit           4   16[BANK0 ] unsigned long 
  1699 ;;  prev_a          4    4[BANK0 ] unsigned long 
  1700 ;;  cp              2   26[BANK0 ] PTR const unsigned char 
  1701 ;;		 -> NULL(0), RX_buffer(500), 
  1702 ;;  c               1   28[BANK0 ] unsigned char 
  1703 ;;  skip            1   21[BANK0 ] unsigned char 
  1704 ;;  sign            1   20[BANK0 ] unsigned char 
  1705 ;;  conv_done       1   15[BANK0 ] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  4   39[COMRAM] unsigned long 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1715 ;;      Params:         7       0       0       0       0       0       0       0       0
  1716 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1718 ;;      Totals:         7      29       0       0       0       0       0       0       0
  1719 ;;Total ram usage:       36 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		___lmul
  1724 ;;		_isalpha
  1725 ;;		_isdigit
  1726 ;;		_isspace
  1727 ;;		_toupper
  1728 ;; This function is called by:
  1729 ;;		_strtol
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text3
  1734  0011B6                     __ptext3:
  1735                           	opt callstack 0
  1736  0011B6                     ___strtoxl:
  1737                           	opt callstack 23
  1738                           
  1739                           ;incstack = 0
  1740  0011B6  0E00               	movlw	0
  1741  0011B8  0100               	movlb	0	; () banked
  1742  0011BA  6F76               	movwf	___strtoxl@a& (0+255),b
  1743  0011BC  0E00               	movlw	0
  1744  0011BE  6F77               	movwf	(___strtoxl@a+1)& (0+255),b
  1745  0011C0  0E00               	movlw	0
  1746  0011C2  6F78               	movwf	(___strtoxl@a+2)& (0+255),b
  1747  0011C4  0E00               	movlw	0
  1748  0011C6  6F79               	movwf	(___strtoxl@a+3)& (0+255),b
  1749                           
  1750                           ; BSR set to: 0
  1751  0011C8  C028  F07A         	movff	___strtoxl@s,___strtoxl@cp
  1752  0011CC  C029  F07B         	movff	___strtoxl@s+1,___strtoxl@cp+1
  1753                           
  1754                           ; BSR set to: 0
  1755  0011D0  517A               	movf	___strtoxl@cp& (0+255),w,b
  1756  0011D2  117B               	iorwf	(___strtoxl@cp+1)& (0+255),w,b
  1757  0011D4  B4D8               	btfsc	status,2,c
  1758  0011D6  D15A               	goto	l3324
  1759                           
  1760                           ; BSR set to: 0
  1761  0011D8  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  1762  0011DC  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1763  0011E0  50DF               	movf	indf2,w,c
  1764  0011E2  B4D8               	btfsc	status,2,c
  1765  0011E4  D153               	goto	l3324
  1766  0011E6  D002               	goto	L1
  1767  0011E8                     l3222:
  1768                           
  1769                           ; BSR set to: 0
  1770  0011E8  4B7A               	infsnz	___strtoxl@cp& (0+255),f,b
  1771  0011EA  2B7B               	incf	(___strtoxl@cp+1)& (0+255),f,b
  1772  0011EC                     L1:
  1773  0011EC  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  1774  0011F0  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1775  0011F4  50DF               	movf	indf2,w,c
  1776  0011F6  6F7C               	movwf	___strtoxl@c& (0+255),b
  1777                           
  1778                           ; BSR set to: 0
  1779  0011F8  0E01               	movlw	1
  1780  0011FA  6F6E               	movwf	___strtoxl$1730& (0+255),b
  1781                           
  1782                           ; BSR set to: 0
  1783  0011FC  0E20               	movlw	32
  1784  0011FE  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1785  001200  B4D8               	btfsc	status,2,c
  1786  001202  D013               	goto	l3232
  1787                           
  1788                           ; BSR set to: 0
  1789  001204  0EF7               	movlw	247
  1790  001206  6F60               	movwf	??___strtoxl& (0+255),b
  1791  001208  0EFF               	movlw	255
  1792  00120A  6F61               	movwf	(??___strtoxl+1)& (0+255),b
  1793  00120C  517C               	movf	___strtoxl@c& (0+255),w,b
  1794  00120E  6F62               	movwf	(??___strtoxl+2)& (0+255),b
  1795  001210  6B63               	clrf	(??___strtoxl+3)& (0+255),b
  1796  001212  5160               	movf	??___strtoxl& (0+255),w,b
  1797  001214  2762               	addwf	(??___strtoxl+2)& (0+255),f,b
  1798  001216  5161               	movf	(??___strtoxl+1)& (0+255),w,b
  1799  001218  2363               	addwfc	(??___strtoxl+3)& (0+255),f,b
  1800  00121A  5163               	movf	(??___strtoxl+3)& (0+255),w,b
  1801  00121C  E104               	bnz	u3760
  1802  00121E  0E05               	movlw	5
  1803  001220  5D62               	subwf	(??___strtoxl+2)& (0+255),w,b
  1804  001222  A0D8               	btfss	status,0,c
  1805  001224  D002               	goto	l3232
  1806  001226                     u3760:
  1807                           
  1808                           ; BSR set to: 0
  1809  001226  0E00               	movlw	0
  1810  001228  6F6E               	movwf	___strtoxl$1730& (0+255),b
  1811  00122A                     l3232:
  1812                           
  1813                           ; BSR set to: 0
  1814  00122A  C06E  F068         	movff	___strtoxl$1730,___strtoxl$1729
  1815  00122E  6B69               	clrf	(___strtoxl$1729+1)& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818  001230  5168               	movf	___strtoxl$1729& (0+255),w,b
  1819  001232  1169               	iorwf	(___strtoxl$1729+1)& (0+255),w,b
  1820  001234  A4D8               	btfss	status,2,c
  1821  001236  D7D8               	goto	l3222
  1822                           
  1823                           ; BSR set to: 0
  1824  001238  0E00               	movlw	0
  1825  00123A  6F74               	movwf	___strtoxl@sign& (0+255),b
  1826  00123C  0E00               	movlw	0
  1827  00123E  6F6F               	movwf	___strtoxl@conv_done& (0+255),b
  1828  001240  0E00               	movlw	0
  1829  001242  6F75               	movwf	___strtoxl@skip& (0+255),b
  1830                           
  1831                           ; BSR set to: 0
  1832  001244  0E2D               	movlw	45
  1833  001246  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1834  001248  A4D8               	btfss	status,2,c
  1835  00124A  D00B               	goto	l3246
  1836                           
  1837                           ; BSR set to: 0
  1838  00124C  0E01               	movlw	1
  1839  00124E  6F74               	movwf	___strtoxl@sign& (0+255),b
  1840  001250                     l3244:
  1841                           
  1842                           ; BSR set to: 0
  1843  001250  4B7A               	infsnz	___strtoxl@cp& (0+255),f,b
  1844  001252  2B7B               	incf	(___strtoxl@cp+1)& (0+255),f,b
  1845  001254  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  1846  001258  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1847  00125C  50DF               	movf	indf2,w,c
  1848  00125E  6F7C               	movwf	___strtoxl@c& (0+255),b
  1849  001260  D004               	goto	l3250
  1850  001262                     l3246:
  1851                           
  1852                           ; BSR set to: 0
  1853  001262  0E2B               	movlw	43
  1854  001264  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1855  001266  B4D8               	btfsc	status,2,c
  1856  001268  D7F3               	goto	l3244
  1857  00126A                     l3250:
  1858                           
  1859                           ; BSR set to: 0
  1860  00126A  0E30               	movlw	48
  1861  00126C  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1862  00126E  A4D8               	btfss	status,2,c
  1863  001270  D030               	goto	l3272
  1864                           
  1865                           ; BSR set to: 0
  1866  001272  4B7A               	infsnz	___strtoxl@cp& (0+255),f,b
  1867  001274  2B7B               	incf	(___strtoxl@cp+1)& (0+255),f,b
  1868  001276  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  1869  00127A  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1870  00127E  50DF               	movf	indf2,w,c
  1871  001280  6F7C               	movwf	___strtoxl@c& (0+255),b
  1872                           
  1873                           ; BSR set to: 0
  1874  001282  502C               	movf	___strtoxl@base,w,c
  1875  001284  102D               	iorwf	___strtoxl@base+1,w,c
  1876  001286  B4D8               	btfsc	status,2,c
  1877  001288  D005               	goto	u3820
  1878                           
  1879                           ; BSR set to: 0
  1880  00128A  0E10               	movlw	16
  1881  00128C  182C               	xorwf	___strtoxl@base,w,c
  1882  00128E  102D               	iorwf	___strtoxl@base+1,w,c
  1883  001290  A4D8               	btfss	status,2,c
  1884  001292  D015               	goto	l3266
  1885  001294                     u3820:
  1886                           
  1887                           ; BSR set to: 0
  1888  001294  0E78               	movlw	120
  1889  001296  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1890  001298  B4D8               	btfsc	status,2,c
  1891  00129A  D004               	goto	u3840
  1892                           
  1893                           ; BSR set to: 0
  1894  00129C  0E58               	movlw	88
  1895  00129E  197C               	xorwf	___strtoxl@c& (0+255),w,b
  1896  0012A0  A4D8               	btfss	status,2,c
  1897  0012A2  D00D               	goto	l3266
  1898  0012A4                     u3840:
  1899                           
  1900                           ; BSR set to: 0
  1901  0012A4  0E00               	movlw	0
  1902  0012A6  6E2D               	movwf	___strtoxl@base+1,c
  1903  0012A8  0E10               	movlw	16
  1904  0012AA  6E2C               	movwf	___strtoxl@base,c
  1905                           
  1906                           ; BSR set to: 0
  1907  0012AC  4B7A               	infsnz	___strtoxl@cp& (0+255),f,b
  1908  0012AE  2B7B               	incf	(___strtoxl@cp+1)& (0+255),f,b
  1909  0012B0  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  1910  0012B4  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  1911  0012B8  50DF               	movf	indf2,w,c
  1912  0012BA  6F7C               	movwf	___strtoxl@c& (0+255),b
  1913  0012BC  D00A               	goto	l3272
  1914  0012BE                     l3266:
  1915                           
  1916                           ; BSR set to: 0
  1917  0012BE  0E01               	movlw	1
  1918  0012C0  6F6F               	movwf	___strtoxl@conv_done& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921  0012C2  502C               	movf	___strtoxl@base,w,c
  1922  0012C4  102D               	iorwf	___strtoxl@base+1,w,c
  1923  0012C6  A4D8               	btfss	status,2,c
  1924  0012C8  D004               	goto	l3272
  1925                           
  1926                           ; BSR set to: 0
  1927  0012CA  0E00               	movlw	0
  1928  0012CC  6E2D               	movwf	___strtoxl@base+1,c
  1929  0012CE  0E08               	movlw	8
  1930  0012D0  6E2C               	movwf	___strtoxl@base,c
  1931  0012D2                     l3272:
  1932                           
  1933                           ; BSR set to: 0
  1934  0012D2  502C               	movf	___strtoxl@base,w,c
  1935  0012D4  102D               	iorwf	___strtoxl@base+1,w,c
  1936  0012D6  A4D8               	btfss	status,2,c
  1937  0012D8  D004               	goto	l1061
  1938                           
  1939                           ; BSR set to: 0
  1940  0012DA  0E00               	movlw	0
  1941  0012DC  6E2D               	movwf	___strtoxl@base+1,c
  1942  0012DE  0E0A               	movlw	10
  1943  0012E0  6E2C               	movwf	___strtoxl@base,c
  1944  0012E2                     l1061:
  1945                           
  1946                           ; BSR set to: 0
  1947  0012E2  502E               	movf	___strtoxl@is_signed,w,c
  1948  0012E4  B4D8               	btfsc	status,2,c
  1949  0012E6  D014               	goto	l1062
  1950                           
  1951                           ; BSR set to: 0
  1952  0012E8  5174               	movf	___strtoxl@sign& (0+255),w,b
  1953  0012EA  A4D8               	btfss	status,2,c
  1954  0012EC  D008               	goto	l3280
  1955                           
  1956                           ; BSR set to: 0
  1957  0012EE  0EFF               	movlw	255
  1958  0012F0  6F70               	movwf	___strtoxl@limit& (0+255),b
  1959  0012F2  0EFF               	movlw	255
  1960  0012F4  6F71               	movwf	(___strtoxl@limit+1)& (0+255),b
  1961  0012F6  0EFF               	movlw	255
  1962  0012F8  6F72               	movwf	(___strtoxl@limit+2)& (0+255),b
  1963  0012FA  0E7F               	movlw	127
  1964  0012FC  D007               	goto	L2
  1965  0012FE                     l3280:
  1966                           
  1967                           ; BSR set to: 0
  1968  0012FE  0E00               	movlw	0
  1969  001300  6F70               	movwf	___strtoxl@limit& (0+255),b
  1970  001302  0E00               	movlw	0
  1971  001304  6F71               	movwf	(___strtoxl@limit+1)& (0+255),b
  1972  001306  0E00               	movlw	0
  1973  001308  6F72               	movwf	(___strtoxl@limit+2)& (0+255),b
  1974  00130A  0E80               	movlw	128
  1975  00130C                     L2:
  1976  00130C  6F73               	movwf	(___strtoxl@limit+3)& (0+255),b
  1977  00130E  D004               	goto	l1068
  1978  001310                     l1062:
  1979                           
  1980                           ; BSR set to: 0
  1981  001310  6970               	setf	___strtoxl@limit& (0+255),b
  1982  001312  6971               	setf	(___strtoxl@limit+1)& (0+255),b
  1983  001314  6972               	setf	(___strtoxl@limit+2)& (0+255),b
  1984  001316  6973               	setf	(___strtoxl@limit+3)& (0+255),b
  1985  001318                     l1068:
  1986                           
  1987                           ; BSR set to: 0
  1988  001318  C076  F064         	movff	___strtoxl@a,___strtoxl@prev_a
  1989  00131C  C077  F065         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  1990  001320  C078  F066         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  1991  001324  C079  F067         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  1992                           
  1993                           ; BSR set to: 0
  1994  001328  0E9F               	movlw	159
  1995  00132A  6F60               	movwf	??___strtoxl& (0+255),b
  1996  00132C  0EFF               	movlw	255
  1997  00132E  6F61               	movwf	(??___strtoxl+1)& (0+255),b
  1998  001330  517C               	movf	___strtoxl@c& (0+255),w,b
  1999  001332  6F62               	movwf	(??___strtoxl+2)& (0+255),b
  2000  001334  6B63               	clrf	(??___strtoxl+3)& (0+255),b
  2001  001336  0E20               	movlw	32
  2002  001338  1362               	iorwf	(??___strtoxl+2)& (0+255),f,b
  2003  00133A  0E00               	movlw	0
  2004  00133C  1363               	iorwf	(??___strtoxl+3)& (0+255),f,b
  2005  00133E  5160               	movf	??___strtoxl& (0+255),w,b
  2006  001340  2762               	addwf	(??___strtoxl+2)& (0+255),f,b
  2007  001342  5161               	movf	(??___strtoxl+1)& (0+255),w,b
  2008  001344  2363               	addwfc	(??___strtoxl+3)& (0+255),f,b
  2009  001346  5163               	movf	(??___strtoxl+3)& (0+255),w,b
  2010  001348  E106               	bnz	u3890
  2011  00134A  0E1A               	movlw	26
  2012  00134C  5D62               	subwf	(??___strtoxl+2)& (0+255),w,b
  2013  00134E  B0D8               	btfsc	status,0,c
  2014  001350  D002               	goto	u3890
  2015  001352  0E01               	movlw	1
  2016  001354  D001               	goto	u3900
  2017  001356                     u3890:
  2018  001356  0E00               	movlw	0
  2019  001358                     u3900:
  2020  001358  6F6A               	movwf	___strtoxl$1731& (0+255),b
  2021  00135A  6B6B               	clrf	(___strtoxl$1731+1)& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024  00135C  516A               	movf	___strtoxl$1731& (0+255),w,b
  2025  00135E  116B               	iorwf	(___strtoxl$1731+1)& (0+255),w,b
  2026  001360  B4D8               	btfsc	status,2,c
  2027  001362  D00A               	goto	l3290
  2028                           
  2029                           ; BSR set to: 0
  2030  001364  C07C  F020         	movff	___strtoxl@c,toupper@c
  2031  001368  6A21               	clrf	toupper@c+1,c
  2032  00136A  EC7E  F013         	call	_toupper	;wreg free
  2033  00136E  5020               	movf	?_toupper,w,c
  2034  001370  0FC9               	addlw	201
  2035  001372  0100               	movlb	0	; () banked
  2036  001374  6F7C               	movwf	___strtoxl@c& (0+255),b
  2037  001376  D01C               	goto	l3298
  2038  001378                     l3290:
  2039                           
  2040                           ; BSR set to: 0
  2041  001378  0ED0               	movlw	208
  2042  00137A  6F60               	movwf	??___strtoxl& (0+255),b
  2043  00137C  0EFF               	movlw	255
  2044  00137E  6F61               	movwf	(??___strtoxl+1)& (0+255),b
  2045  001380  517C               	movf	___strtoxl@c& (0+255),w,b
  2046  001382  6F62               	movwf	(??___strtoxl+2)& (0+255),b
  2047  001384  6B63               	clrf	(??___strtoxl+3)& (0+255),b
  2048  001386  5160               	movf	??___strtoxl& (0+255),w,b
  2049  001388  2762               	addwf	(??___strtoxl+2)& (0+255),f,b
  2050  00138A  5161               	movf	(??___strtoxl+1)& (0+255),w,b
  2051  00138C  2363               	addwfc	(??___strtoxl+3)& (0+255),f,b
  2052  00138E  5163               	movf	(??___strtoxl+3)& (0+255),w,b
  2053  001390  E106               	bnz	u3920
  2054  001392  0E0A               	movlw	10
  2055  001394  5D62               	subwf	(??___strtoxl+2)& (0+255),w,b
  2056  001396  B0D8               	btfsc	status,0,c
  2057  001398  D002               	goto	u3920
  2058  00139A  0E01               	movlw	1
  2059  00139C  D001               	goto	u3930
  2060  00139E                     u3920:
  2061  00139E  0E00               	movlw	0
  2062  0013A0                     u3930:
  2063  0013A0  6F6C               	movwf	___strtoxl$1732& (0+255),b
  2064  0013A2  6B6D               	clrf	(___strtoxl$1732+1)& (0+255),b
  2065                           
  2066                           ; BSR set to: 0
  2067  0013A4  516C               	movf	___strtoxl$1732& (0+255),w,b
  2068  0013A6  116D               	iorwf	(___strtoxl$1732+1)& (0+255),w,b
  2069  0013A8  B4D8               	btfsc	status,2,c
  2070  0013AA  D062               	goto	l3318
  2071                           
  2072                           ; BSR set to: 0
  2073  0013AC  0E30               	movlw	48
  2074  0013AE  5F7C               	subwf	___strtoxl@c& (0+255),f,b
  2075  0013B0                     l3298:
  2076                           
  2077                           ; BSR set to: 0
  2078  0013B0  517C               	movf	___strtoxl@c& (0+255),w,b
  2079  0013B2  6F60               	movwf	??___strtoxl& (0+255),b
  2080  0013B4  6B61               	clrf	(??___strtoxl+1)& (0+255),b
  2081  0013B6  502C               	movf	___strtoxl@base,w,c
  2082  0013B8  5D60               	subwf	??___strtoxl& (0+255),w,b
  2083  0013BA  5161               	movf	(??___strtoxl+1)& (0+255),w,b
  2084  0013BC  0A80               	xorlw	128
  2085  0013BE  6F62               	movwf	(??___strtoxl+2)& (0+255),b
  2086  0013C0  502D               	movf	___strtoxl@base+1,w,c
  2087  0013C2  0A80               	xorlw	128
  2088  0013C4  5962               	subwfb	(??___strtoxl+2)& (0+255),w,b
  2089  0013C6  B0D8               	btfsc	status,0,c
  2090  0013C8  D053               	goto	l3318
  2091                           
  2092                           ; BSR set to: 0
  2093  0013CA  5175               	movf	___strtoxl@skip& (0+255),w,b
  2094  0013CC  A4D8               	btfss	status,2,c
  2095  0013CE  D045               	goto	l3314
  2096                           
  2097                           ; BSR set to: 0
  2098  0013D0  C02C  F01A         	movff	___strtoxl@base,___lmul@multiplier
  2099  0013D4  C02D  F01B         	movff	___strtoxl@base+1,___lmul@multiplier+1
  2100  0013D8  0E00               	movlw	0
  2101  0013DA  BE1B               	btfsc	___lmul@multiplier+1,7,c
  2102  0013DC  0EFF               	movlw	-1
  2103  0013DE  6E1C               	movwf	___lmul@multiplier+2,c
  2104  0013E0  6E1D               	movwf	___lmul@multiplier+3,c
  2105  0013E2  C076  F01E         	movff	___strtoxl@a,___lmul@multiplicand
  2106  0013E6  C077  F01F         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  2107  0013EA  C078  F020         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  2108  0013EE  C079  F021         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  2109  0013F2  ECFE  F012         	call	___lmul	;wreg free
  2110  0013F6  0100               	movlb	0	; () banked
  2111  0013F8  517C               	movf	___strtoxl@c& (0+255),w,b
  2112  0013FA  241A               	addwf	?___lmul,w,c
  2113  0013FC  6F76               	movwf	___strtoxl@a& (0+255),b
  2114  0013FE  0E00               	movlw	0
  2115  001400  201B               	addwfc	?___lmul+1,w,c
  2116  001402  6F77               	movwf	(___strtoxl@a+1)& (0+255),b
  2117  001404  0E00               	movlw	0
  2118  001406  201C               	addwfc	?___lmul+2,w,c
  2119  001408  6F78               	movwf	(___strtoxl@a+2)& (0+255),b
  2120  00140A  0E00               	movlw	0
  2121  00140C  201D               	addwfc	?___lmul+3,w,c
  2122  00140E  6F79               	movwf	(___strtoxl@a+3)& (0+255),b
  2123                           
  2124                           ; BSR set to: 0
  2125  001410  5164               	movf	___strtoxl@prev_a& (0+255),w,b
  2126  001412  5D76               	subwf	___strtoxl@a& (0+255),w,b
  2127  001414  5165               	movf	(___strtoxl@prev_a+1)& (0+255),w,b
  2128  001416  5977               	subwfb	(___strtoxl@a+1)& (0+255),w,b
  2129  001418  5166               	movf	(___strtoxl@prev_a+2)& (0+255),w,b
  2130  00141A  5978               	subwfb	(___strtoxl@a+2)& (0+255),w,b
  2131  00141C  5167               	movf	(___strtoxl@prev_a+3)& (0+255),w,b
  2132  00141E  5979               	subwfb	(___strtoxl@a+3)& (0+255),w,b
  2133  001420  A0D8               	btfss	status,0,c
  2134  001422  D00D               	goto	u3990
  2135                           
  2136                           ; BSR set to: 0
  2137  001424  502E               	movf	___strtoxl@is_signed,w,c
  2138  001426  B4D8               	btfsc	status,2,c
  2139  001428  D018               	goto	l3314
  2140                           
  2141                           ; BSR set to: 0
  2142  00142A  5176               	movf	___strtoxl@a& (0+255),w,b
  2143  00142C  5D70               	subwf	___strtoxl@limit& (0+255),w,b
  2144  00142E  5177               	movf	(___strtoxl@a+1)& (0+255),w,b
  2145  001430  5971               	subwfb	(___strtoxl@limit+1)& (0+255),w,b
  2146  001432  5178               	movf	(___strtoxl@a+2)& (0+255),w,b
  2147  001434  5972               	subwfb	(___strtoxl@limit+2)& (0+255),w,b
  2148  001436  5179               	movf	(___strtoxl@a+3)& (0+255),w,b
  2149  001438  5973               	subwfb	(___strtoxl@limit+3)& (0+255),w,b
  2150  00143A  B0D8               	btfsc	status,0,c
  2151  00143C  D00E               	goto	l3314
  2152  00143E                     u3990:
  2153                           
  2154                           ; BSR set to: 0
  2155  00143E  C070  F076         	movff	___strtoxl@limit,___strtoxl@a
  2156  001442  C071  F077         	movff	___strtoxl@limit+1,___strtoxl@a+1
  2157  001446  C072  F078         	movff	___strtoxl@limit+2,___strtoxl@a+2
  2158  00144A  C073  F079         	movff	___strtoxl@limit+3,___strtoxl@a+3
  2159                           
  2160                           ; BSR set to: 0
  2161  00144E  0E00               	movlw	0
  2162  001450  6E30               	movwf	_errno+1,c
  2163  001452  0E22               	movlw	34
  2164  001454  6E2F               	movwf	_errno,c
  2165  001456  0E01               	movlw	1
  2166  001458  6F75               	movwf	___strtoxl@skip& (0+255),b
  2167  00145A                     l3314:
  2168                           
  2169                           ; BSR set to: 0
  2170  00145A  4B7A               	infsnz	___strtoxl@cp& (0+255),f,b
  2171  00145C  2B7B               	incf	(___strtoxl@cp+1)& (0+255),f,b
  2172  00145E  C07A  FFD9         	movff	___strtoxl@cp,fsr2l
  2173  001462  C07B  FFDA         	movff	___strtoxl@cp+1,fsr2h
  2174  001466  50DF               	movf	indf2,w,c
  2175  001468  6F7C               	movwf	___strtoxl@c& (0+255),b
  2176                           
  2177                           ; BSR set to: 0
  2178  00146A  0E01               	movlw	1
  2179  00146C  6F6F               	movwf	___strtoxl@conv_done& (0+255),b
  2180  00146E  D754               	goto	l1068
  2181  001470                     l3318:
  2182                           
  2183                           ; BSR set to: 0
  2184  001470  5175               	movf	___strtoxl@skip& (0+255),w,b
  2185  001472  A4D8               	btfss	status,2,c
  2186  001474  D00B               	goto	l3324
  2187                           
  2188                           ; BSR set to: 0
  2189  001476  5174               	movf	___strtoxl@sign& (0+255),w,b
  2190  001478  B4D8               	btfsc	status,2,c
  2191  00147A  D008               	goto	l3324
  2192                           
  2193                           ; BSR set to: 0
  2194  00147C  1F79               	comf	(___strtoxl@a+3)& (0+255),f,b
  2195  00147E  1F78               	comf	(___strtoxl@a+2)& (0+255),f,b
  2196  001480  1F77               	comf	(___strtoxl@a+1)& (0+255),f,b
  2197  001482  6D76               	negf	___strtoxl@a& (0+255),b
  2198  001484  0E00               	movlw	0
  2199  001486  2377               	addwfc	(___strtoxl@a+1)& (0+255),f,b
  2200  001488  2378               	addwfc	(___strtoxl@a+2)& (0+255),f,b
  2201  00148A  2379               	addwfc	(___strtoxl@a+3)& (0+255),f,b
  2202  00148C                     l3324:
  2203                           
  2204                           ; BSR set to: 0
  2205  00148C  502A               	movf	___strtoxl@endptr,w,c
  2206  00148E  102B               	iorwf	___strtoxl@endptr+1,w,c
  2207  001490  B4D8               	btfsc	status,2,c
  2208  001492  D00F               	goto	l3332
  2209                           
  2210                           ; BSR set to: 0
  2211  001494  516F               	movf	___strtoxl@conv_done& (0+255),w,b
  2212  001496  A4D8               	btfss	status,2,c
  2213  001498  D004               	goto	l3330
  2214                           
  2215                           ; BSR set to: 0
  2216  00149A  C028  F07A         	movff	___strtoxl@s,___strtoxl@cp
  2217  00149E  C029  F07B         	movff	___strtoxl@s+1,___strtoxl@cp+1
  2218  0014A2                     l3330:
  2219                           
  2220                           ; BSR set to: 0
  2221  0014A2  C02A  FFD9         	movff	___strtoxl@endptr,fsr2l
  2222  0014A6  C02B  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  2223  0014AA  C07A  FFDE         	movff	___strtoxl@cp,postinc2
  2224  0014AE  C07B  FFDD         	movff	___strtoxl@cp+1,postdec2
  2225  0014B2                     l3332:
  2226                           
  2227                           ; BSR set to: 0
  2228  0014B2  C076  F028         	movff	___strtoxl@a,?___strtoxl
  2229  0014B6  C077  F029         	movff	___strtoxl@a+1,?___strtoxl+1
  2230  0014BA  C078  F02A         	movff	___strtoxl@a+2,?___strtoxl+2
  2231  0014BE  C079  F02B         	movff	___strtoxl@a+3,?___strtoxl+3
  2232                           
  2233                           ; BSR set to: 0
  2234  0014C2  0012               	return		;funcret
  2235  0014C4                     __end_of___strtoxl:
  2236                           	opt callstack 0
  2237                           
  2238 ;; *************** function _toupper *****************
  2239 ;; Defined at:
  2240 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  c               2   31[COMRAM] int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2   31[COMRAM] int 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2254 ;;      Params:         2       0       0       0       0       0       0       0       0
  2255 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2256 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2257 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2258 ;;Total ram usage:        8 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    4
  2261 ;; This function calls:
  2262 ;;		_islower
  2263 ;; This function is called by:
  2264 ;;		___strtoxl
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text4
  2269  0026FC                     __ptext4:
  2270                           	opt callstack 0
  2271  0026FC                     _toupper:
  2272                           	opt callstack 23
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;incstack = 0
  2276  0026FC  0E9F               	movlw	159
  2277  0026FE  6E22               	movwf	??_toupper& (0+255),c
  2278  002700  0EFF               	movlw	255
  2279  002702  6E23               	movwf	(??_toupper+1)& (0+255),c
  2280  002704  C020  F024         	movff	toupper@c,??_toupper+2
  2281  002708  C021  F025         	movff	toupper@c+1,??_toupper+3
  2282  00270C  5022               	movf	??_toupper,w,c
  2283  00270E  2624               	addwf	??_toupper+2,f,c
  2284  002710  5023               	movf	??_toupper+1,w,c
  2285  002712  2225               	addwfc	??_toupper+3,f,c
  2286  002714  5025               	movf	??_toupper+3,w,c
  2287  002716  E106               	bnz	u3580
  2288  002718  0E1A               	movlw	26
  2289  00271A  5C24               	subwf	??_toupper+2,w,c
  2290  00271C  B0D8               	btfsc	status,0,c
  2291  00271E  D002               	goto	u3580
  2292  002720  0E01               	movlw	1
  2293  002722  D001               	goto	u3590
  2294  002724                     u3580:
  2295  002724  0E00               	movlw	0
  2296  002726                     u3590:
  2297  002726  6E26               	movwf	_toupper$1782,c
  2298  002728  6A27               	clrf	_toupper$1782+1,c
  2299  00272A  5026               	movf	_toupper$1782,w,c
  2300  00272C  1027               	iorwf	_toupper$1782+1,w,c
  2301  00272E  B4D8               	btfsc	status,2,c
  2302  002730  D005               	goto	l1132
  2303  002732  0E5F               	movlw	95
  2304  002734  1420               	andwf	toupper@c,w,c
  2305  002736  6E20               	movwf	?_toupper,c
  2306  002738  6A21               	clrf	?_toupper+1,c
  2307  00273A  0012               	return	
  2308  00273C                     l1132:
  2309  00273C  C020  F020         	movff	toupper@c,?_toupper
  2310  002740  C021  F021         	movff	toupper@c+1,?_toupper+1
  2311  002744  0012               	return		;funcret
  2312  002746                     __end_of_toupper:
  2313                           	opt callstack 0
  2314                           
  2315 ;; *************** function _islower *****************
  2316 ;; Defined at:
  2317 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  c               2   25[COMRAM] int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2   25[COMRAM] int 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         2       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        6 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    3
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_toupper
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text5
  2346  002978                     __ptext5:
  2347                           	opt callstack 0
  2348  002978                     _islower:
  2349                           	opt callstack 23
  2350                           
  2351                           ;incstack = 0
  2352  002978  0E9F               	movlw	159
  2353  00297A  6E1C               	movwf	??_islower& (0+255),c
  2354  00297C  0EFF               	movlw	255
  2355  00297E  6E1D               	movwf	(??_islower+1)& (0+255),c
  2356  002980  C01A  F01E         	movff	islower@c,??_islower+2
  2357  002984  C01B  F01F         	movff	islower@c+1,??_islower+3
  2358  002988  501C               	movf	??_islower,w,c
  2359  00298A  261E               	addwf	??_islower+2,f,c
  2360  00298C  501D               	movf	??_islower+1,w,c
  2361  00298E  221F               	addwfc	??_islower+3,f,c
  2362  002990  501F               	movf	??_islower+3,w,c
  2363  002992  E106               	bnz	u3440
  2364  002994  0E1A               	movlw	26
  2365  002996  5C1E               	subwf	??_islower+2,w,c
  2366  002998  B0D8               	btfsc	status,0,c
  2367  00299A  D002               	goto	u3440
  2368  00299C  0E01               	movlw	1
  2369  00299E  D001               	goto	u3450
  2370  0029A0                     u3440:
  2371  0029A0  0E00               	movlw	0
  2372  0029A2                     u3450:
  2373  0029A2  6E1A               	movwf	?_islower,c
  2374  0029A4  6A1B               	clrf	?_islower+1,c
  2375  0029A6  0012               	return		;funcret
  2376  0029A8                     __end_of_islower:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _isspace *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  c               2   25[COMRAM] int 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2   25[COMRAM] int 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         2       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2398 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        7 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		___strtoxl
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text6
  2410  0027CA                     __ptext6:
  2411                           	opt callstack 0
  2412  0027CA                     _isspace:
  2413                           	opt callstack 24
  2414                           
  2415                           ;incstack = 0
  2416  0027CA  0E01               	movlw	1
  2417  0027CC  6E20               	movwf	_isspace$1758,c
  2418  0027CE  0E20               	movlw	32
  2419  0027D0  181A               	xorwf	isspace@c,w,c
  2420  0027D2  101B               	iorwf	isspace@c+1,w,c
  2421  0027D4  B4D8               	btfsc	status,2,c
  2422  0027D6  D014               	goto	l3140
  2423  0027D8  0EF7               	movlw	247
  2424  0027DA  6E1C               	movwf	??_isspace& (0+255),c
  2425  0027DC  0EFF               	movlw	255
  2426  0027DE  6E1D               	movwf	(??_isspace+1)& (0+255),c
  2427  0027E0  C01A  F01E         	movff	isspace@c,??_isspace+2
  2428  0027E4  C01B  F01F         	movff	isspace@c+1,??_isspace+3
  2429  0027E8  501C               	movf	??_isspace,w,c
  2430  0027EA  261E               	addwf	??_isspace+2,f,c
  2431  0027EC  501D               	movf	??_isspace+1,w,c
  2432  0027EE  221F               	addwfc	??_isspace+3,f,c
  2433  0027F0  501F               	movf	??_isspace+3,w,c
  2434  0027F2  E104               	bnz	u3550
  2435  0027F4  0E05               	movlw	5
  2436  0027F6  5C1E               	subwf	??_isspace+2,w,c
  2437  0027F8  A0D8               	btfss	status,0,c
  2438  0027FA  D002               	goto	l3140
  2439  0027FC                     u3550:
  2440  0027FC  0E00               	movlw	0
  2441  0027FE  6E20               	movwf	_isspace$1758,c
  2442  002800                     l3140:
  2443  002800  C020  F01A         	movff	_isspace$1758,?_isspace
  2444  002804  6A1B               	clrf	?_isspace+1,c
  2445  002806  0012               	return		;funcret
  2446  002808                     __end_of_isspace:
  2447                           	opt callstack 0
  2448                           
  2449 ;; *************** function _isdigit *****************
  2450 ;; Defined at:
  2451 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  c               2   25[COMRAM] int 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2   25[COMRAM] int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2465 ;;      Params:         2       0       0       0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2467 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2468 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        6 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    3
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		___strtoxl
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text7
  2480  0029A8                     __ptext7:
  2481                           	opt callstack 0
  2482  0029A8                     _isdigit:
  2483                           	opt callstack 24
  2484                           
  2485                           ;incstack = 0
  2486  0029A8  0ED0               	movlw	208
  2487  0029AA  6E1C               	movwf	??_isdigit& (0+255),c
  2488  0029AC  0EFF               	movlw	255
  2489  0029AE  6E1D               	movwf	(??_isdigit+1)& (0+255),c
  2490  0029B0  C01A  F01E         	movff	isdigit@c,??_isdigit+2
  2491  0029B4  C01B  F01F         	movff	isdigit@c+1,??_isdigit+3
  2492  0029B8  501C               	movf	??_isdigit,w,c
  2493  0029BA  261E               	addwf	??_isdigit+2,f,c
  2494  0029BC  501D               	movf	??_isdigit+1,w,c
  2495  0029BE  221F               	addwfc	??_isdigit+3,f,c
  2496  0029C0  501F               	movf	??_isdigit+3,w,c
  2497  0029C2  E106               	bnz	u3610
  2498  0029C4  0E0A               	movlw	10
  2499  0029C6  5C1E               	subwf	??_isdigit+2,w,c
  2500  0029C8  B0D8               	btfsc	status,0,c
  2501  0029CA  D002               	goto	u3610
  2502  0029CC  0E01               	movlw	1
  2503  0029CE  D001               	goto	u3620
  2504  0029D0                     u3610:
  2505  0029D0  0E00               	movlw	0
  2506  0029D2                     u3620:
  2507  0029D2  6E1A               	movwf	?_isdigit,c
  2508  0029D4  6A1B               	clrf	?_isdigit+1,c
  2509  0029D6  0012               	return		;funcret
  2510  0029D8                     __end_of_isdigit:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function _isalpha *****************
  2514 ;; Defined at:
  2515 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  c               2   25[COMRAM] int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2   25[COMRAM] int 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         2       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        6 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		___strtoxl
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text8
  2544  0028AC                     __ptext8:
  2545                           	opt callstack 0
  2546  0028AC                     _isalpha:
  2547                           	opt callstack 24
  2548                           
  2549                           ;incstack = 0
  2550  0028AC  0E9F               	movlw	159
  2551  0028AE  6E1C               	movwf	??_isalpha& (0+255),c
  2552  0028B0  0EFF               	movlw	255
  2553  0028B2  6E1D               	movwf	(??_isalpha+1)& (0+255),c
  2554  0028B4  0E20               	movlw	32
  2555  0028B6  101A               	iorwf	isalpha@c,w,c
  2556  0028B8  6E1E               	movwf	(??_isalpha+2)& (0+255),c
  2557  0028BA  0E00               	movlw	0
  2558  0028BC  101B               	iorwf	isalpha@c+1,w,c
  2559  0028BE  6E1F               	movwf	(??_isalpha+3)& (0+255),c
  2560  0028C0  501C               	movf	??_isalpha,w,c
  2561  0028C2  261E               	addwf	??_isalpha+2,f,c
  2562  0028C4  501D               	movf	??_isalpha+1,w,c
  2563  0028C6  221F               	addwfc	??_isalpha+3,f,c
  2564  0028C8  501F               	movf	??_isalpha+3,w,c
  2565  0028CA  E106               	bnz	u3560
  2566  0028CC  0E1A               	movlw	26
  2567  0028CE  5C1E               	subwf	??_isalpha+2,w,c
  2568  0028D0  B0D8               	btfsc	status,0,c
  2569  0028D2  D002               	goto	u3560
  2570  0028D4  0E01               	movlw	1
  2571  0028D6  D001               	goto	u3570
  2572  0028D8                     u3560:
  2573  0028D8  0E00               	movlw	0
  2574  0028DA                     u3570:
  2575  0028DA  6E1A               	movwf	?_isalpha,c
  2576  0028DC  6A1B               	clrf	?_isalpha+1,c
  2577  0028DE  0012               	return		;funcret
  2578  0028E0                     __end_of_isalpha:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function ___lmul *****************
  2582 ;; Defined at:
  2583 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  multiplier      4   25[COMRAM] unsigned long 
  2586 ;;  multiplicand    4   29[COMRAM] unsigned long 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  product         4   33[COMRAM] unsigned long 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  4   25[COMRAM] unsigned long 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2598 ;;      Params:         8       0       0       0       0       0       0       0       0
  2599 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2601 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2602 ;;Total ram usage:       12 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    3
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		___strtoxl
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text9
  2613  0025FC                     __ptext9:
  2614                           	opt callstack 0
  2615  0025FC                     ___lmul:
  2616                           	opt callstack 24
  2617                           
  2618                           ;incstack = 0
  2619  0025FC  0E00               	movlw	0
  2620  0025FE  6E22               	movwf	___lmul@product,c
  2621  002600  0E00               	movlw	0
  2622  002602  6E23               	movwf	___lmul@product+1,c
  2623  002604  0E00               	movlw	0
  2624  002606  6E24               	movwf	___lmul@product+2,c
  2625  002608  0E00               	movlw	0
  2626  00260A  6E25               	movwf	___lmul@product+3,c
  2627  00260C                     l3124:
  2628  00260C  A01A               	btfss	___lmul@multiplier,0,c
  2629  00260E  D008               	goto	l3128
  2630  002610  501E               	movf	___lmul@multiplicand,w,c
  2631  002612  2622               	addwf	___lmul@product,f,c
  2632  002614  501F               	movf	___lmul@multiplicand+1,w,c
  2633  002616  2223               	addwfc	___lmul@product+1,f,c
  2634  002618  5020               	movf	___lmul@multiplicand+2,w,c
  2635  00261A  2224               	addwfc	___lmul@product+2,f,c
  2636  00261C  5021               	movf	___lmul@multiplicand+3,w,c
  2637  00261E  2225               	addwfc	___lmul@product+3,f,c
  2638  002620                     l3128:
  2639  002620  90D8               	bcf	status,0,c
  2640  002622  361E               	rlcf	___lmul@multiplicand,f,c
  2641  002624  361F               	rlcf	___lmul@multiplicand+1,f,c
  2642  002626  3620               	rlcf	___lmul@multiplicand+2,f,c
  2643  002628  3621               	rlcf	___lmul@multiplicand+3,f,c
  2644  00262A  90D8               	bcf	status,0,c
  2645  00262C  321D               	rrcf	___lmul@multiplier+3,f,c
  2646  00262E  321C               	rrcf	___lmul@multiplier+2,f,c
  2647  002630  321B               	rrcf	___lmul@multiplier+1,f,c
  2648  002632  321A               	rrcf	___lmul@multiplier,f,c
  2649  002634  501A               	movf	___lmul@multiplier,w,c
  2650  002636  101B               	iorwf	___lmul@multiplier+1,w,c
  2651  002638  101C               	iorwf	___lmul@multiplier+2,w,c
  2652  00263A  101D               	iorwf	___lmul@multiplier+3,w,c
  2653  00263C  A4D8               	btfss	status,2,c
  2654  00263E  D7E6               	goto	l3124
  2655  002640  C022  F01A         	movff	___lmul@product,?___lmul
  2656  002644  C023  F01B         	movff	___lmul@product+1,?___lmul+1
  2657  002648  C024  F01C         	movff	___lmul@product+2,?___lmul+2
  2658  00264C  C025  F01D         	movff	___lmul@product+3,?___lmul+3
  2659  002650  0012               	return		;funcret
  2660  002652                     __end_of___lmul:
  2661                           	opt callstack 0
  2662                           
  2663 ;; *************** function _strstr *****************
  2664 ;; Defined at:
  2665 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strstr.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  h               2   36[COMRAM] PTR const unsigned char 
  2668 ;;		 -> NULL(0), RX_buffer(500), 
  2669 ;;  n               2   38[COMRAM] PTR const unsigned char 
  2670 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  2671 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  2672 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  nl              2   40[COMRAM] unsigned int 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  2   36[COMRAM] PTR unsigned char 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         4       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    4
  2691 ;; This function calls:
  2692 ;;		_strchr
  2693 ;;		_strlen
  2694 ;;		_strncmp
  2695 ;; This function is called by:
  2696 ;;		_packetHandler
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text10
  2701  00236A                     __ptext10:
  2702                           	opt callstack 0
  2703  00236A                     _strstr:
  2704                           	opt callstack 25
  2705                           
  2706                           ;incstack = 0
  2707  00236A  5027               	movf	strstr@n,w,c
  2708  00236C  1028               	iorwf	strstr@n+1,w,c
  2709  00236E  B4D8               	btfsc	status,2,c
  2710  002370  D041               	goto	u4070
  2711  002372  C027  F01A         	movff	strstr@n,strlen@s
  2712  002376  C028  F01B         	movff	strstr@n+1,strlen@s+1
  2713  00237A  ECA3  F013         	call	_strlen	;wreg free
  2714  00237E  C01A  F029         	movff	?_strlen,strstr@nl
  2715  002382  C01B  F02A         	movff	?_strlen+1,strstr@nl+1
  2716  002386  D02B               	goto	l3358
  2717  002388                     l3350:
  2718  002388  C025  F01A         	movff	strstr@h,strncmp@_l
  2719  00238C  C026  F01B         	movff	strstr@h+1,strncmp@_l+1
  2720  002390  C027  F01C         	movff	strstr@n,strncmp@_r
  2721  002394  C028  F01D         	movff	strstr@n+1,strncmp@_r+1
  2722  002398  C029  F01E         	movff	strstr@nl,strncmp@n
  2723  00239C  C02A  F01F         	movff	strstr@nl+1,strncmp@n+1
  2724  0023A0  EC76  F010         	call	_strncmp	;wreg free
  2725  0023A4  501A               	movf	?_strncmp,w,c
  2726  0023A6  101B               	iorwf	?_strncmp+1,w,c
  2727  0023A8  A4D8               	btfss	status,2,c
  2728  0023AA  D005               	goto	l3356
  2729  0023AC  C025  F025         	movff	strstr@h,?_strstr
  2730  0023B0  C026  F026         	movff	strstr@h+1,?_strstr+1
  2731  0023B4  0012               	return	
  2732  0023B6                     l3356:
  2733  0023B6  0E01               	movlw	1
  2734  0023B8  2425               	addwf	strstr@h,w,c
  2735  0023BA  6E1A               	movwf	strchr@s,c
  2736  0023BC  0E00               	movlw	0
  2737  0023BE  2026               	addwfc	strstr@h+1,w,c
  2738  0023C0  6E1B               	movwf	strchr@s+1,c
  2739  0023C2  C027  FFF6         	movff	strstr@n,tblptrl
  2740  0023C6  C028  FFF7         	movff	strstr@n+1,tblptrh
  2741  0023CA                     	if	0	;tblptru may be non-zero
  2742  0023CA                     	endif
  2743  0023CA                     	if	0	;tblptru may be non-zero
  2744  0023CA                     	endif
  2745  0023CA  0008               	tblrd		*
  2746  0023CC  50F5               	movf	tablat,w,c
  2747  0023CE  6E1C               	movwf	strchr@c,c
  2748  0023D0  6A1D               	clrf	strchr@c+1,c
  2749  0023D2  EC20  F014         	call	_strchr	;wreg free
  2750  0023D6  C01A  F025         	movff	?_strchr,strstr@h
  2751  0023DA  C01B  F026         	movff	?_strchr+1,strstr@h+1
  2752  0023DE                     l3358:
  2753  0023DE  5025               	movf	strstr@h,w,c
  2754  0023E0  1026               	iorwf	strstr@h+1,w,c
  2755  0023E2  B4D8               	btfsc	status,2,c
  2756  0023E4  D007               	goto	u4070
  2757  0023E6  C025  FFD9         	movff	strstr@h,fsr2l
  2758  0023EA  C026  FFDA         	movff	strstr@h+1,fsr2h
  2759  0023EE  50DF               	movf	indf2,w,c
  2760  0023F0  A4D8               	btfss	status,2,c
  2761  0023F2  D7CA               	goto	l3350
  2762  0023F4                     u4070:
  2763  0023F4  0E00               	movlw	0
  2764  0023F6  6E25               	movwf	?_strstr,c
  2765  0023F8  0E00               	movlw	0
  2766  0023FA  6E26               	movwf	?_strstr+1,c
  2767  0023FC  0012               	return		;funcret
  2768  0023FE                     __end_of_strstr:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _strncmp *****************
  2772 ;; Defined at:
  2773 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  _l              2   25[COMRAM] PTR const unsigned char 
  2776 ;;		 -> NULL(0), RX_buffer(500), 
  2777 ;;  _r              2   27[COMRAM] PTR const unsigned char 
  2778 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  2779 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  2780 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  2781 ;;  n               2   29[COMRAM] unsigned int 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  r               2   34[COMRAM] PTR const unsigned char 
  2784 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  2785 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  2786 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  2787 ;;  l               2   32[COMRAM] PTR const unsigned char 
  2788 ;;		 -> NULL(0), RX_buffer(500), 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  2   25[COMRAM] int 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         6       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2801 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:       11 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    3
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_strstr
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text11
  2813  0020EC                     __ptext11:
  2814                           	opt callstack 0
  2815  0020EC                     _strncmp:
  2816                           	opt callstack 25
  2817                           
  2818                           ;incstack = 0
  2819  0020EC  C01A  F021         	movff	strncmp@_l,strncmp@l
  2820  0020F0  C01B  F022         	movff	strncmp@_l+1,strncmp@l+1
  2821  0020F4  C01C  F023         	movff	strncmp@_r,strncmp@r
  2822  0020F8  C01D  F024         	movff	strncmp@_r+1,strncmp@r+1
  2823  0020FC  061E               	decf	strncmp@n,f,c
  2824  0020FE  A0D8               	btfss	status,0,c
  2825  002100  061F               	decf	strncmp@n+1,f,c
  2826  002102  281E               	incf	strncmp@n,w,c
  2827  002104  E10F               	bnz	l3188
  2828  002106  281F               	incf	strncmp@n+1,w,c
  2829  002108  A4D8               	btfss	status,2,c
  2830  00210A  D00C               	goto	l3188
  2831  00210C  0E00               	movlw	0
  2832  00210E  6E1B               	movwf	?_strncmp+1,c
  2833  002110  0E00               	movlw	0
  2834  002112  6E1A               	movwf	?_strncmp,c
  2835  002114  0012               	return	
  2836  002116                     l3186:
  2837  002116  4A21               	infsnz	strncmp@l,f,c
  2838  002118  2A22               	incf	strncmp@l+1,f,c
  2839  00211A  4A23               	infsnz	strncmp@r,f,c
  2840  00211C  2A24               	incf	strncmp@r+1,f,c
  2841  00211E  061E               	decf	strncmp@n,f,c
  2842  002120  A0D8               	btfss	status,0,c
  2843  002122  061F               	decf	strncmp@n+1,f,c
  2844  002124                     l3188:
  2845  002124  C021  FFD9         	movff	strncmp@l,fsr2l
  2846  002128  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2847  00212C  50DF               	movf	indf2,w,c
  2848  00212E  B4D8               	btfsc	status,2,c
  2849  002130  D01C               	goto	u3700
  2850  002132  C023  FFF6         	movff	strncmp@r,tblptrl
  2851  002136  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2852  00213A                     	if	0	;tblptru may be non-zero
  2853  00213A                     	endif
  2854  00213A                     	if	0	;tblptru may be non-zero
  2855  00213A                     	endif
  2856  00213A  0008               	tblrd		*
  2857  00213C  50F5               	movf	tablat,w,c
  2858  00213E  0900               	iorlw	0
  2859  002140  B4D8               	btfsc	status,2,c
  2860  002142  D013               	goto	u3700
  2861  002144  501E               	movf	strncmp@n,w,c
  2862  002146  101F               	iorwf	strncmp@n+1,w,c
  2863  002148  B4D8               	btfsc	status,2,c
  2864  00214A  D00F               	goto	u3700
  2865  00214C  C021  FFD9         	movff	strncmp@l,fsr2l
  2866  002150  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2867  002154  50DF               	movf	indf2,w,c
  2868  002156  6E20               	movwf	??_strncmp& (0+255),c
  2869  002158  C023  FFF6         	movff	strncmp@r,tblptrl
  2870  00215C  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2871  002160                     	if	0	;tblptru may be non-zero
  2872  002160                     	endif
  2873  002160                     	if	0	;tblptru may be non-zero
  2874  002160                     	endif
  2875  002160  0008               	tblrd		*
  2876  002162  50F5               	movf	tablat,w,c
  2877  002164  1820               	xorwf	??_strncmp,w,c
  2878  002166  B4D8               	btfsc	status,2,c
  2879  002168  D7D6               	goto	l3186
  2880  00216A                     u3700:
  2881  00216A  C021  FFD9         	movff	strncmp@l,fsr2l
  2882  00216E  C022  FFDA         	movff	strncmp@l+1,fsr2h
  2883  002172  50DF               	movf	indf2,w,c
  2884  002174  6E20               	movwf	??_strncmp& (0+255),c
  2885  002176  C023  FFF6         	movff	strncmp@r,tblptrl
  2886  00217A  C024  FFF7         	movff	strncmp@r+1,tblptrh
  2887  00217E                     	if	0	;tblptru may be non-zero
  2888  00217E                     	endif
  2889  00217E                     	if	0	;tblptru may be non-zero
  2890  00217E                     	endif
  2891  00217E  0008               	tblrd		*
  2892  002180  50F5               	movf	tablat,w,c
  2893  002182  5C20               	subwf	??_strncmp,w,c
  2894  002184  6E1A               	movwf	?_strncmp,c
  2895  002186  6A1B               	clrf	?_strncmp+1,c
  2896  002188  A0D8               	btfss	status,0,c
  2897  00218A  061B               	decf	?_strncmp+1,f,c
  2898  00218C  0012               	return		;funcret
  2899  00218E                     __end_of_strncmp:
  2900                           	opt callstack 0
  2901                           
  2902 ;; *************** function _strchr *****************
  2903 ;; Defined at:
  2904 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strchr.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  s               2   25[COMRAM] PTR const unsigned char 
  2907 ;;		 -> NULL(0), RX_buffer(500), 
  2908 ;;  c               2   27[COMRAM] int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  2   25[COMRAM] PTR unsigned char 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         4       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        5 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    3
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_strstr
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text12
  2935  002840                     __ptext12:
  2936                           	opt callstack 0
  2937  002840                     _strchr:
  2938                           	opt callstack 25
  2939                           
  2940                           ;incstack = 0
  2941  002840  C01A  FFD9         	movff	strchr@s,fsr2l
  2942  002844  C01B  FFDA         	movff	strchr@s+1,fsr2h
  2943  002848  501C               	movf	strchr@c,w,c
  2944  00284A  18DE               	xorwf	postinc2,w,c
  2945  00284C  A4D8               	btfss	status,2,c
  2946  00284E  D005               	goto	l3206
  2947  002850  C01A  F01A         	movff	strchr@s,?_strchr
  2948  002854  C01B  F01B         	movff	strchr@s+1,?_strchr+1
  2949  002858  0012               	return	
  2950  00285A                     l3206:
  2951  00285A  C01A  FFD9         	movff	strchr@s,fsr2l
  2952  00285E  C01B  FFDA         	movff	strchr@s+1,fsr2h
  2953  002862  4A1A               	infsnz	strchr@s,f,c
  2954  002864  2A1B               	incf	strchr@s+1,f,c
  2955  002866  50DF               	movf	indf2,w,c
  2956  002868  A4D8               	btfss	status,2,c
  2957  00286A  D7EA               	goto	_strchr
  2958  00286C  0E00               	movlw	0
  2959  00286E  6E1A               	movwf	?_strchr,c
  2960  002870  0E00               	movlw	0
  2961  002872  6E1B               	movwf	?_strchr+1,c
  2962  002874  0012               	return		;funcret
  2963  002876                     __end_of_strchr:
  2964                           	opt callstack 0
  2965                           
  2966 ;; *************** function _sprintf *****************
  2967 ;; Defined at:
  2968 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2971 ;;		 -> packetHandler@answer_1087(50), name(50), packetHandler@answer_1080(50), packetHandler@answer(20), 
  2972 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2973 ;;		 -> STR_27(20), STR_26(5), STR_22(16), STR_18(23), 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  f               6   12[BANK1 ] struct _IO_FILE
  2976 ;;  ap              2   10[BANK1 ] PTR void [1]
  2977 ;;		 -> ?_sprintf(2), 
  2978 ;;  ret             2    0        int 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2    0[BANK1 ] int 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       8       0       0       0       0       0       0
  2989 ;;      Locals:         0       0      10       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2991 ;;      Totals:         0       0      18       0       0       0       0       0       0
  2992 ;;Total ram usage:       18 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:   10
  2995 ;; This function calls:
  2996 ;;		_vfprintf
  2997 ;; This function is called by:
  2998 ;;		_packetHandler
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text13
  3003  0026A8                     __ptext13:
  3004                           	opt callstack 0
  3005  0026A8                     _sprintf:
  3006                           	opt callstack 19
  3007                           
  3008                           ;incstack = 0
  3009  0026A8  0E04               	movlw	low (?_sprintf+4)
  3010  0026AA  0101               	movlb	1	; () banked
  3011  0026AC  6F0A               	movwf	sprintf@ap& (0+255),b
  3012  0026AE  0E01               	movlw	high (?_sprintf+4)
  3013  0026B0  6F0B               	movwf	(sprintf@ap+1)& (0+255),b
  3014  0026B2  C100  F10C         	movff	sprintf@s,sprintf@f
  3015  0026B6  C101  F10D         	movff	sprintf@s+1,sprintf@f+1
  3016                           
  3017                           ; BSR set to: 1
  3018  0026BA  0E00               	movlw	0
  3019  0026BC  6F0F               	movwf	(sprintf@f+3)& (0+255),b
  3020  0026BE  0E00               	movlw	0
  3021  0026C0  6F0E               	movwf	(sprintf@f+2)& (0+255),b
  3022                           
  3023                           ; BSR set to: 1
  3024  0026C2  0E00               	movlw	0
  3025  0026C4  6F11               	movwf	(sprintf@f+5)& (0+255),b
  3026  0026C6  0E00               	movlw	0
  3027  0026C8  6F10               	movwf	(sprintf@f+4)& (0+255),b
  3028                           
  3029                           ; BSR set to: 1
  3030  0026CA  0E0C               	movlw	low sprintf@f
  3031  0026CC  0100               	movlb	0	; () banked
  3032  0026CE  6FA0               	movwf	vfprintf@fp& (0+255),b
  3033  0026D0  0E01               	movlw	high sprintf@f
  3034  0026D2  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  3035  0026D4  C102  F0A2         	movff	sprintf@fmt,vfprintf@fmt
  3036  0026D8  C103  F0A3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3037  0026DC  0E0A               	movlw	low sprintf@ap
  3038  0026DE  6FA4               	movwf	vfprintf@ap& (0+255),b
  3039  0026E0  0E01               	movlw	high sprintf@ap
  3040  0026E2  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  3041  0026E4  EC29  F013         	call	_vfprintf	;wreg free
  3042  0026E8  0101               	movlb	1	; () banked
  3043  0026EA  510E               	movf	(sprintf@f+2)& (0+255),w,b
  3044  0026EC  2500               	addwf	sprintf@s& (0+255),w,b
  3045  0026EE  6ED9               	movwf	fsr2l,c
  3046  0026F0  510F               	movf	(sprintf@f+3)& (0+255),w,b
  3047  0026F2  2101               	addwfc	(sprintf@s+1)& (0+255),w,b
  3048  0026F4  6EDA               	movwf	fsr2h,c
  3049  0026F6  0E00               	movlw	0
  3050  0026F8  6EDF               	movwf	indf2,c
  3051                           
  3052                           ; BSR set to: 1
  3053  0026FA  0012               	return		;funcret
  3054  0026FC                     __end_of_sprintf:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _vfprintf *****************
  3058 ;; Defined at:
  3059 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  fp              2   64[BANK0 ] PTR struct _IO_FILE
  3062 ;;		 -> sprintf@f(6), 
  3063 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  3064 ;;		 -> STR_27(20), STR_26(5), STR_22(16), STR_18(23), 
  3065 ;;  ap              2   68[BANK0 ] PTR PTR void 
  3066 ;;		 -> sprintf@ap(2), 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  3069 ;;		 -> STR_27(20), STR_26(5), STR_22(16), STR_18(23), 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2   64[BANK0 ] int 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3079 ;;      Params:         0       6       0       0       0       0       0       0       0
  3080 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3082 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        8 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    9
  3086 ;; This function calls:
  3087 ;;		_vfpfcnvrt
  3088 ;; This function is called by:
  3089 ;;		_sprintf
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text14
  3094  002652                     __ptext14:
  3095                           	opt callstack 0
  3096  002652                     _vfprintf:
  3097                           	opt callstack 19
  3098                           
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3100                           
  3101                           ; BSR set to: 1
  3102                           ;incstack = 0
  3103  002652  C0A2  F0A6         	movff	vfprintf@fmt,vfprintf@cfmt
  3104  002656  C0A3  F0A7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3105                           
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3107  00265A  0E00               	movlw	0
  3108  00265C  0100               	movlb	0	; () banked
  3109  00265E  6FDD               	movwf	(_nout+1)& (0+255),b
  3110  002660  0E00               	movlw	0
  3111  002662  6FDC               	movwf	_nout& (0+255),b
  3112                           
  3113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3114  002664  D013               	goto	l3178
  3115  002666                     l3176:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3119  002666  C0A0  F08E         	movff	vfprintf@fp,vfpfcnvrt@fp
  3120  00266A  C0A1  F08F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3121  00266E  0EA6               	movlw	low vfprintf@cfmt
  3122  002670  6F90               	movwf	vfpfcnvrt@fmt& (0+255),b
  3123  002672  0E00               	movlw	high vfprintf@cfmt
  3124  002674  6F91               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3125  002676  C0A4  F092         	movff	vfprintf@ap,vfpfcnvrt@ap
  3126  00267A  C0A5  F093         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3127  00267E  ECA3  F00C         	call	_vfpfcnvrt	;wreg free
  3128  002682  0100               	movlb	0	; () banked
  3129  002684  518E               	movf	?_vfpfcnvrt& (0+255),w,b
  3130  002686  27DC               	addwf	_nout& (0+255),f,b
  3131  002688  518F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3132  00268A  23DD               	addwfc	(_nout+1)& (0+255),f,b
  3133  00268C                     l3178:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3137  00268C  C0A6  FFF6         	movff	vfprintf@cfmt,tblptrl
  3138  002690  C0A7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3139  002694                     	if	0	;tblptru may be non-zero
  3140  002694                     	endif
  3141  002694                     	if	0	;tblptru may be non-zero
  3142  002694                     	endif
  3143  002694  0008               	tblrd		*
  3144  002696  50F5               	movf	tablat,w,c
  3145  002698  0900               	iorlw	0
  3146  00269A  A4D8               	btfss	status,2,c
  3147  00269C  D7E4               	goto	l3176
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3151  00269E  C0DC  F0A0         	movff	_nout,?_vfprintf
  3152  0026A2  C0DD  F0A1         	movff	_nout+1,?_vfprintf+1
  3153                           
  3154                           ; BSR set to: 0
  3155  0026A6  0012               	return		;funcret
  3156  0026A8                     __end_of_vfprintf:
  3157                           	opt callstack 0
  3158                           
  3159 ;; *************** function _vfpfcnvrt *****************
  3160 ;; Defined at:
  3161 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
  3164 ;;		 -> sprintf@f(6), 
  3165 ;;  fmt             2   48[BANK0 ] PTR PTR unsigned char 
  3166 ;;		 -> vfprintf@cfmt(2), 
  3167 ;;  ap              2   50[BANK0 ] PTR PTR void 
  3168 ;;		 -> sprintf@ap(2), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  ll              8   54[BANK0 ] long long 
  3171 ;;  llu             8    0        unsigned long long 
  3172 ;;  f               4    0        unsigned long long 
  3173 ;;  vp              3    0        PTR void 
  3174 ;;  ct              3    0        unsigned char [3]
  3175 ;;  cp              2   62[BANK0 ] PTR unsigned char 
  3176 ;;		 -> ?_sprintf(2), NULL(0), RX_buffer(500), 
  3177 ;;  i               2    0        int 
  3178 ;;  done            2    0        int 
  3179 ;;  c               1    0        unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2   46[BANK0 ] int 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         0       6       0       0       0       0       0       0       0
  3190 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3192 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3193 ;;Total ram usage:       18 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    8
  3196 ;; This function calls:
  3197 ;;		_dtoa
  3198 ;;		_fputc
  3199 ;;		_stoa
  3200 ;; This function is called by:
  3201 ;;		_vfprintf
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text15
  3206  001946                     __ptext15:
  3207                           	opt callstack 0
  3208  001946                     _vfpfcnvrt:
  3209                           	opt callstack 19
  3210                           
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;incstack = 0
  3215  001946  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3216  00194A  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3217  00194E  CFDE FFF6          	movff	postinc2,tblptrl
  3218  001952  CFDD FFF7          	movff	postdec2,tblptrh
  3219  001956                     	if	0	;tblptru may be non-zero
  3220  001956                     	endif
  3221  001956                     	if	0	;tblptru may be non-zero
  3222  001956                     	endif
  3223  001956  0008               	tblrd		*
  3224  001958  50F5               	movf	tablat,w,c
  3225  00195A  0A25               	xorlw	37
  3226  00195C  A4D8               	btfss	status,2,c
  3227  00195E  D0D3               	goto	l3114
  3228                           
  3229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3230  001960  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3231  001964  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3232  001968  2ADE               	incf	postinc2,f,c
  3233  00196A  0E00               	movlw	0
  3234  00196C  22DD               	addwfc	postdec2,f,c
  3235                           
  3236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3237  00196E  0E00               	movlw	0
  3238  001970  6E32               	movwf	_width+1,c
  3239  001972  0E00               	movlw	0
  3240  001974  6E31               	movwf	_width,c
  3241  001976  C031  F035         	movff	_width,_flags
  3242  00197A  C032  F036         	movff	_width+1,_flags+1
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3245  00197E  6833               	setf	_prec,c
  3246  001980  6834               	setf	_prec+1,c
  3247                           
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3249  001982  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3250  001986  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3251  00198A  CFDE FFF6          	movff	postinc2,tblptrl
  3252  00198E  CFDD FFF7          	movff	postdec2,tblptrh
  3253  001992                     	if	0	;tblptru may be non-zero
  3254  001992                     	endif
  3255  001992                     	if	0	;tblptru may be non-zero
  3256  001992                     	endif
  3257  001992  0008               	tblrd		*
  3258  001994  50F5               	movf	tablat,w,c
  3259  001996  0A64               	xorlw	100
  3260  001998  B4D8               	btfsc	status,2,c
  3261  00199A  D00D               	goto	u3490
  3262  00199C  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3263  0019A0  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3264  0019A4  CFDE FFF6          	movff	postinc2,tblptrl
  3265  0019A8  CFDD FFF7          	movff	postdec2,tblptrh
  3266  0019AC                     	if	0	;tblptru may be non-zero
  3267  0019AC                     	endif
  3268  0019AC                     	if	0	;tblptru may be non-zero
  3269  0019AC                     	endif
  3270  0019AC  0008               	tblrd		*
  3271  0019AE  50F5               	movf	tablat,w,c
  3272  0019B0  0A69               	xorlw	105
  3273  0019B2  A4D8               	btfss	status,2,c
  3274  0019B4  D040               	goto	l3090
  3275  0019B6                     u3490:
  3276                           
  3277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3278  0019B6  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3279  0019BA  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3280  0019BE  2ADE               	incf	postinc2,f,c
  3281  0019C0  0E00               	movlw	0
  3282  0019C2  22DD               	addwfc	postdec2,f,c
  3283                           
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3285  0019C4  C092  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3286  0019C8  C093  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3287  0019CC  CFDF F094          	movff	indf2,??_vfpfcnvrt
  3288  0019D0  0E02               	movlw	2
  3289  0019D2  26DE               	addwf	postinc2,f,c
  3290  0019D4  CFDF F095          	movff	indf2,??_vfpfcnvrt+1
  3291  0019D8  0E00               	movlw	0
  3292  0019DA  22DD               	addwfc	postdec2,f,c
  3293  0019DC  C094  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3294  0019E0  C095  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3295  0019E4  CFDE F096          	movff	postinc2,vfpfcnvrt@ll
  3296  0019E8  CFDD F097          	movff	postdec2,vfpfcnvrt@ll+1
  3297  0019EC  0100               	movlb	0	; () banked
  3298  0019EE  0E00               	movlw	0
  3299  0019F0  BF97               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3300  0019F2  0EFF               	movlw	-1
  3301  0019F4  6F98               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3302  0019F6  6F99               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3303  0019F8  6F9A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3304  0019FA  6F9B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3305  0019FC  6F9C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3306  0019FE  6F9D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3310  001A00  C08E  F06A         	movff	vfpfcnvrt@fp,dtoa@fp
  3311  001A04  C08F  F06B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3312  001A08  C096  F06C         	movff	vfpfcnvrt@ll,dtoa@d
  3313  001A0C  C097  F06D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3314  001A10  C098  F06E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3315  001A14  C099  F06F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3316  001A18  C09A  F070         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3317  001A1C  C09B  F071         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3318  001A20  C09C  F072         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3319  001A24  C09D  F073         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3320  001A28  EC62  F00A         	call	_dtoa	;wreg free
  3321  001A2C  C06A  F08E         	movff	?_dtoa,?_vfpfcnvrt
  3322  001A30  C06B  F08F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3323  001A34  0012               	return	
  3324  001A36                     l3090:
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3327  001A36  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3328  001A3A  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3329  001A3E  CFDE FFF6          	movff	postinc2,tblptrl
  3330  001A42  CFDD FFF7          	movff	postdec2,tblptrh
  3331  001A46                     	if	0	;tblptru may be non-zero
  3332  001A46                     	endif
  3333  001A46                     	if	0	;tblptru may be non-zero
  3334  001A46                     	endif
  3335  001A46  0008               	tblrd		*
  3336  001A48  50F5               	movf	tablat,w,c
  3337  001A4A  0A73               	xorlw	115
  3338  001A4C  A4D8               	btfss	status,2,c
  3339  001A4E  D02A               	goto	l3098
  3340                           
  3341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3342  001A50  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3343  001A54  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3344  001A58  2ADE               	incf	postinc2,f,c
  3345  001A5A  0E00               	movlw	0
  3346  001A5C  22DD               	addwfc	postdec2,f,c
  3347                           
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3349  001A5E  C092  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3350  001A62  C093  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3351  001A66  CFDF F094          	movff	indf2,??_vfpfcnvrt
  3352  001A6A  0E02               	movlw	2
  3353  001A6C  26DE               	addwf	postinc2,f,c
  3354  001A6E  CFDF F095          	movff	indf2,??_vfpfcnvrt+1
  3355  001A72  0E00               	movlw	0
  3356  001A74  22DD               	addwfc	postdec2,f,c
  3357  001A76  C094  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3358  001A7A  C095  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3359  001A7E  CFDE F09E          	movff	postinc2,vfpfcnvrt@cp
  3360  001A82  CFDD F09F          	movff	postdec2,vfpfcnvrt@cp+1
  3361                           
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3363  001A86  C08E  F023         	movff	vfpfcnvrt@fp,stoa@fp
  3364  001A8A  C08F  F024         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3365  001A8E  C09E  F025         	movff	vfpfcnvrt@cp,stoa@s
  3366  001A92  C09F  F026         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3367  001A96  EC42  F00E         	call	_stoa	;wreg free
  3368  001A9A  C023  F08E         	movff	?_stoa,?_vfpfcnvrt
  3369  001A9E  C024  F08F         	movff	?_stoa+1,?_vfpfcnvrt+1
  3370  001AA2  0012               	return	
  3371  001AA4                     l3098:
  3372                           
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3374  001AA4  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3375  001AA8  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3376  001AAC  CFDE FFF6          	movff	postinc2,tblptrl
  3377  001AB0  CFDD FFF7          	movff	postdec2,tblptrh
  3378  001AB4                     	if	0	;tblptru may be non-zero
  3379  001AB4                     	endif
  3380  001AB4                     	if	0	;tblptru may be non-zero
  3381  001AB4                     	endif
  3382  001AB4  0008               	tblrd		*
  3383  001AB6  50F5               	movf	tablat,w,c
  3384  001AB8  0A25               	xorlw	37
  3385  001ABA  A4D8               	btfss	status,2,c
  3386  001ABC  D017               	goto	l3108
  3387                           
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3389  001ABE  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3390  001AC2  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3391  001AC6  2ADE               	incf	postinc2,f,c
  3392  001AC8  0E00               	movlw	0
  3393  001ACA  22DD               	addwfc	postdec2,f,c
  3394                           
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3396  001ACC  0E00               	movlw	0
  3397  001ACE  6E1B               	movwf	fputc@c+1,c
  3398  001AD0  0E25               	movlw	37
  3399  001AD2  6E1A               	movwf	fputc@c,c
  3400  001AD4  C08E  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  3401  001AD8  C08F  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3402  001ADC  EC18  F011         	call	_fputc	;wreg free
  3403  001AE0                     l3104:
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3406  001AE0  0E00               	movlw	0
  3407  001AE2  0100               	movlb	0	; () banked
  3408  001AE4  6F8F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3409  001AE6  0E01               	movlw	1
  3410  001AE8  6F8E               	movwf	?_vfpfcnvrt& (0+255),b
  3411  001AEA  0012               	return	
  3412  001AEC                     l3108:
  3413                           
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3415  001AEC  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416  001AF0  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417  001AF4  2ADE               	incf	postinc2,f,c
  3418  001AF6  0E00               	movlw	0
  3419  001AF8  22DD               	addwfc	postdec2,f,c
  3420                           
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3422  001AFA  0E00               	movlw	0
  3423  001AFC  0100               	movlb	0	; () banked
  3424  001AFE  6F8F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3425  001B00  0E00               	movlw	0
  3426  001B02  6F8E               	movwf	?_vfpfcnvrt& (0+255),b
  3427  001B04  0012               	return	
  3428  001B06                     l3114:
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3431  001B06  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3432  001B0A  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3433  001B0E  CFDE FFF6          	movff	postinc2,tblptrl
  3434  001B12  CFDD FFF7          	movff	postdec2,tblptrh
  3435  001B16                     	if	0	;tblptru may be non-zero
  3436  001B16                     	endif
  3437  001B16                     	if	0	;tblptru may be non-zero
  3438  001B16                     	endif
  3439  001B16  0008               	tblrd		*
  3440  001B18  50F5               	movf	tablat,w,c
  3441  001B1A  6E1A               	movwf	fputc@c,c
  3442  001B1C  6A1B               	clrf	fputc@c+1,c
  3443  001B1E  C08E  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  3444  001B22  C08F  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3445  001B26  EC18  F011         	call	_fputc	;wreg free
  3446                           
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3448  001B2A  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3449  001B2E  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3450  001B32  2ADE               	incf	postinc2,f,c
  3451  001B34  0E00               	movlw	0
  3452  001B36  22DD               	addwfc	postdec2,f,c
  3453  001B38  D7D3               	goto	l3104
  3454  001B3A                     __end_of_vfpfcnvrt:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _stoa *****************
  3458 ;; Defined at:
  3459 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  3462 ;;		 -> sprintf@f(6), 
  3463 ;;  s               2   36[COMRAM] PTR unsigned char 
  3464 ;;		 -> ?_sprintf(2), NULL(0), RX_buffer(500), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  3467 ;;  l               2   15[BANK0 ] int 
  3468 ;;  p               2   13[BANK0 ] int 
  3469 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  3470 ;;		 -> ?_sprintf(2), stoa@nuls(7), NULL(0), RX_buffer(500), 
  3471 ;;  w               2    9[BANK0 ] int 
  3472 ;;  i               2    7[BANK0 ] int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  2   34[COMRAM] int 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3482 ;;      Params:         4       0       0       0       0       0       0       0       0
  3483 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3484 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3485 ;;      Totals:         5      17       0       0       0       0       0       0       0
  3486 ;;Total ram usage:       22 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    5
  3489 ;; This function calls:
  3490 ;;		_fputc
  3491 ;;		_strlen
  3492 ;; This function is called by:
  3493 ;;		_vfpfcnvrt
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text16
  3498  001C84                     __ptext16:
  3499                           	opt callstack 0
  3500  001C84                     _stoa:
  3501                           	opt callstack 21
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  3504                           
  3505                           ;incstack = 0
  3506  001C84  EE20  F03D         	lfsr	2,stoa@F1139
  3507  001C88  EE10  F060         	lfsr	1,stoa@nuls
  3508  001C8C  0E06               	movlw	6
  3509  001C8E                     u3351:
  3510  001C8E  CFDB FFE3          	movff	plusw2,plusw1
  3511  001C92  06E8               	decf	wreg,f,c
  3512  001C94  E2FC               	bc	u3351
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  3515  001C96  C025  F06B         	movff	stoa@s,stoa@cp
  3516  001C9A  C026  F06C         	movff	stoa@s+1,stoa@cp+1
  3517                           
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  3519  001C9E  0100               	movlb	0	; () banked
  3520  001CA0  516B               	movf	stoa@cp& (0+255),w,b
  3521  001CA2  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  3522  001CA4  A4D8               	btfss	status,2,c
  3523  001CA6  D004               	goto	l3028
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  3527  001CA8  0E60               	movlw	low stoa@nuls
  3528  001CAA  6F6B               	movwf	stoa@cp& (0+255),b
  3529  001CAC  0E00               	movlw	high stoa@nuls
  3530  001CAE  6F6C               	movwf	(stoa@cp+1)& (0+255),b
  3531  001CB0                     l3028:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  3535  001CB0  C06B  F01A         	movff	stoa@cp,strlen@s
  3536  001CB4  C06C  F01B         	movff	stoa@cp+1,strlen@s+1
  3537  001CB8  ECA3  F013         	call	_strlen	;wreg free
  3538  001CBC  C01A  F06F         	movff	?_strlen,stoa@l
  3539  001CC0  C01B  F070         	movff	?_strlen+1,stoa@l+1
  3540                           
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  3542  001CC4  C033  F06D         	movff	_prec,stoa@p
  3543  001CC8  C034  F06E         	movff	_prec+1,stoa@p+1
  3544                           
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  3546  001CCC  0100               	movlb	0	; () banked
  3547  001CCE  BF6E               	btfsc	(stoa@p+1)& (0+255),7,b
  3548  001CD0  D00E               	goto	l247
  3549                           
  3550                           ; BSR set to: 0
  3551  001CD2  516F               	movf	stoa@l& (0+255),w,b
  3552  001CD4  5D6D               	subwf	stoa@p& (0+255),w,b
  3553  001CD6  516E               	movf	(stoa@p+1)& (0+255),w,b
  3554  001CD8  0A80               	xorlw	128
  3555  001CDA  6E27               	movwf	??_stoa& (0+255),c
  3556  001CDC  5170               	movf	(stoa@l+1)& (0+255),w,b
  3557  001CDE  0A80               	xorlw	128
  3558  001CE0  5827               	subwfb	??_stoa& (0+255),w,c
  3559  001CE2  B0D8               	btfsc	status,0,c
  3560  001CE4  D004               	goto	l247
  3561                           
  3562                           ; BSR set to: 0
  3563  001CE6  C06D  F06F         	movff	stoa@p,stoa@l
  3564  001CEA  C06E  F070         	movff	stoa@p+1,stoa@l+1
  3565  001CEE                     l247:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  3569  001CEE  C06F  F06D         	movff	stoa@l,stoa@p
  3570  001CF2  C070  F06E         	movff	stoa@l+1,stoa@p+1
  3571                           
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  3573  001CF6  C031  F069         	movff	_width,stoa@w
  3574  001CFA  C032  F06A         	movff	_width+1,stoa@w+1
  3575                           
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  3577  001CFE  A035               	btfss	_flags,0,c
  3578  001D00  D00E               	goto	l3042
  3579  001D02  D017               	goto	u3400
  3580  001D04                     l3038:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  3584  001D04  0E00               	movlw	0
  3585  001D06  6E1B               	movwf	fputc@c+1,c
  3586  001D08  0E20               	movlw	32
  3587  001D0A  6E1A               	movwf	fputc@c,c
  3588  001D0C  C023  F01C         	movff	stoa@fp,fputc@fp
  3589  001D10  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  3590  001D14  EC18  F011         	call	_fputc	;wreg free
  3591                           
  3592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  3593  001D18  0100               	movlb	0	; () banked
  3594  001D1A  4B6F               	infsnz	stoa@l& (0+255),f,b
  3595  001D1C  2B70               	incf	(stoa@l+1)& (0+255),f,b
  3596  001D1E                     l3042:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  3600  001D1E  5169               	movf	stoa@w& (0+255),w,b
  3601  001D20  5D6F               	subwf	stoa@l& (0+255),w,b
  3602  001D22  5170               	movf	(stoa@l+1)& (0+255),w,b
  3603  001D24  0A80               	xorlw	128
  3604  001D26  6E27               	movwf	??_stoa& (0+255),c
  3605  001D28  516A               	movf	(stoa@w+1)& (0+255),w,b
  3606  001D2A  0A80               	xorlw	128
  3607  001D2C  5827               	subwfb	??_stoa& (0+255),w,c
  3608  001D2E  A0D8               	btfss	status,0,c
  3609  001D30  D7E9               	goto	l3038
  3610  001D32                     u3400:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  3614  001D32  0E00               	movlw	0
  3615  001D34  6F68               	movwf	(stoa@i+1)& (0+255),b
  3616  001D36  0E00               	movlw	0
  3617  001D38  6F67               	movwf	stoa@i& (0+255),b
  3618                           
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3620  001D3A  D014               	goto	l3052
  3621  001D3C                     l3046:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  3625  001D3C  C06B  FFD9         	movff	stoa@cp,fsr2l
  3626  001D40  C06C  FFDA         	movff	stoa@cp+1,fsr2h
  3627  001D44  50DF               	movf	indf2,w,c
  3628  001D46  6E27               	movwf	??_stoa& (0+255),c
  3629  001D48  5027               	movf	??_stoa,w,c
  3630  001D4A  6E1A               	movwf	fputc@c,c
  3631  001D4C  6A1B               	clrf	fputc@c+1,c
  3632  001D4E  C023  F01C         	movff	stoa@fp,fputc@fp
  3633  001D52  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  3634  001D56  EC18  F011         	call	_fputc	;wreg free
  3635                           
  3636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  3637  001D5A  0100               	movlb	0	; () banked
  3638  001D5C  4B6B               	infsnz	stoa@cp& (0+255),f,b
  3639  001D5E  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  3643  001D60  4B67               	infsnz	stoa@i& (0+255),f,b
  3644  001D62  2B68               	incf	(stoa@i+1)& (0+255),f,b
  3645  001D64                     l3052:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3649  001D64  516D               	movf	stoa@p& (0+255),w,b
  3650  001D66  5D67               	subwf	stoa@i& (0+255),w,b
  3651  001D68  5168               	movf	(stoa@i+1)& (0+255),w,b
  3652  001D6A  0A80               	xorlw	128
  3653  001D6C  6E27               	movwf	??_stoa& (0+255),c
  3654  001D6E  516E               	movf	(stoa@p+1)& (0+255),w,b
  3655  001D70  0A80               	xorlw	128
  3656  001D72  5827               	subwfb	??_stoa& (0+255),w,c
  3657  001D74  A0D8               	btfss	status,0,c
  3658  001D76  D7E2               	goto	l3046
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  3662  001D78  B035               	btfsc	_flags,0,c
  3663  001D7A  D00E               	goto	l3060
  3664  001D7C  D017               	goto	u3430
  3665  001D7E                     l3056:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  3669  001D7E  0E00               	movlw	0
  3670  001D80  6E1B               	movwf	fputc@c+1,c
  3671  001D82  0E20               	movlw	32
  3672  001D84  6E1A               	movwf	fputc@c,c
  3673  001D86  C023  F01C         	movff	stoa@fp,fputc@fp
  3674  001D8A  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  3675  001D8E  EC18  F011         	call	_fputc	;wreg free
  3676                           
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  3678  001D92  0100               	movlb	0	; () banked
  3679  001D94  4B6F               	infsnz	stoa@l& (0+255),f,b
  3680  001D96  2B70               	incf	(stoa@l+1)& (0+255),f,b
  3681  001D98                     l3060:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  3685  001D98  5169               	movf	stoa@w& (0+255),w,b
  3686  001D9A  5D6F               	subwf	stoa@l& (0+255),w,b
  3687  001D9C  5170               	movf	(stoa@l+1)& (0+255),w,b
  3688  001D9E  0A80               	xorlw	128
  3689  001DA0  6E27               	movwf	??_stoa& (0+255),c
  3690  001DA2  516A               	movf	(stoa@w+1)& (0+255),w,b
  3691  001DA4  0A80               	xorlw	128
  3692  001DA6  5827               	subwfb	??_stoa& (0+255),w,c
  3693  001DA8  A0D8               	btfss	status,0,c
  3694  001DAA  D7E9               	goto	l3056
  3695  001DAC                     u3430:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  3699                           
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  3701  001DAC  C06F  F023         	movff	stoa@l,?_stoa
  3702  001DB0  C070  F024         	movff	stoa@l+1,?_stoa+1
  3703                           
  3704                           ; BSR set to: 0
  3705  001DB4  0012               	return		;funcret
  3706  001DB6                     __end_of_stoa:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _dtoa *****************
  3710 ;; Defined at:
  3711 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  3714 ;;		 -> sprintf@f(6), 
  3715 ;;  d               8   12[BANK0 ] long long 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  n               8   36[BANK0 ] long long 
  3718 ;;  i               2   44[BANK0 ] int 
  3719 ;;  s               2   34[BANK0 ] int 
  3720 ;;  w               2   32[BANK0 ] int 
  3721 ;;  p               2   30[BANK0 ] int 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  2   10[BANK0 ] int 
  3724 ;; Registers used:
  3725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3731 ;;      Params:         0      10       0       0       0       0       0       0       0
  3732 ;;      Locals:         0      18       0       0       0       0       0       0       0
  3733 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3734 ;;      Totals:         0      36       0       0       0       0       0       0       0
  3735 ;;Total ram usage:       36 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    7
  3738 ;; This function calls:
  3739 ;;		___aodiv
  3740 ;;		___aomod
  3741 ;;		_abs
  3742 ;;		_pad
  3743 ;; This function is called by:
  3744 ;;		_vfpfcnvrt
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text17
  3749  0014C4                     __ptext17:
  3750                           	opt callstack 0
  3751  0014C4                     _dtoa:
  3752                           	opt callstack 19
  3753                           
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;incstack = 0
  3758  0014C4  C06C  F084         	movff	dtoa@d,dtoa@n
  3759  0014C8  C06D  F085         	movff	dtoa@d+1,dtoa@n+1
  3760  0014CC  C06E  F086         	movff	dtoa@d+2,dtoa@n+2
  3761  0014D0  C06F  F087         	movff	dtoa@d+3,dtoa@n+3
  3762  0014D4  C070  F088         	movff	dtoa@d+4,dtoa@n+4
  3763  0014D8  C071  F089         	movff	dtoa@d+5,dtoa@n+5
  3764  0014DC  C072  F08A         	movff	dtoa@d+6,dtoa@n+6
  3765  0014E0  C073  F08B         	movff	dtoa@d+7,dtoa@n+7
  3766                           
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3768  0014E4  0100               	movlb	0	; () banked
  3769  0014E6  AF8B               	btfss	(dtoa@n+7)& (0+255),7,b
  3770  0014E8  D002               	goto	u3200
  3771  0014EA  0E01               	movlw	1
  3772  0014EC  D001               	goto	u3210
  3773  0014EE                     u3200:
  3774  0014EE  0E00               	movlw	0
  3775  0014F0                     u3210:
  3776  0014F0  6F82               	movwf	dtoa@s& (0+255),b
  3777  0014F2  6B83               	clrf	(dtoa@s+1)& (0+255),b
  3778                           
  3779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3780  0014F4  5182               	movf	dtoa@s& (0+255),w,b
  3781  0014F6  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  3782  0014F8  B4D8               	btfsc	status,2,c
  3783  0014FA  D010               	goto	l2964
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3787  0014FC  1F8B               	comf	(dtoa@n+7)& (0+255),f,b
  3788  0014FE  1F8A               	comf	(dtoa@n+6)& (0+255),f,b
  3789  001500  1F89               	comf	(dtoa@n+5)& (0+255),f,b
  3790  001502  1F88               	comf	(dtoa@n+4)& (0+255),f,b
  3791  001504  1F87               	comf	(dtoa@n+3)& (0+255),f,b
  3792  001506  1F86               	comf	(dtoa@n+2)& (0+255),f,b
  3793  001508  1F85               	comf	(dtoa@n+1)& (0+255),f,b
  3794  00150A  6D84               	negf	dtoa@n& (0+255),b
  3795  00150C  0E00               	movlw	0
  3796  00150E  2385               	addwfc	(dtoa@n+1)& (0+255),f,b
  3797  001510  2386               	addwfc	(dtoa@n+2)& (0+255),f,b
  3798  001512  2387               	addwfc	(dtoa@n+3)& (0+255),f,b
  3799  001514  2388               	addwfc	(dtoa@n+4)& (0+255),f,b
  3800  001516  2389               	addwfc	(dtoa@n+5)& (0+255),f,b
  3801  001518  238A               	addwfc	(dtoa@n+6)& (0+255),f,b
  3802  00151A  238B               	addwfc	(dtoa@n+7)& (0+255),f,b
  3803  00151C                     l2964:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3807  00151C  AE34               	btfss	_prec+1,7,c
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3811  00151E  9235               	bcf	_flags,1,c
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3815  001520  BE34               	btfsc	_prec+1,7,c
  3816  001522  D005               	goto	u3240
  3817  001524  5034               	movf	_prec+1,w,c
  3818  001526  E108               	bnz	l218
  3819  001528  0433               	decf	_prec,w,c
  3820  00152A  B0D8               	btfsc	status,0,c
  3821  00152C  D005               	goto	l218
  3822  00152E                     u3240:
  3823                           
  3824                           ; BSR set to: 0
  3825  00152E  0E00               	movlw	0
  3826  001530  6F7F               	movwf	(dtoa@p+1)& (0+255),b
  3827  001532  0E01               	movlw	1
  3828  001534  6F7E               	movwf	dtoa@p& (0+255),b
  3829  001536  D004               	goto	l220
  3830  001538                     l218:
  3831                           
  3832                           ; BSR set to: 0
  3833  001538  C033  F07E         	movff	_prec,dtoa@p
  3834  00153C  C034  F07F         	movff	_prec+1,dtoa@p+1
  3835  001540                     l220:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3839  001540  C031  F080         	movff	_width,dtoa@w
  3840  001544  C032  F081         	movff	_width+1,dtoa@w+1
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3844  001548  5182               	movf	dtoa@s& (0+255),w,b
  3845  00154A  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  3846  00154C  A4D8               	btfss	status,2,c
  3847  00154E  D002               	goto	u3260
  3848                           
  3849                           ; BSR set to: 0
  3850  001550  A435               	btfss	_flags,2,c
  3851  001552  D003               	goto	l2978
  3852  001554                     u3260:
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3856  001554  0780               	decf	dtoa@w& (0+255),f,b
  3857  001556  A0D8               	btfss	status,0,c
  3858  001558  0781               	decf	(dtoa@w+1)& (0+255),f,b
  3859  00155A                     l2978:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3863  00155A  0E00               	movlw	0
  3864  00155C  6F8D               	movwf	(dtoa@i+1)& (0+255),b
  3865  00155E  0E1F               	movlw	31
  3866  001560  6F8C               	movwf	dtoa@i& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3870  001562  0E00               	movlw	0
  3871  001564  6FFF               	movwf	(_dbuf+31)& (0+255),b
  3872                           
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3874  001566  D07D               	goto	l2992
  3875  001568                     l2982:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3879  001568  078C               	decf	dtoa@i& (0+255),f,b
  3880  00156A  A0D8               	btfss	status,0,c
  3881  00156C  078D               	decf	(dtoa@i+1)& (0+255),f,b
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3885  00156E  0EE0               	movlw	low _dbuf
  3886  001570  258C               	addwf	dtoa@i& (0+255),w,b
  3887  001572  6ED9               	movwf	fsr2l,c
  3888  001574  0E00               	movlw	high _dbuf
  3889  001576  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3890  001578  6EDA               	movwf	fsr2h,c
  3891  00157A  C084  F01A         	movff	dtoa@n,___aomod@dividend
  3892  00157E  C085  F01B         	movff	dtoa@n+1,___aomod@dividend+1
  3893  001582  C086  F01C         	movff	dtoa@n+2,___aomod@dividend+2
  3894  001586  C087  F01D         	movff	dtoa@n+3,___aomod@dividend+3
  3895  00158A  C088  F01E         	movff	dtoa@n+4,___aomod@dividend+4
  3896  00158E  C089  F01F         	movff	dtoa@n+5,___aomod@dividend+5
  3897  001592  C08A  F020         	movff	dtoa@n+6,___aomod@dividend+6
  3898  001596  C08B  F021         	movff	dtoa@n+7,___aomod@dividend+7
  3899  00159A  0E0A               	movlw	10
  3900  00159C  6E22               	movwf	___aomod@divisor,c
  3901  00159E  0E00               	movlw	0
  3902  0015A0  6E23               	movwf	___aomod@divisor+1,c
  3903  0015A2  0E00               	movlw	0
  3904  0015A4  6E24               	movwf	___aomod@divisor+2,c
  3905  0015A6  0E00               	movlw	0
  3906  0015A8  6E25               	movwf	___aomod@divisor+3,c
  3907  0015AA  0E00               	movlw	0
  3908  0015AC  6E26               	movwf	___aomod@divisor+4,c
  3909  0015AE  0E00               	movlw	0
  3910  0015B0  6E27               	movwf	___aomod@divisor+5,c
  3911  0015B2  0E00               	movlw	0
  3912  0015B4  6E28               	movwf	___aomod@divisor+6,c
  3913  0015B6  0E00               	movlw	0
  3914  0015B8  6E29               	movwf	___aomod@divisor+7,c
  3915  0015BA  EC74  F00F         	call	___aomod	;wreg free
  3916  0015BE  C01A  F074         	movff	?___aomod,??_dtoa
  3917  0015C2  C01B  F075         	movff	?___aomod+1,??_dtoa+1
  3918  0015C6  C01C  F076         	movff	?___aomod+2,??_dtoa+2
  3919  0015CA  C01D  F077         	movff	?___aomod+3,??_dtoa+3
  3920  0015CE  C01E  F078         	movff	?___aomod+4,??_dtoa+4
  3921  0015D2  C01F  F079         	movff	?___aomod+5,??_dtoa+5
  3922  0015D6  C020  F07A         	movff	?___aomod+6,??_dtoa+6
  3923  0015DA  C021  F07B         	movff	?___aomod+7,??_dtoa+7
  3924  0015DE  C074  F02C         	movff	??_dtoa,abs@a
  3925  0015E2  C076  F02D         	movff	??_dtoa+2,abs@a+1
  3926  0015E6  EC70  F014         	call	_abs	;wreg free
  3927  0015EA  502C               	movf	?_abs,w,c
  3928  0015EC  0F30               	addlw	48
  3929  0015EE  6EDF               	movwf	indf2,c
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3932  0015F0  0100               	movlb	0	; () banked
  3933  0015F2  077E               	decf	dtoa@p& (0+255),f,b
  3934  0015F4  A0D8               	btfss	status,0,c
  3935  0015F6  077F               	decf	(dtoa@p+1)& (0+255),f,b
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3939  0015F8  0780               	decf	dtoa@w& (0+255),f,b
  3940  0015FA  A0D8               	btfss	status,0,c
  3941  0015FC  0781               	decf	(dtoa@w+1)& (0+255),f,b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3945  0015FE  C084  F01A         	movff	dtoa@n,___aodiv@dividend
  3946  001602  C085  F01B         	movff	dtoa@n+1,___aodiv@dividend+1
  3947  001606  C086  F01C         	movff	dtoa@n+2,___aodiv@dividend+2
  3948  00160A  C087  F01D         	movff	dtoa@n+3,___aodiv@dividend+3
  3949  00160E  C088  F01E         	movff	dtoa@n+4,___aodiv@dividend+4
  3950  001612  C089  F01F         	movff	dtoa@n+5,___aodiv@dividend+5
  3951  001616  C08A  F020         	movff	dtoa@n+6,___aodiv@dividend+6
  3952  00161A  C08B  F021         	movff	dtoa@n+7,___aodiv@dividend+7
  3953  00161E  0E0A               	movlw	10
  3954  001620  6E22               	movwf	___aodiv@divisor,c
  3955  001622  0E00               	movlw	0
  3956  001624  6E23               	movwf	___aodiv@divisor+1,c
  3957  001626  0E00               	movlw	0
  3958  001628  6E24               	movwf	___aodiv@divisor+2,c
  3959  00162A  0E00               	movlw	0
  3960  00162C  6E25               	movwf	___aodiv@divisor+3,c
  3961  00162E  0E00               	movlw	0
  3962  001630  6E26               	movwf	___aodiv@divisor+4,c
  3963  001632  0E00               	movlw	0
  3964  001634  6E27               	movwf	___aodiv@divisor+5,c
  3965  001636  0E00               	movlw	0
  3966  001638  6E28               	movwf	___aodiv@divisor+6,c
  3967  00163A  0E00               	movlw	0
  3968  00163C  6E29               	movwf	___aodiv@divisor+7,c
  3969  00163E  EC9D  F00D         	call	___aodiv	;wreg free
  3970  001642  C01A  F084         	movff	?___aodiv,dtoa@n
  3971  001646  C01B  F085         	movff	?___aodiv+1,dtoa@n+1
  3972  00164A  C01C  F086         	movff	?___aodiv+2,dtoa@n+2
  3973  00164E  C01D  F087         	movff	?___aodiv+3,dtoa@n+3
  3974  001652  C01E  F088         	movff	?___aodiv+4,dtoa@n+4
  3975  001656  C01F  F089         	movff	?___aodiv+5,dtoa@n+5
  3976  00165A  C020  F08A         	movff	?___aodiv+6,dtoa@n+6
  3977  00165E  C021  F08B         	movff	?___aodiv+7,dtoa@n+7
  3978  001662                     l2992:
  3979                           
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3981  001662  0100               	movlb	0	; () banked
  3982  001664  BF8D               	btfsc	(dtoa@i+1)& (0+255),7,b
  3983  001666  D01F               	goto	u3310
  3984  001668  518D               	movf	(dtoa@i+1)& (0+255),w,b
  3985  00166A  E103               	bnz	u3270
  3986  00166C  058C               	decf	dtoa@i& (0+255),w,b
  3987  00166E  A0D8               	btfss	status,0,c
  3988  001670  D01A               	goto	u3310
  3989  001672                     u3270:
  3990                           
  3991                           ; BSR set to: 0
  3992  001672  5184               	movf	dtoa@n& (0+255),w,b
  3993  001674  1185               	iorwf	(dtoa@n+1)& (0+255),w,b
  3994  001676  1186               	iorwf	(dtoa@n+2)& (0+255),w,b
  3995  001678  1187               	iorwf	(dtoa@n+3)& (0+255),w,b
  3996  00167A  1188               	iorwf	(dtoa@n+4)& (0+255),w,b
  3997  00167C  1189               	iorwf	(dtoa@n+5)& (0+255),w,b
  3998  00167E  118A               	iorwf	(dtoa@n+6)& (0+255),w,b
  3999  001680  118B               	iorwf	(dtoa@n+7)& (0+255),w,b
  4000  001682  A4D8               	btfss	status,2,c
  4001  001684  D771               	goto	l2982
  4002                           
  4003                           ; BSR set to: 0
  4004  001686  BF7F               	btfsc	(dtoa@p+1)& (0+255),7,b
  4005  001688  D005               	goto	u3290
  4006  00168A  517F               	movf	(dtoa@p+1)& (0+255),w,b
  4007  00168C  E102               	bnz	u3291
  4008  00168E  057E               	decf	dtoa@p& (0+255),w,b
  4009  001690  B0D8               	btfsc	status,0,c
  4010  001692                     u3291:
  4011  001692  D76A               	goto	l2982
  4012  001694                     u3290:
  4013                           
  4014                           ; BSR set to: 0
  4015  001694  BF81               	btfsc	(dtoa@w+1)& (0+255),7,b
  4016  001696  D007               	goto	u3310
  4017  001698  5181               	movf	(dtoa@w+1)& (0+255),w,b
  4018  00169A  E103               	bnz	u3300
  4019  00169C  0580               	decf	dtoa@w& (0+255),w,b
  4020  00169E  A0D8               	btfss	status,0,c
  4021  0016A0  D002               	goto	u3310
  4022  0016A2                     u3300:
  4023                           
  4024                           ; BSR set to: 0
  4025  0016A2  B235               	btfsc	_flags,1,c
  4026  0016A4  D761               	goto	l2982
  4027  0016A6                     u3310:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4031  0016A6  5182               	movf	dtoa@s& (0+255),w,b
  4032  0016A8  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  4033  0016AA  A4D8               	btfss	status,2,c
  4034  0016AC  D002               	goto	u3330
  4035                           
  4036                           ; BSR set to: 0
  4037  0016AE  A435               	btfss	_flags,2,c
  4038  0016B0  D017               	goto	l3016
  4039  0016B2                     u3330:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4043  0016B2  078C               	decf	dtoa@i& (0+255),f,b
  4044  0016B4  A0D8               	btfss	status,0,c
  4045  0016B6  078D               	decf	(dtoa@i+1)& (0+255),f,b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4049  0016B8  5182               	movf	dtoa@s& (0+255),w,b
  4050  0016BA  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  4051  0016BC  A4D8               	btfss	status,2,c
  4052  0016BE  D004               	goto	l3012
  4053                           
  4054                           ; BSR set to: 0
  4055  0016C0  0E00               	movlw	0
  4056  0016C2  6F7D               	movwf	(_dtoa$1133+1)& (0+255),b
  4057  0016C4  0E2B               	movlw	43
  4058  0016C6  D003               	goto	L3
  4059  0016C8                     l3012:
  4060                           
  4061                           ; BSR set to: 0
  4062  0016C8  0E00               	movlw	0
  4063  0016CA  6F7D               	movwf	(_dtoa$1133+1)& (0+255),b
  4064  0016CC  0E2D               	movlw	45
  4065  0016CE                     L3:
  4066  0016CE  6F7C               	movwf	_dtoa$1133& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069  0016D0  0EE0               	movlw	low _dbuf
  4070  0016D2  258C               	addwf	dtoa@i& (0+255),w,b
  4071  0016D4  6ED9               	movwf	fsr2l,c
  4072  0016D6  0E00               	movlw	high _dbuf
  4073  0016D8  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4074  0016DA  6EDA               	movwf	fsr2h,c
  4075  0016DC  C07C  FFDF         	movff	_dtoa$1133,indf2
  4076  0016E0                     l3016:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4080  0016E0  C06A  F060         	movff	dtoa@fp,pad@fp
  4081  0016E4  C06B  F061         	movff	dtoa@fp+1,pad@fp+1
  4082  0016E8  0EE0               	movlw	low _dbuf
  4083  0016EA  258C               	addwf	dtoa@i& (0+255),w,b
  4084  0016EC  6F62               	movwf	pad@buf& (0+255),b
  4085  0016EE  0E00               	movlw	high _dbuf
  4086  0016F0  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  4087  0016F2  6F63               	movwf	(pad@buf+1)& (0+255),b
  4088  0016F4  C080  F064         	movff	dtoa@w,pad@p
  4089  0016F8  C081  F065         	movff	dtoa@w+1,pad@p+1
  4090  0016FC  EC68  F011         	call	_pad	;wreg free
  4091  001700  C060  F06A         	movff	?_pad,?_dtoa
  4092  001704  C061  F06B         	movff	?_pad+1,?_dtoa+1
  4093  001708  0012               	return		;funcret
  4094  00170A                     __end_of_dtoa:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _pad *****************
  4098 ;; Defined at:
  4099 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4102 ;;		 -> sprintf@f(6), 
  4103 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  4104 ;;		 -> dbuf(32), 
  4105 ;;  p               2    4[BANK0 ] int 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  w               2   44[COMRAM] int 
  4108 ;;  i               2   42[COMRAM] int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2    0[BANK0 ] int 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         0       6       0       0       0       0       0       0       0
  4119 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4120 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         5       6       0       0       0       0       0       0       0
  4122 ;;Total ram usage:       11 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    6
  4125 ;; This function calls:
  4126 ;;		_fputc
  4127 ;;		_fputs
  4128 ;;		_strlen
  4129 ;; This function is called by:
  4130 ;;		_dtoa
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text18
  4135  0022D0                     __ptext18:
  4136                           	opt callstack 0
  4137  0022D0                     _pad:
  4138                           	opt callstack 19
  4139                           
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4141                           
  4142                           ;incstack = 0
  4143  0022D0  A035               	btfss	_flags,0,c
  4144  0022D2  D00A               	goto	l2856
  4145                           
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4147  0022D4  C062  F023         	movff	pad@buf,fputs@s
  4148  0022D8  C063  F024         	movff	pad@buf+1,fputs@s+1
  4149  0022DC  C060  F025         	movff	pad@fp,fputs@fp
  4150  0022E0  C061  F026         	movff	pad@fp+1,fputs@fp+1
  4151  0022E4  EC04  F014         	call	_fputs	;wreg free
  4152  0022E8                     l2856:
  4153                           
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4155  0022E8  0100               	movlb	0	; () banked
  4156  0022EA  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  4157  0022EC  D005               	goto	l2860
  4158                           
  4159                           ; BSR set to: 0
  4160  0022EE  C064  F02D         	movff	pad@p,pad@w
  4161  0022F2  C065  F02E         	movff	pad@p+1,pad@w+1
  4162  0022F6  D004               	goto	l207
  4163  0022F8                     l2860:
  4164                           
  4165                           ; BSR set to: 0
  4166  0022F8  0E00               	movlw	0
  4167  0022FA  6E2E               	movwf	pad@w+1,c
  4168  0022FC  0E00               	movlw	0
  4169  0022FE  6E2D               	movwf	pad@w,c
  4170  002300                     l207:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4174  002300  0E00               	movlw	0
  4175  002302  6E2C               	movwf	pad@i+1,c
  4176  002304  0E00               	movlw	0
  4177  002306  6E2B               	movwf	pad@i,c
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4180  002308  D00C               	goto	l2866
  4181  00230A                     l2862:
  4182                           
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4184  00230A  0E00               	movlw	0
  4185  00230C  6E1B               	movwf	fputc@c+1,c
  4186  00230E  0E20               	movlw	32
  4187  002310  6E1A               	movwf	fputc@c,c
  4188  002312  C060  F01C         	movff	pad@fp,fputc@fp
  4189  002316  C061  F01D         	movff	pad@fp+1,fputc@fp+1
  4190  00231A  EC18  F011         	call	_fputc	;wreg free
  4191                           
  4192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4193  00231E  4A2B               	infsnz	pad@i,f,c
  4194  002320  2A2C               	incf	pad@i+1,f,c
  4195  002322                     l2866:
  4196                           
  4197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4198  002322  502D               	movf	pad@w,w,c
  4199  002324  5C2B               	subwf	pad@i,w,c
  4200  002326  502C               	movf	pad@i+1,w,c
  4201  002328  0A80               	xorlw	128
  4202  00232A  6E2A               	movwf	??_pad& (0+255),c
  4203  00232C  502E               	movf	pad@w+1,w,c
  4204  00232E  0A80               	xorlw	128
  4205  002330  582A               	subwfb	??_pad& (0+255),w,c
  4206  002332  A0D8               	btfss	status,0,c
  4207  002334  D7EA               	goto	l2862
  4208                           
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4210  002336  B035               	btfsc	_flags,0,c
  4211  002338  D00A               	goto	l2870
  4212                           
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4214  00233A  C062  F023         	movff	pad@buf,fputs@s
  4215  00233E  C063  F024         	movff	pad@buf+1,fputs@s+1
  4216  002342  C060  F025         	movff	pad@fp,fputs@fp
  4217  002346  C061  F026         	movff	pad@fp+1,fputs@fp+1
  4218  00234A  EC04  F014         	call	_fputs	;wreg free
  4219  00234E                     l2870:
  4220                           
  4221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4222  00234E  C062  F01A         	movff	pad@buf,strlen@s
  4223  002352  C063  F01B         	movff	pad@buf+1,strlen@s+1
  4224  002356  ECA3  F013         	call	_strlen	;wreg free
  4225  00235A  502D               	movf	pad@w,w,c
  4226  00235C  241A               	addwf	?_strlen,w,c
  4227  00235E  0100               	movlb	0	; () banked
  4228  002360  6F60               	movwf	?_pad& (0+255),b
  4229  002362  502E               	movf	pad@w+1,w,c
  4230  002364  201B               	addwfc	?_strlen+1,w,c
  4231  002366  6F61               	movwf	(?_pad+1)& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234  002368  0012               	return		;funcret
  4235  00236A                     __end_of_pad:
  4236                           	opt callstack 0
  4237                           
  4238 ;; *************** function _fputs *****************
  4239 ;; Defined at:
  4240 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  s               2   34[COMRAM] PTR const unsigned char 
  4243 ;;		 -> dbuf(32), 
  4244 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  4245 ;;		 -> sprintf@f(6), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  i               2   39[COMRAM] int 
  4248 ;;  c               1   38[COMRAM] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2   34[COMRAM] int 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         4       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        7 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    5
  4265 ;; This function calls:
  4266 ;;		_fputc
  4267 ;; This function is called by:
  4268 ;;		_pad
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text19
  4273  002808                     __ptext19:
  4274                           	opt callstack 0
  4275  002808                     _fputs:
  4276                           	opt callstack 19
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  002808  0E00               	movlw	0
  4281  00280A  6E29               	movwf	fputs@i+1,c
  4282  00280C  0E00               	movlw	0
  4283  00280E  6E28               	movwf	fputs@i,c
  4284  002810  D00B               	goto	l2850
  4285  002812                     l2846:
  4286  002812  C027  F01A         	movff	fputs@c,fputc@c
  4287  002816  6A1B               	clrf	fputc@c+1,c
  4288  002818  C025  F01C         	movff	fputs@fp,fputc@fp
  4289  00281C  C026  F01D         	movff	fputs@fp+1,fputc@fp+1
  4290  002820  EC18  F011         	call	_fputc	;wreg free
  4291  002824  4A28               	infsnz	fputs@i,f,c
  4292  002826  2A29               	incf	fputs@i+1,f,c
  4293  002828                     l2850:
  4294  002828  5028               	movf	fputs@i,w,c
  4295  00282A  2423               	addwf	fputs@s,w,c
  4296  00282C  6ED9               	movwf	fsr2l,c
  4297  00282E  5029               	movf	fputs@i+1,w,c
  4298  002830  2024               	addwfc	fputs@s+1,w,c
  4299  002832  6EDA               	movwf	fsr2h,c
  4300  002834  50DF               	movf	indf2,w,c
  4301  002836  6E27               	movwf	fputs@c,c
  4302  002838  5027               	movf	fputs@c,w,c
  4303  00283A  B4D8               	btfsc	status,2,c
  4304  00283C  0012               	return	
  4305  00283E  D7E9               	goto	l2846
  4306  002840                     __end_of_fputs:
  4307                           	opt callstack 0
  4308                           
  4309 ;; *************** function _fputc *****************
  4310 ;; Defined at:
  4311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  c               2   25[COMRAM] int 
  4314 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4315 ;;		 -> sprintf@f(6), 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   25[COMRAM] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         4       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        9 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    4
  4334 ;; This function calls:
  4335 ;;		_putch
  4336 ;; This function is called by:
  4337 ;;		_pad
  4338 ;;		_stoa
  4339 ;;		_vfpfcnvrt
  4340 ;;		_fputs
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text20
  4345  002230                     __ptext20:
  4346                           	opt callstack 0
  4347  002230                     _fputc:
  4348                           	opt callstack 21
  4349                           
  4350                           ;incstack = 0
  4351  002230  501C               	movf	fputc@fp,w,c
  4352  002232  101D               	iorwf	fputc@fp+1,w,c
  4353  002234  B4D8               	btfsc	status,2,c
  4354  002236  D004               	goto	u2960
  4355  002238  501C               	movf	fputc@fp,w,c
  4356  00223A  101D               	iorwf	fputc@fp+1,w,c
  4357  00223C  A4D8               	btfss	status,2,c
  4358  00223E  D004               	goto	l2826
  4359  002240                     u2960:
  4360  002240  501A               	movf	fputc@c,w,c
  4361  002242  EC2D  F015         	call	_putch
  4362  002246  0012               	return	
  4363  002248                     l2826:
  4364  002248  EE20 F004          	lfsr	2,4
  4365  00224C  501C               	movf	fputc@fp,w,c
  4366  00224E  26D9               	addwf	fsr2l,f,c
  4367  002250  501D               	movf	fputc@fp+1,w,c
  4368  002252  22DA               	addwfc	fsr2h,f,c
  4369  002254  50DE               	movf	postinc2,w,c
  4370  002256  10DE               	iorwf	postinc2,w,c
  4371  002258  B4D8               	btfsc	status,2,c
  4372  00225A  D016               	goto	u2980
  4373  00225C  EE20 F004          	lfsr	2,4
  4374  002260  501C               	movf	fputc@fp,w,c
  4375  002262  26D9               	addwf	fsr2l,f,c
  4376  002264  501D               	movf	fputc@fp+1,w,c
  4377  002266  22DA               	addwfc	fsr2h,f,c
  4378  002268  EE10 F002          	lfsr	1,2
  4379  00226C  501C               	movf	fputc@fp,w,c
  4380  00226E  26E1               	addwf	fsr1l,f,c
  4381  002270  501D               	movf	fputc@fp+1,w,c
  4382  002272  22E2               	addwfc	fsr1h,f,c
  4383  002274  50DE               	movf	postinc2,w,c
  4384  002276  5CE6               	subwf	postinc1,w,c
  4385  002278  50E6               	movf	postinc1,w,c
  4386  00227A  0A80               	xorlw	128
  4387  00227C  6E22               	movwf	(??_fputc+4)& (0+255),c
  4388  00227E  50DE               	movf	postinc2,w,c
  4389  002280  0A80               	xorlw	128
  4390  002282  5822               	subwfb	(??_fputc+4)& (0+255),w,c
  4391  002284  B0D8               	btfsc	status,0,c
  4392  002286  0012               	return	
  4393  002288                     u2980:
  4394  002288  EE20 F002          	lfsr	2,2
  4395  00228C  501C               	movf	fputc@fp,w,c
  4396  00228E  26D9               	addwf	fsr2l,f,c
  4397  002290  501D               	movf	fputc@fp+1,w,c
  4398  002292  22DA               	addwfc	fsr2h,f,c
  4399  002294  CFDE F01E          	movff	postinc2,??_fputc
  4400  002298  CFDD F01F          	movff	postdec2,??_fputc+1
  4401  00229C  C01C  FFD9         	movff	fputc@fp,fsr2l
  4402  0022A0  C01D  FFDA         	movff	fputc@fp+1,fsr2h
  4403  0022A4  CFDE F020          	movff	postinc2,??_fputc+2
  4404  0022A8  CFDD F021          	movff	postdec2,??_fputc+3
  4405  0022AC  501E               	movf	??_fputc,w,c
  4406  0022AE  2420               	addwf	??_fputc+2,w,c
  4407  0022B0  6ED9               	movwf	fsr2l,c
  4408  0022B2  501F               	movf	??_fputc+1,w,c
  4409  0022B4  2021               	addwfc	??_fputc+3,w,c
  4410  0022B6  6EDA               	movwf	fsr2h,c
  4411  0022B8  C01A  FFDF         	movff	fputc@c,indf2
  4412  0022BC  EE20 F002          	lfsr	2,2
  4413  0022C0  501C               	movf	fputc@fp,w,c
  4414  0022C2  26D9               	addwf	fsr2l,f,c
  4415  0022C4  501D               	movf	fputc@fp+1,w,c
  4416  0022C6  22DA               	addwfc	fsr2h,f,c
  4417  0022C8  2ADE               	incf	postinc2,f,c
  4418  0022CA  0E00               	movlw	0
  4419  0022CC  22DD               	addwfc	postdec2,f,c
  4420  0022CE  0012               	return		;funcret
  4421  0022D0                     __end_of_fputc:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _putch *****************
  4425 ;; Defined at:
  4426 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  c               1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  c               1    0[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_fputc
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text21
  4455  002A5A                     __ptext21:
  4456                           	opt callstack 0
  4457  002A5A                     _putch:
  4458                           	opt callstack 21
  4459                           
  4460                           ;incstack = 0
  4461  002A5A  0012               	return		;funcret
  4462  002A5C                     __end_of_putch:
  4463                           	opt callstack 0
  4464                           
  4465 ;; *************** function _abs *****************
  4466 ;; Defined at:
  4467 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  a               2   43[COMRAM] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  2   43[COMRAM] int 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4481 ;;      Params:         2       0       0       0       0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4483 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4484 ;;      Totals:         2       2       0       0       0       0       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    3
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_dtoa
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text22
  4496  0028E0                     __ptext22:
  4497                           	opt callstack 0
  4498  0028E0                     _abs:
  4499                           	opt callstack 22
  4500                           
  4501                           ;incstack = 0
  4502  0028E0  BE2D               	btfsc	abs@a+1,7,c
  4503  0028E2  D005               	goto	u3060
  4504  0028E4  502D               	movf	abs@a+1,w,c
  4505  0028E6  E111               	bnz	l954
  4506  0028E8  042C               	decf	abs@a,w,c
  4507  0028EA  B0D8               	btfsc	status,0,c
  4508  0028EC  D00E               	goto	l954
  4509  0028EE                     u3060:
  4510  0028EE  C02C  F060         	movff	abs@a,??_abs
  4511  0028F2  C02D  F061         	movff	abs@a+1,??_abs+1
  4512  0028F6  0100               	movlb	0	; () banked
  4513  0028F8  1F60               	comf	??_abs& (0+255),f,b
  4514  0028FA  1F61               	comf	(??_abs+1)& (0+255),f,b
  4515  0028FC  4B60               	infsnz	??_abs& (0+255),f,b
  4516  0028FE  2B61               	incf	(??_abs+1)& (0+255),f,b
  4517  002900  C060  F02C         	movff	??_abs,?_abs
  4518  002904  C061  F02D         	movff	??_abs+1,?_abs+1
  4519  002908  0012               	return	
  4520  00290A                     l954:
  4521  00290A  C02C  F02C         	movff	abs@a,?_abs
  4522  00290E  C02D  F02D         	movff	abs@a+1,?_abs+1
  4523  002912  0012               	return		;funcret
  4524  002914                     __end_of_abs:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function ___aomod *****************
  4528 ;; Defined at:
  4529 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  dividend        8   25[COMRAM] long long 
  4532 ;;  divisor         8   33[COMRAM] long long 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  sign            1   42[COMRAM] unsigned char 
  4535 ;;  counter         1   41[COMRAM] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  8   25[COMRAM] long long 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4545 ;;      Params:        16       0       0       0       0       0       0       0       0
  4546 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4548 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4549 ;;Total ram usage:       18 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    3
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_dtoa
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text23
  4560  001EE8                     __ptext23:
  4561                           	opt callstack 0
  4562  001EE8                     ___aomod:
  4563                           	opt callstack 22
  4564                           
  4565                           ;incstack = 0
  4566  001EE8  0E00               	movlw	0
  4567  001EEA  6E2B               	movwf	___aomod@sign,c
  4568  001EEC  AE21               	btfss	___aomod@dividend+7,7,c
  4569  001EEE  D012               	goto	l2930
  4570  001EF0  1E21               	comf	___aomod@dividend+7,f,c
  4571  001EF2  1E20               	comf	___aomod@dividend+6,f,c
  4572  001EF4  1E1F               	comf	___aomod@dividend+5,f,c
  4573  001EF6  1E1E               	comf	___aomod@dividend+4,f,c
  4574  001EF8  1E1D               	comf	___aomod@dividend+3,f,c
  4575  001EFA  1E1C               	comf	___aomod@dividend+2,f,c
  4576  001EFC  1E1B               	comf	___aomod@dividend+1,f,c
  4577  001EFE  6C1A               	negf	___aomod@dividend,c
  4578  001F00  0E00               	movlw	0
  4579  001F02  221B               	addwfc	___aomod@dividend+1,f,c
  4580  001F04  221C               	addwfc	___aomod@dividend+2,f,c
  4581  001F06  221D               	addwfc	___aomod@dividend+3,f,c
  4582  001F08  221E               	addwfc	___aomod@dividend+4,f,c
  4583  001F0A  221F               	addwfc	___aomod@dividend+5,f,c
  4584  001F0C  2220               	addwfc	___aomod@dividend+6,f,c
  4585  001F0E  2221               	addwfc	___aomod@dividend+7,f,c
  4586  001F10  0E01               	movlw	1
  4587  001F12  6E2B               	movwf	___aomod@sign,c
  4588  001F14                     l2930:
  4589  001F14  AE29               	btfss	___aomod@divisor+7,7,c
  4590  001F16  D010               	goto	l2934
  4591  001F18  1E29               	comf	___aomod@divisor+7,f,c
  4592  001F1A  1E28               	comf	___aomod@divisor+6,f,c
  4593  001F1C  1E27               	comf	___aomod@divisor+5,f,c
  4594  001F1E  1E26               	comf	___aomod@divisor+4,f,c
  4595  001F20  1E25               	comf	___aomod@divisor+3,f,c
  4596  001F22  1E24               	comf	___aomod@divisor+2,f,c
  4597  001F24  1E23               	comf	___aomod@divisor+1,f,c
  4598  001F26  6C22               	negf	___aomod@divisor,c
  4599  001F28  0E00               	movlw	0
  4600  001F2A  2223               	addwfc	___aomod@divisor+1,f,c
  4601  001F2C  2224               	addwfc	___aomod@divisor+2,f,c
  4602  001F2E  2225               	addwfc	___aomod@divisor+3,f,c
  4603  001F30  2226               	addwfc	___aomod@divisor+4,f,c
  4604  001F32  2227               	addwfc	___aomod@divisor+5,f,c
  4605  001F34  2228               	addwfc	___aomod@divisor+6,f,c
  4606  001F36  2229               	addwfc	___aomod@divisor+7,f,c
  4607  001F38                     l2934:
  4608  001F38  5022               	movf	___aomod@divisor,w,c
  4609  001F3A  1023               	iorwf	___aomod@divisor+1,w,c
  4610  001F3C  1024               	iorwf	___aomod@divisor+2,w,c
  4611  001F3E  1025               	iorwf	___aomod@divisor+3,w,c
  4612  001F40  1026               	iorwf	___aomod@divisor+4,w,c
  4613  001F42  1027               	iorwf	___aomod@divisor+5,w,c
  4614  001F44  1028               	iorwf	___aomod@divisor+6,w,c
  4615  001F46  1029               	iorwf	___aomod@divisor+7,w,c
  4616  001F48  B4D8               	btfsc	status,2,c
  4617  001F4A  D03C               	goto	l2950
  4618  001F4C  0E01               	movlw	1
  4619  001F4E  6E2A               	movwf	___aomod@counter,c
  4620  001F50  D00A               	goto	l2940
  4621  001F52                     l2938:
  4622  001F52  90D8               	bcf	status,0,c
  4623  001F54  3622               	rlcf	___aomod@divisor,f,c
  4624  001F56  3623               	rlcf	___aomod@divisor+1,f,c
  4625  001F58  3624               	rlcf	___aomod@divisor+2,f,c
  4626  001F5A  3625               	rlcf	___aomod@divisor+3,f,c
  4627  001F5C  3626               	rlcf	___aomod@divisor+4,f,c
  4628  001F5E  3627               	rlcf	___aomod@divisor+5,f,c
  4629  001F60  3628               	rlcf	___aomod@divisor+6,f,c
  4630  001F62  3629               	rlcf	___aomod@divisor+7,f,c
  4631  001F64  2A2A               	incf	___aomod@counter,f,c
  4632  001F66                     l2940:
  4633  001F66  AE29               	btfss	___aomod@divisor+7,7,c
  4634  001F68  D7F4               	goto	l2938
  4635  001F6A                     u3170:
  4636  001F6A  5022               	movf	___aomod@divisor,w,c
  4637  001F6C  5C1A               	subwf	___aomod@dividend,w,c
  4638  001F6E  5023               	movf	___aomod@divisor+1,w,c
  4639  001F70  581B               	subwfb	___aomod@dividend+1,w,c
  4640  001F72  5024               	movf	___aomod@divisor+2,w,c
  4641  001F74  581C               	subwfb	___aomod@dividend+2,w,c
  4642  001F76  5025               	movf	___aomod@divisor+3,w,c
  4643  001F78  581D               	subwfb	___aomod@dividend+3,w,c
  4644  001F7A  5026               	movf	___aomod@divisor+4,w,c
  4645  001F7C  581E               	subwfb	___aomod@dividend+4,w,c
  4646  001F7E  5027               	movf	___aomod@divisor+5,w,c
  4647  001F80  581F               	subwfb	___aomod@dividend+5,w,c
  4648  001F82  5028               	movf	___aomod@divisor+6,w,c
  4649  001F84  5820               	subwfb	___aomod@dividend+6,w,c
  4650  001F86  5029               	movf	___aomod@divisor+7,w,c
  4651  001F88  5821               	subwfb	___aomod@dividend+7,w,c
  4652  001F8A  A0D8               	btfss	status,0,c
  4653  001F8C  D010               	goto	l2946
  4654  001F8E  5022               	movf	___aomod@divisor,w,c
  4655  001F90  5E1A               	subwf	___aomod@dividend,f,c
  4656  001F92  5023               	movf	___aomod@divisor+1,w,c
  4657  001F94  5A1B               	subwfb	___aomod@dividend+1,f,c
  4658  001F96  5024               	movf	___aomod@divisor+2,w,c
  4659  001F98  5A1C               	subwfb	___aomod@dividend+2,f,c
  4660  001F9A  5025               	movf	___aomod@divisor+3,w,c
  4661  001F9C  5A1D               	subwfb	___aomod@dividend+3,f,c
  4662  001F9E  5026               	movf	___aomod@divisor+4,w,c
  4663  001FA0  5A1E               	subwfb	___aomod@dividend+4,f,c
  4664  001FA2  5027               	movf	___aomod@divisor+5,w,c
  4665  001FA4  5A1F               	subwfb	___aomod@dividend+5,f,c
  4666  001FA6  5028               	movf	___aomod@divisor+6,w,c
  4667  001FA8  5A20               	subwfb	___aomod@dividend+6,f,c
  4668  001FAA  5029               	movf	___aomod@divisor+7,w,c
  4669  001FAC  5A21               	subwfb	___aomod@dividend+7,f,c
  4670  001FAE                     l2946:
  4671  001FAE  90D8               	bcf	status,0,c
  4672  001FB0  3229               	rrcf	___aomod@divisor+7,f,c
  4673  001FB2  3228               	rrcf	___aomod@divisor+6,f,c
  4674  001FB4  3227               	rrcf	___aomod@divisor+5,f,c
  4675  001FB6  3226               	rrcf	___aomod@divisor+4,f,c
  4676  001FB8  3225               	rrcf	___aomod@divisor+3,f,c
  4677  001FBA  3224               	rrcf	___aomod@divisor+2,f,c
  4678  001FBC  3223               	rrcf	___aomod@divisor+1,f,c
  4679  001FBE  3222               	rrcf	___aomod@divisor,f,c
  4680  001FC0  2E2A               	decfsz	___aomod@counter,f,c
  4681  001FC2  D7D3               	goto	u3170
  4682  001FC4                     l2950:
  4683  001FC4  502B               	movf	___aomod@sign,w,c
  4684  001FC6  B4D8               	btfsc	status,2,c
  4685  001FC8  D010               	goto	l2954
  4686  001FCA  1E21               	comf	___aomod@dividend+7,f,c
  4687  001FCC  1E20               	comf	___aomod@dividend+6,f,c
  4688  001FCE  1E1F               	comf	___aomod@dividend+5,f,c
  4689  001FD0  1E1E               	comf	___aomod@dividend+4,f,c
  4690  001FD2  1E1D               	comf	___aomod@dividend+3,f,c
  4691  001FD4  1E1C               	comf	___aomod@dividend+2,f,c
  4692  001FD6  1E1B               	comf	___aomod@dividend+1,f,c
  4693  001FD8  6C1A               	negf	___aomod@dividend,c
  4694  001FDA  0E00               	movlw	0
  4695  001FDC  221B               	addwfc	___aomod@dividend+1,f,c
  4696  001FDE  221C               	addwfc	___aomod@dividend+2,f,c
  4697  001FE0  221D               	addwfc	___aomod@dividend+3,f,c
  4698  001FE2  221E               	addwfc	___aomod@dividend+4,f,c
  4699  001FE4  221F               	addwfc	___aomod@dividend+5,f,c
  4700  001FE6  2220               	addwfc	___aomod@dividend+6,f,c
  4701  001FE8  2221               	addwfc	___aomod@dividend+7,f,c
  4702  001FEA                     l2954:
  4703  001FEA  C01A  F01A         	movff	___aomod@dividend,?___aomod
  4704  001FEE  C01B  F01B         	movff	___aomod@dividend+1,?___aomod+1
  4705  001FF2  C01C  F01C         	movff	___aomod@dividend+2,?___aomod+2
  4706  001FF6  C01D  F01D         	movff	___aomod@dividend+3,?___aomod+3
  4707  001FFA  C01E  F01E         	movff	___aomod@dividend+4,?___aomod+4
  4708  001FFE  C01F  F01F         	movff	___aomod@dividend+5,?___aomod+5
  4709  002002  C020  F020         	movff	___aomod@dividend+6,?___aomod+6
  4710  002006  C021  F021         	movff	___aomod@dividend+7,?___aomod+7
  4711  00200A  0012               	return		;funcret
  4712  00200C                     __end_of___aomod:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function ___aodiv *****************
  4716 ;; Defined at:
  4717 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  dividend        8   25[COMRAM] long long 
  4720 ;;  divisor         8   33[COMRAM] long long 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  quotient        8    2[BANK0 ] long long 
  4723 ;;  sign            1    1[BANK0 ] unsigned char 
  4724 ;;  counter         1    0[BANK0 ] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  8   25[COMRAM] long long 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4734 ;;      Params:        16       0       0       0       0       0       0       0       0
  4735 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4737 ;;      Totals:        16      10       0       0       0       0       0       0       0
  4738 ;;Total ram usage:       26 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    3
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_dtoa
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text24
  4749  001B3A                     __ptext24:
  4750                           	opt callstack 0
  4751  001B3A                     ___aodiv:
  4752                           	opt callstack 22
  4753                           
  4754                           ;incstack = 0
  4755  001B3A  0E00               	movlw	0
  4756  001B3C  0100               	movlb	0	; () banked
  4757  001B3E  6F61               	movwf	___aodiv@sign& (0+255),b
  4758                           
  4759                           ; BSR set to: 0
  4760  001B40  AE29               	btfss	___aodiv@divisor+7,7,c
  4761  001B42  D012               	goto	l2886
  4762                           
  4763                           ; BSR set to: 0
  4764  001B44  1E29               	comf	___aodiv@divisor+7,f,c
  4765  001B46  1E28               	comf	___aodiv@divisor+6,f,c
  4766  001B48  1E27               	comf	___aodiv@divisor+5,f,c
  4767  001B4A  1E26               	comf	___aodiv@divisor+4,f,c
  4768  001B4C  1E25               	comf	___aodiv@divisor+3,f,c
  4769  001B4E  1E24               	comf	___aodiv@divisor+2,f,c
  4770  001B50  1E23               	comf	___aodiv@divisor+1,f,c
  4771  001B52  6C22               	negf	___aodiv@divisor,c
  4772  001B54  0E00               	movlw	0
  4773  001B56  2223               	addwfc	___aodiv@divisor+1,f,c
  4774  001B58  2224               	addwfc	___aodiv@divisor+2,f,c
  4775  001B5A  2225               	addwfc	___aodiv@divisor+3,f,c
  4776  001B5C  2226               	addwfc	___aodiv@divisor+4,f,c
  4777  001B5E  2227               	addwfc	___aodiv@divisor+5,f,c
  4778  001B60  2228               	addwfc	___aodiv@divisor+6,f,c
  4779  001B62  2229               	addwfc	___aodiv@divisor+7,f,c
  4780                           
  4781                           ; BSR set to: 0
  4782  001B64  0E01               	movlw	1
  4783  001B66  6F61               	movwf	___aodiv@sign& (0+255),b
  4784  001B68                     l2886:
  4785                           
  4786                           ; BSR set to: 0
  4787  001B68  AE21               	btfss	___aodiv@dividend+7,7,c
  4788  001B6A  D012               	goto	l2892
  4789                           
  4790                           ; BSR set to: 0
  4791  001B6C  1E21               	comf	___aodiv@dividend+7,f,c
  4792  001B6E  1E20               	comf	___aodiv@dividend+6,f,c
  4793  001B70  1E1F               	comf	___aodiv@dividend+5,f,c
  4794  001B72  1E1E               	comf	___aodiv@dividend+4,f,c
  4795  001B74  1E1D               	comf	___aodiv@dividend+3,f,c
  4796  001B76  1E1C               	comf	___aodiv@dividend+2,f,c
  4797  001B78  1E1B               	comf	___aodiv@dividend+1,f,c
  4798  001B7A  6C1A               	negf	___aodiv@dividend,c
  4799  001B7C  0E00               	movlw	0
  4800  001B7E  221B               	addwfc	___aodiv@dividend+1,f,c
  4801  001B80  221C               	addwfc	___aodiv@dividend+2,f,c
  4802  001B82  221D               	addwfc	___aodiv@dividend+3,f,c
  4803  001B84  221E               	addwfc	___aodiv@dividend+4,f,c
  4804  001B86  221F               	addwfc	___aodiv@dividend+5,f,c
  4805  001B88  2220               	addwfc	___aodiv@dividend+6,f,c
  4806  001B8A  2221               	addwfc	___aodiv@dividend+7,f,c
  4807                           
  4808                           ; BSR set to: 0
  4809  001B8C  0E01               	movlw	1
  4810  001B8E  1B61               	xorwf	___aodiv@sign& (0+255),f,b
  4811  001B90                     l2892:
  4812                           
  4813                           ; BSR set to: 0
  4814  001B90  EE20  F062         	lfsr	2,___aodiv@quotient
  4815  001B94  0E07               	movlw	7
  4816  001B96                     u3091:
  4817  001B96  6ADE               	clrf	postinc2,c
  4818  001B98  06E8               	decf	wreg,f,c
  4819  001B9A  E2FD               	bc	u3091
  4820                           
  4821                           ; BSR set to: 0
  4822  001B9C  5022               	movf	___aodiv@divisor,w,c
  4823  001B9E  1023               	iorwf	___aodiv@divisor+1,w,c
  4824  001BA0  1024               	iorwf	___aodiv@divisor+2,w,c
  4825  001BA2  1025               	iorwf	___aodiv@divisor+3,w,c
  4826  001BA4  1026               	iorwf	___aodiv@divisor+4,w,c
  4827  001BA6  1027               	iorwf	___aodiv@divisor+5,w,c
  4828  001BA8  1028               	iorwf	___aodiv@divisor+6,w,c
  4829  001BAA  1029               	iorwf	___aodiv@divisor+7,w,c
  4830  001BAC  B4D8               	btfsc	status,2,c
  4831  001BAE  D046               	goto	l2914
  4832                           
  4833                           ; BSR set to: 0
  4834  001BB0  0E01               	movlw	1
  4835  001BB2  6F60               	movwf	___aodiv@counter& (0+255),b
  4836  001BB4  D00A               	goto	l2900
  4837  001BB6                     l2898:
  4838                           
  4839                           ; BSR set to: 0
  4840  001BB6  90D8               	bcf	status,0,c
  4841  001BB8  3622               	rlcf	___aodiv@divisor,f,c
  4842  001BBA  3623               	rlcf	___aodiv@divisor+1,f,c
  4843  001BBC  3624               	rlcf	___aodiv@divisor+2,f,c
  4844  001BBE  3625               	rlcf	___aodiv@divisor+3,f,c
  4845  001BC0  3626               	rlcf	___aodiv@divisor+4,f,c
  4846  001BC2  3627               	rlcf	___aodiv@divisor+5,f,c
  4847  001BC4  3628               	rlcf	___aodiv@divisor+6,f,c
  4848  001BC6  3629               	rlcf	___aodiv@divisor+7,f,c
  4849  001BC8  2B60               	incf	___aodiv@counter& (0+255),f,b
  4850  001BCA                     l2900:
  4851                           
  4852                           ; BSR set to: 0
  4853  001BCA  AE29               	btfss	___aodiv@divisor+7,7,c
  4854  001BCC  D7F4               	goto	l2898
  4855  001BCE                     u3110:
  4856                           
  4857                           ; BSR set to: 0
  4858  001BCE  90D8               	bcf	status,0,c
  4859  001BD0  3762               	rlcf	___aodiv@quotient& (0+255),f,b
  4860  001BD2  3763               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4861  001BD4  3764               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4862  001BD6  3765               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4863  001BD8  3766               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4864  001BDA  3767               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4865  001BDC  3768               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4866  001BDE  3769               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4867                           
  4868                           ; BSR set to: 0
  4869  001BE0  5022               	movf	___aodiv@divisor,w,c
  4870  001BE2  5C1A               	subwf	___aodiv@dividend,w,c
  4871  001BE4  5023               	movf	___aodiv@divisor+1,w,c
  4872  001BE6  581B               	subwfb	___aodiv@dividend+1,w,c
  4873  001BE8  5024               	movf	___aodiv@divisor+2,w,c
  4874  001BEA  581C               	subwfb	___aodiv@dividend+2,w,c
  4875  001BEC  5025               	movf	___aodiv@divisor+3,w,c
  4876  001BEE  581D               	subwfb	___aodiv@dividend+3,w,c
  4877  001BF0  5026               	movf	___aodiv@divisor+4,w,c
  4878  001BF2  581E               	subwfb	___aodiv@dividend+4,w,c
  4879  001BF4  5027               	movf	___aodiv@divisor+5,w,c
  4880  001BF6  581F               	subwfb	___aodiv@dividend+5,w,c
  4881  001BF8  5028               	movf	___aodiv@divisor+6,w,c
  4882  001BFA  5820               	subwfb	___aodiv@dividend+6,w,c
  4883  001BFC  5029               	movf	___aodiv@divisor+7,w,c
  4884  001BFE  5821               	subwfb	___aodiv@dividend+7,w,c
  4885  001C00  A0D8               	btfss	status,0,c
  4886  001C02  D011               	goto	l2910
  4887                           
  4888                           ; BSR set to: 0
  4889  001C04  5022               	movf	___aodiv@divisor,w,c
  4890  001C06  5E1A               	subwf	___aodiv@dividend,f,c
  4891  001C08  5023               	movf	___aodiv@divisor+1,w,c
  4892  001C0A  5A1B               	subwfb	___aodiv@dividend+1,f,c
  4893  001C0C  5024               	movf	___aodiv@divisor+2,w,c
  4894  001C0E  5A1C               	subwfb	___aodiv@dividend+2,f,c
  4895  001C10  5025               	movf	___aodiv@divisor+3,w,c
  4896  001C12  5A1D               	subwfb	___aodiv@dividend+3,f,c
  4897  001C14  5026               	movf	___aodiv@divisor+4,w,c
  4898  001C16  5A1E               	subwfb	___aodiv@dividend+4,f,c
  4899  001C18  5027               	movf	___aodiv@divisor+5,w,c
  4900  001C1A  5A1F               	subwfb	___aodiv@dividend+5,f,c
  4901  001C1C  5028               	movf	___aodiv@divisor+6,w,c
  4902  001C1E  5A20               	subwfb	___aodiv@dividend+6,f,c
  4903  001C20  5029               	movf	___aodiv@divisor+7,w,c
  4904  001C22  5A21               	subwfb	___aodiv@dividend+7,f,c
  4905                           
  4906                           ; BSR set to: 0
  4907  001C24  8162               	bsf	___aodiv@quotient& (0+255),0,b
  4908  001C26                     l2910:
  4909                           
  4910                           ; BSR set to: 0
  4911  001C26  90D8               	bcf	status,0,c
  4912  001C28  3229               	rrcf	___aodiv@divisor+7,f,c
  4913  001C2A  3228               	rrcf	___aodiv@divisor+6,f,c
  4914  001C2C  3227               	rrcf	___aodiv@divisor+5,f,c
  4915  001C2E  3226               	rrcf	___aodiv@divisor+4,f,c
  4916  001C30  3225               	rrcf	___aodiv@divisor+3,f,c
  4917  001C32  3224               	rrcf	___aodiv@divisor+2,f,c
  4918  001C34  3223               	rrcf	___aodiv@divisor+1,f,c
  4919  001C36  3222               	rrcf	___aodiv@divisor,f,c
  4920                           
  4921                           ; BSR set to: 0
  4922  001C38  2F60               	decfsz	___aodiv@counter& (0+255),f,b
  4923  001C3A  D7C9               	goto	u3110
  4924  001C3C                     l2914:
  4925                           
  4926                           ; BSR set to: 0
  4927  001C3C  5161               	movf	___aodiv@sign& (0+255),w,b
  4928  001C3E  B4D8               	btfsc	status,2,c
  4929  001C40  D010               	goto	l2918
  4930                           
  4931                           ; BSR set to: 0
  4932  001C42  1F69               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4933  001C44  1F68               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4934  001C46  1F67               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4935  001C48  1F66               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4936  001C4A  1F65               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4937  001C4C  1F64               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4938  001C4E  1F63               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4939  001C50  6D62               	negf	___aodiv@quotient& (0+255),b
  4940  001C52  0E00               	movlw	0
  4941  001C54  2363               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4942  001C56  2364               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4943  001C58  2365               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4944  001C5A  2366               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4945  001C5C  2367               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4946  001C5E  2368               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4947  001C60  2369               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4948  001C62                     l2918:
  4949                           
  4950                           ; BSR set to: 0
  4951  001C62  C062  F01A         	movff	___aodiv@quotient,?___aodiv
  4952  001C66  C063  F01B         	movff	___aodiv@quotient+1,?___aodiv+1
  4953  001C6A  C064  F01C         	movff	___aodiv@quotient+2,?___aodiv+2
  4954  001C6E  C065  F01D         	movff	___aodiv@quotient+3,?___aodiv+3
  4955  001C72  C066  F01E         	movff	___aodiv@quotient+4,?___aodiv+4
  4956  001C76  C067  F01F         	movff	___aodiv@quotient+5,?___aodiv+5
  4957  001C7A  C068  F020         	movff	___aodiv@quotient+6,?___aodiv+6
  4958  001C7E  C069  F021         	movff	___aodiv@quotient+7,?___aodiv+7
  4959                           
  4960                           ; BSR set to: 0
  4961  001C82  0012               	return		;funcret
  4962  001C84                     __end_of___aodiv:
  4963                           	opt callstack 0
  4964                           
  4965 ;; *************** function _memset *****************
  4966 ;; Defined at:
  4967 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  dest            2   29[COMRAM] PTR void 
  4970 ;;		 -> RX_buffer(500), 
  4971 ;;  c               2   31[COMRAM] int 
  4972 ;;  n               2   33[COMRAM] unsigned int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  s               2   39[COMRAM] PTR unsigned char 
  4975 ;;		 -> RX_buffer(500), 
  4976 ;;  k               2   37[COMRAM] unsigned int 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2   29[COMRAM] PTR void 
  4979 ;; Registers used:
  4980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4986 ;;      Params:         6       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4989 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:       12 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    3
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_packetHandler
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text25
  5001  001DB6                     __ptext25:
  5002                           	opt callstack 0
  5003  001DB6                     _memset:
  5004                           	opt callstack 26
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;incstack = 0
  5008  001DB6  C01E  F028         	movff	memset@dest,memset@s
  5009  001DBA  C01F  F029         	movff	memset@dest+1,memset@s+1
  5010  001DBE  5022               	movf	memset@n,w,c
  5011  001DC0  1023               	iorwf	memset@n+1,w,c
  5012  001DC2  B4D8               	btfsc	status,2,c
  5013  001DC4  0012               	return	
  5014  001DC6  C028  FFD9         	movff	memset@s,fsr2l
  5015  001DCA  C029  FFDA         	movff	memset@s+1,fsr2h
  5016  001DCE  C020  FFDF         	movff	memset@c,indf2
  5017  001DD2  5022               	movf	memset@n,w,c
  5018  001DD4  2428               	addwf	memset@s,w,c
  5019  001DD6  6E24               	movwf	??_memset& (0+255),c
  5020  001DD8  5023               	movf	memset@n+1,w,c
  5021  001DDA  2029               	addwfc	memset@s+1,w,c
  5022  001DDC  6E25               	movwf	(??_memset+1)& (0+255),c
  5023  001DDE  0EFF               	movlw	255
  5024  001DE0  2424               	addwf	??_memset,w,c
  5025  001DE2  6ED9               	movwf	fsr2l,c
  5026  001DE4  0EFF               	movlw	255
  5027  001DE6  2025               	addwfc	??_memset+1,w,c
  5028  001DE8  6EDA               	movwf	fsr2h,c
  5029  001DEA  C020  FFDF         	movff	memset@c,indf2
  5030  001DEE  5023               	movf	memset@n+1,w,c
  5031  001DF0  E104               	bnz	l3414
  5032  001DF2  0E03               	movlw	3
  5033  001DF4  5C22               	subwf	memset@n,w,c
  5034  001DF6  A0D8               	btfss	status,0,c
  5035  001DF8  0012               	return	
  5036  001DFA                     l3414:
  5037  001DFA  EE20 F001          	lfsr	2,1
  5038  001DFE  5028               	movf	memset@s,w,c
  5039  001E00  26D9               	addwf	fsr2l,f,c
  5040  001E02  5029               	movf	memset@s+1,w,c
  5041  001E04  22DA               	addwfc	fsr2h,f,c
  5042  001E06  C020  FFDF         	movff	memset@c,indf2
  5043  001E0A  EE20 F002          	lfsr	2,2
  5044  001E0E  5028               	movf	memset@s,w,c
  5045  001E10  26D9               	addwf	fsr2l,f,c
  5046  001E12  5029               	movf	memset@s+1,w,c
  5047  001E14  22DA               	addwfc	fsr2h,f,c
  5048  001E16  C020  FFDF         	movff	memset@c,indf2
  5049  001E1A  5022               	movf	memset@n,w,c
  5050  001E1C  2428               	addwf	memset@s,w,c
  5051  001E1E  6E24               	movwf	??_memset& (0+255),c
  5052  001E20  5023               	movf	memset@n+1,w,c
  5053  001E22  2029               	addwfc	memset@s+1,w,c
  5054  001E24  6E25               	movwf	(??_memset+1)& (0+255),c
  5055  001E26  0EFE               	movlw	254
  5056  001E28  2424               	addwf	??_memset,w,c
  5057  001E2A  6ED9               	movwf	fsr2l,c
  5058  001E2C  0EFF               	movlw	255
  5059  001E2E  2025               	addwfc	??_memset+1,w,c
  5060  001E30  6EDA               	movwf	fsr2h,c
  5061  001E32  C020  FFDF         	movff	memset@c,indf2
  5062  001E36  5022               	movf	memset@n,w,c
  5063  001E38  2428               	addwf	memset@s,w,c
  5064  001E3A  6E24               	movwf	??_memset& (0+255),c
  5065  001E3C  5023               	movf	memset@n+1,w,c
  5066  001E3E  2029               	addwfc	memset@s+1,w,c
  5067  001E40  6E25               	movwf	(??_memset+1)& (0+255),c
  5068  001E42  0EFD               	movlw	253
  5069  001E44  2424               	addwf	??_memset,w,c
  5070  001E46  6ED9               	movwf	fsr2l,c
  5071  001E48  0EFF               	movlw	255
  5072  001E4A  2025               	addwfc	??_memset+1,w,c
  5073  001E4C  6EDA               	movwf	fsr2h,c
  5074  001E4E  C020  FFDF         	movff	memset@c,indf2
  5075  001E52  5023               	movf	memset@n+1,w,c
  5076  001E54  E104               	bnz	l3420
  5077  001E56  0E07               	movlw	7
  5078  001E58  5C22               	subwf	memset@n,w,c
  5079  001E5A  A0D8               	btfss	status,0,c
  5080  001E5C  0012               	return	
  5081  001E5E                     l3420:
  5082  001E5E  EE20 F003          	lfsr	2,3
  5083  001E62  5028               	movf	memset@s,w,c
  5084  001E64  26D9               	addwf	fsr2l,f,c
  5085  001E66  5029               	movf	memset@s+1,w,c
  5086  001E68  22DA               	addwfc	fsr2h,f,c
  5087  001E6A  C020  FFDF         	movff	memset@c,indf2
  5088  001E6E  5022               	movf	memset@n,w,c
  5089  001E70  2428               	addwf	memset@s,w,c
  5090  001E72  6E24               	movwf	??_memset& (0+255),c
  5091  001E74  5023               	movf	memset@n+1,w,c
  5092  001E76  2029               	addwfc	memset@s+1,w,c
  5093  001E78  6E25               	movwf	(??_memset+1)& (0+255),c
  5094  001E7A  0EFC               	movlw	252
  5095  001E7C  2424               	addwf	??_memset,w,c
  5096  001E7E  6ED9               	movwf	fsr2l,c
  5097  001E80  0EFF               	movlw	255
  5098  001E82  2025               	addwfc	??_memset+1,w,c
  5099  001E84  6EDA               	movwf	fsr2h,c
  5100  001E86  C020  FFDF         	movff	memset@c,indf2
  5101  001E8A  5023               	movf	memset@n+1,w,c
  5102  001E8C  E104               	bnz	l3426
  5103  001E8E  0E09               	movlw	9
  5104  001E90  5C22               	subwf	memset@n,w,c
  5105  001E92  A0D8               	btfss	status,0,c
  5106  001E94  0012               	return	
  5107  001E96                     l3426:
  5108  001E96  C028  F024         	movff	memset@s,??_memset
  5109  001E9A  C029  F025         	movff	memset@s+1,??_memset+1
  5110  001E9E  1E24               	comf	??_memset,f,c
  5111  001EA0  1E25               	comf	??_memset+1,f,c
  5112  001EA2  4A24               	infsnz	??_memset,f,c
  5113  001EA4  2A25               	incf	??_memset+1,f,c
  5114  001EA6  0E03               	movlw	3
  5115  001EA8  1424               	andwf	??_memset,w,c
  5116  001EAA  6E26               	movwf	memset@k,c
  5117  001EAC  6A27               	clrf	memset@k+1,c
  5118  001EAE  5026               	movf	memset@k,w,c
  5119  001EB0  2628               	addwf	memset@s,f,c
  5120  001EB2  5027               	movf	memset@k+1,w,c
  5121  001EB4  2229               	addwfc	memset@s+1,f,c
  5122  001EB6  5026               	movf	memset@k,w,c
  5123  001EB8  5E22               	subwf	memset@n,f,c
  5124  001EBA  5027               	movf	memset@k+1,w,c
  5125  001EBC  5A23               	subwfb	memset@n+1,f,c
  5126  001EBE  0EFC               	movlw	252
  5127  001EC0  1622               	andwf	memset@n,f,c
  5128  001EC2  0EFF               	movlw	255
  5129  001EC4  1623               	andwf	memset@n+1,f,c
  5130  001EC6  D00B               	goto	l3434
  5131  001EC8                     l3428:
  5132  001EC8  C028  FFD9         	movff	memset@s,fsr2l
  5133  001ECC  C029  FFDA         	movff	memset@s+1,fsr2h
  5134  001ED0  C020  FFDF         	movff	memset@c,indf2
  5135  001ED4  0622               	decf	memset@n,f,c
  5136  001ED6  A0D8               	btfss	status,0,c
  5137  001ED8  0623               	decf	memset@n+1,f,c
  5138  001EDA  4A28               	infsnz	memset@s,f,c
  5139  001EDC  2A29               	incf	memset@s+1,f,c
  5140  001EDE                     l3434:
  5141  001EDE  5022               	movf	memset@n,w,c
  5142  001EE0  1023               	iorwf	memset@n+1,w,c
  5143  001EE2  B4D8               	btfsc	status,2,c
  5144  001EE4  0012               	return	
  5145  001EE6  D7F0               	goto	l3428
  5146  001EE8                     __end_of_memset:
  5147                           	opt callstack 0
  5148                           
  5149 ;; *************** function _RN4870_changeName *****************
  5150 ;; Defined at:
  5151 ;;		line 163 in file "main_ble.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  name            2   37[COMRAM] PTR unsigned char 
  5154 ;;		 -> name(50), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      unsigned char 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5166 ;;      Params:         2       0       0       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5168 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5169 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5170 ;;Total ram usage:        3 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    5
  5173 ;; This function calls:
  5174 ;;		_UART_Write_String
  5175 ;; This function is called by:
  5176 ;;		_packetHandler
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text26
  5181  00200C                     __ptext26:
  5182                           	opt callstack 0
  5183  00200C                     _RN4870_changeName:
  5184                           	opt callstack 24
  5185                           
  5186                           ;main_ble.c: 164:     UART_RN4870_mode = 1;
  5187                           
  5188                           ;incstack = 0
  5189  00200C  0E01               	movlw	1
  5190  00200E  6E44               	movwf	_UART_RN4870_mode,c
  5191                           
  5192                           ;main_ble.c: 166:     UART_Write_String("$$$");
  5193  002010  0E9C               	movlw	low STR_2
  5194  002012  6E1E               	movwf	UART_Write_String@buffer,c
  5195  002014  0E11               	movlw	high STR_2
  5196  002016  6E1F               	movwf	UART_Write_String@buffer+1,c
  5197  002018  ECCA  F012         	call	_UART_Write_String	;wreg free
  5198                           
  5199                           ;main_ble.c: 167:     expected = "CMD";
  5200  00201C  0EA4               	movlw	low STR_3
  5201  00201E  6E39               	movwf	_expected,c
  5202  002020  0E11               	movlw	high STR_3
  5203  002022  6E3A               	movwf	_expected+1,c
  5204                           
  5205                           ;main_ble.c: 168:     while(!UART_RX){
  5206  002024  D02A               	goto	l3380
  5207  002026                     l3372:
  5208                           
  5209                           ;main_ble.c: 169:         if(PORTCbits.RC0 != og && debug){
  5210  002026  A082               	btfss	3970,0,c	;volatile
  5211  002028  D002               	goto	u4080
  5212  00202A  0E01               	movlw	1
  5213  00202C  D001               	goto	u4086
  5214  00202E                     u4080:
  5215  00202E  0E00               	movlw	0
  5216  002030                     u4086:
  5217  002030  1845               	xorwf	_og,w,c
  5218  002032  B4D8               	btfsc	status,2,c
  5219  002034  D022               	goto	l3380
  5220  002036  503B               	movf	_debug,w,c
  5221  002038  B4D8               	btfsc	status,2,c
  5222  00203A  D01F               	goto	l3380
  5223                           
  5224                           ;main_ble.c: 170:             UART_Write_String(RX_buffer);
  5225  00203C  0E97               	movlw	low _RX_buffer
  5226  00203E  6E1E               	movwf	UART_Write_String@buffer,c
  5227  002040  0E01               	movlw	high _RX_buffer
  5228  002042  6E1F               	movwf	UART_Write_String@buffer+1,c
  5229  002044  ECCA  F012         	call	_UART_Write_String	;wreg free
  5230                           
  5231                           ;main_ble.c: 171:             UART_Write_String("!=");
  5232  002048  0EB0               	movlw	low STR_4
  5233  00204A  6E1E               	movwf	UART_Write_String@buffer,c
  5234  00204C  0E11               	movlw	high STR_4
  5235  00204E  6E1F               	movwf	UART_Write_String@buffer+1,c
  5236  002050  ECCA  F012         	call	_UART_Write_String	;wreg free
  5237                           
  5238                           ;main_ble.c: 172:             UART_Write_String(expected);
  5239  002054  C039  F01E         	movff	_expected,UART_Write_String@buffer
  5240  002058  C03A  F01F         	movff	_expected+1,UART_Write_String@buffer+1
  5241  00205C  ECCA  F012         	call	_UART_Write_String	;wreg free
  5242                           
  5243                           ;main_ble.c: 173:             UART_Write_String("|");
  5244  002060  0EB3               	movlw	low STR_5
  5245  002062  6E1E               	movwf	UART_Write_String@buffer,c
  5246  002064  0E11               	movlw	high STR_5
  5247  002066  6E1F               	movwf	UART_Write_String@buffer+1,c
  5248  002068  ECCA  F012         	call	_UART_Write_String	;wreg free
  5249                           
  5250                           ;main_ble.c: 174:             _delay(100000);
  5251  00206C  0E82               	movlw	130
  5252  00206E  6E28               	movwf	??_RN4870_changeName& (0+255),c
  5253  002070  0EDE               	movlw	222
  5254  002072                     u4397:
  5255  002072  2EE8               	decfsz	wreg,f,c
  5256  002074  D7FE               	bra	u4397
  5257  002076  2E28               	decfsz	??_RN4870_changeName& (0+255),f,c
  5258  002078  D7FC               	bra	u4397
  5259  00207A                     l3380:
  5260                           
  5261                           ;main_ble.c: 168:     while(!UART_RX){
  5262  00207A  503C               	movf	_UART_RX,w,c
  5263  00207C  B4D8               	btfsc	status,2,c
  5264  00207E  D7D3               	goto	l3372
  5265                           
  5266                           ;main_ble.c: 178:     UART_Write_String("SS,C0\r");
  5267  002080  0E86               	movlw	low STR_6
  5268  002082  6E1E               	movwf	UART_Write_String@buffer,c
  5269  002084  0E11               	movlw	high STR_6
  5270  002086  6E1F               	movwf	UART_Write_String@buffer+1,c
  5271  002088  ECCA  F012         	call	_UART_Write_String	;wreg free
  5272                           
  5273                           ;main_ble.c: 179:     expected = "AOK";
  5274  00208C  0EA8               	movlw	low STR_7
  5275  00208E  6E39               	movwf	_expected,c
  5276  002090  0E11               	movlw	high STR_7
  5277  002092  6E3A               	movwf	_expected+1,c
  5278  002094                     l3386:
  5279  002094  503C               	movf	_UART_RX,w,c
  5280  002096  B4D8               	btfsc	status,2,c
  5281  002098  D7FD               	goto	l3386
  5282                           
  5283                           ;main_ble.c: 182:     UART_Write_String("S-,");
  5284  00209A  0EA0               	movlw	low STR_8
  5285  00209C  6E1E               	movwf	UART_Write_String@buffer,c
  5286  00209E  0E11               	movlw	high STR_8
  5287  0020A0  6E1F               	movwf	UART_Write_String@buffer+1,c
  5288  0020A2  ECCA  F012         	call	_UART_Write_String	;wreg free
  5289                           
  5290                           ;main_ble.c: 183:     UART_Write_String(name);
  5291  0020A6  C026  F01E         	movff	RN4870_changeName@name,UART_Write_String@buffer
  5292  0020AA  C027  F01F         	movff	RN4870_changeName@name+1,UART_Write_String@buffer+1
  5293  0020AE  ECCA  F012         	call	_UART_Write_String	;wreg free
  5294                           
  5295                           ;main_ble.c: 184:     UART_Write_String("\r");
  5296  0020B2  0E8B               	movlw	low (STR_6+5)
  5297  0020B4  6E1E               	movwf	UART_Write_String@buffer,c
  5298  0020B6  0E11               	movlw	high (STR_6+5)
  5299  0020B8  6E1F               	movwf	UART_Write_String@buffer+1,c
  5300  0020BA  ECCA  F012         	call	_UART_Write_String	;wreg free
  5301                           
  5302                           ;main_ble.c: 185:     expected = "AOK";
  5303  0020BE  0EA8               	movlw	low STR_7
  5304  0020C0  6E39               	movwf	_expected,c
  5305  0020C2  0E11               	movlw	high STR_7
  5306  0020C4  6E3A               	movwf	_expected+1,c
  5307  0020C6                     l3392:
  5308  0020C6  503C               	movf	_UART_RX,w,c
  5309  0020C8  B4D8               	btfsc	status,2,c
  5310  0020CA  D7FD               	goto	l3392
  5311                           
  5312                           ;main_ble.c: 188:     UART_Write_String("R,1\r");
  5313  0020CC  0E8D               	movlw	low STR_11
  5314  0020CE  6E1E               	movwf	UART_Write_String@buffer,c
  5315  0020D0  0E11               	movlw	high STR_11
  5316  0020D2  6E1F               	movwf	UART_Write_String@buffer+1,c
  5317  0020D4  ECCA  F012         	call	_UART_Write_String	;wreg free
  5318                           
  5319                           ;main_ble.c: 189:     expected = "Rebooting";
  5320  0020D8  0E6E               	movlw	low STR_12
  5321  0020DA  6E39               	movwf	_expected,c
  5322  0020DC  0E11               	movlw	high STR_12
  5323  0020DE  6E3A               	movwf	_expected+1,c
  5324  0020E0                     l3398:
  5325  0020E0  503C               	movf	_UART_RX,w,c
  5326  0020E2  B4D8               	btfsc	status,2,c
  5327  0020E4  D7FD               	goto	l3398
  5328                           
  5329                           ;main_ble.c: 192:     UART_RN4870_mode = 0;
  5330  0020E6  0E00               	movlw	0
  5331  0020E8  6E44               	movwf	_UART_RN4870_mode,c
  5332  0020EA  0012               	return		;funcret
  5333  0020EC                     __end_of_RN4870_changeName:
  5334                           	opt callstack 0
  5335                           
  5336 ;; *************** function _UART_Write_String *****************
  5337 ;; Defined at:
  5338 ;;		line 156 in file "main_ble.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  buffer          2   29[COMRAM] PTR unsigned char 
  5341 ;;		 -> packetHandler@answer_1087(50), name(50), packetHandler@answer_1080(50), packetHandler@answer(20), 
  5342 ;;		 -> STR_16(16), STR_14(7), STR_12(10), STR_11(5), 
  5343 ;;		 -> STR_10(4), STR_9(2), STR_8(4), STR_7(4), 
  5344 ;;		 -> STR_6(7), STR_5(2), STR_4(3), STR_3(4), 
  5345 ;;		 -> STR_2(4), STR_1(7), NULL(0), RX_buffer(500), 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  i               2   33[COMRAM] int 
  5348 ;;  size            2   35[COMRAM] volatile int 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5358 ;;      Params:         2       0       0       0       0       0       0       0       0
  5359 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5360 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5361 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5362 ;;Total ram usage:        8 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    4
  5365 ;; This function calls:
  5366 ;;		_UART_Write
  5367 ;;		_strlen
  5368 ;; This function is called by:
  5369 ;;		_main
  5370 ;;		_RN4870_changeName
  5371 ;;		_packetHandler
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text27
  5376  002594                     __ptext27:
  5377                           	opt callstack 0
  5378  002594                     _UART_Write_String:
  5379                           	opt callstack 25
  5380                           
  5381                           ;main_ble.c: 157:     volatile int size = strlen(buffer);
  5382                           
  5383                           ;incstack = 0
  5384  002594  C01E  F01A         	movff	UART_Write_String@buffer,strlen@s
  5385  002598  C01F  F01B         	movff	UART_Write_String@buffer+1,strlen@s+1
  5386  00259C  ECA3  F013         	call	_strlen	;wreg free
  5387  0025A0  C01A  F024         	movff	?_strlen,UART_Write_String@size	;volatile
  5388  0025A4  C01B  F025         	movff	?_strlen+1,UART_Write_String@size+1	;volatile
  5389                           
  5390                           ;main_ble.c: 158:     for(int i = 0 ; i < size ; i++){
  5391  0025A8  0E00               	movlw	0
  5392  0025AA  6E23               	movwf	UART_Write_String@i+1,c
  5393  0025AC  0E00               	movlw	0
  5394  0025AE  6E22               	movwf	UART_Write_String@i,c
  5395  0025B0  D01A               	goto	l3170
  5396  0025B2                     l3166:
  5397                           
  5398                           ;main_ble.c: 159:       UART_Write(buffer[i]);
  5399  0025B2  5022               	movf	UART_Write_String@i,w,c
  5400  0025B4  241E               	addwf	UART_Write_String@buffer,w,c
  5401  0025B6  6E20               	movwf	??_UART_Write_String& (0+255),c
  5402  0025B8  5023               	movf	UART_Write_String@i+1,w,c
  5403  0025BA  201F               	addwfc	UART_Write_String@buffer+1,w,c
  5404  0025BC  6E21               	movwf	(??_UART_Write_String+1)& (0+255),c
  5405  0025BE  C020  FFF6         	movff	??_UART_Write_String,tblptrl
  5406  0025C2  C021  FFF7         	movff	??_UART_Write_String+1,tblptrh
  5407  0025C6  6AF8               	clrf	tblptru,c
  5408  0025C8  0E07               	movlw	(high __ramtop+-1)
  5409  0025CA  64F7               	cpfsgt	tblptrh,c
  5410  0025CC  D003               	bra	u3637
  5411  0025CE  0008               	tblrd		*
  5412  0025D0  50F5               	movf	tablat,w,c
  5413  0025D2  D005               	bra	u3630
  5414  0025D4                     u3637:
  5415  0025D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5416  0025D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5417  0025DC  50E7               	movf	indf1,w,c
  5418  0025DE                     u3630:
  5419  0025DE  EC1C  F015         	call	_UART_Write
  5420                           
  5421                           ;main_ble.c: 160:     }
  5422  0025E2  4A22               	infsnz	UART_Write_String@i,f,c
  5423  0025E4  2A23               	incf	UART_Write_String@i+1,f,c
  5424  0025E6                     l3170:
  5425  0025E6  5024               	movf	UART_Write_String@size,w,c	;volatile
  5426  0025E8  5C22               	subwf	UART_Write_String@i,w,c
  5427  0025EA  5023               	movf	UART_Write_String@i+1,w,c
  5428  0025EC  0A80               	xorlw	128
  5429  0025EE  6E20               	movwf	??_UART_Write_String& (0+255),c
  5430  0025F0  5025               	movf	UART_Write_String@size+1,w,c	;volatile
  5431  0025F2  0A80               	xorlw	128
  5432  0025F4  5820               	subwfb	??_UART_Write_String& (0+255),w,c
  5433  0025F6  B0D8               	btfsc	status,0,c
  5434  0025F8  0012               	return	
  5435  0025FA  D7DB               	goto	l3166
  5436  0025FC                     __end_of_UART_Write_String:
  5437                           	opt callstack 0
  5438                           
  5439 ;; *************** function _strlen *****************
  5440 ;; Defined at:
  5441 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5444 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1087(50), 
  5445 ;;		 -> name(50), STR_25(12), STR_24(12), STR_23(12), 
  5446 ;;		 -> packetHandler@answer_1080(50), STR_21(10), STR_20(10), STR_19(10), 
  5447 ;;		 -> packetHandler@answer(20), STR_17(5), STR_16(16), STR_15(12), 
  5448 ;;		 -> STR_14(7), STR_13(4), STR_12(10), STR_11(5), 
  5449 ;;		 -> STR_10(4), STR_9(2), STR_8(4), STR_7(4), 
  5450 ;;		 -> STR_6(7), STR_5(2), STR_4(3), STR_3(4), 
  5451 ;;		 -> STR_2(4), STR_1(7), NULL(0), RX_buffer(500), 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  a               2   27[COMRAM] PTR const unsigned char 
  5454 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1087(50), 
  5455 ;;		 -> name(50), STR_25(12), STR_24(12), STR_23(12), 
  5456 ;;		 -> packetHandler@answer_1080(50), STR_21(10), STR_20(10), STR_19(10), 
  5457 ;;		 -> packetHandler@answer(20), STR_17(5), STR_16(16), STR_15(12), 
  5458 ;;		 -> STR_14(7), STR_13(4), STR_12(10), STR_11(5), 
  5459 ;;		 -> STR_10(4), STR_9(2), STR_8(4), STR_7(4), 
  5460 ;;		 -> STR_6(7), STR_5(2), STR_4(3), STR_3(4), 
  5461 ;;		 -> STR_2(4), STR_1(7), NULL(0), RX_buffer(500), 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  2   25[COMRAM] unsigned int 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5471 ;;      Params:         2       0       0       0       0       0       0       0       0
  5472 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5474 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5475 ;;Total ram usage:        4 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    3
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_UART_Write_String
  5482 ;;		_packetHandler
  5483 ;;		_pad
  5484 ;;		_stoa
  5485 ;;		_strstr
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text28
  5490  002746                     __ptext28:
  5491                           	opt callstack 0
  5492  002746                     _strlen:
  5493                           	opt callstack 25
  5494                           
  5495                           ;incstack = 0
  5496  002746  C01A  F01C         	movff	strlen@s,strlen@a
  5497  00274A  C01B  F01D         	movff	strlen@s+1,strlen@a+1
  5498  00274E  D002               	goto	l2838
  5499  002750                     l2836:
  5500  002750  4A1A               	infsnz	strlen@s,f,c
  5501  002752  2A1B               	incf	strlen@s+1,f,c
  5502  002754                     l2838:
  5503  002754  C01A  FFF6         	movff	strlen@s,tblptrl
  5504  002758  C01B  FFF7         	movff	strlen@s+1,tblptrh
  5505  00275C  6AF8               	clrf	tblptru,c
  5506  00275E  0E07               	movlw	(high __ramtop+-1)
  5507  002760  64F7               	cpfsgt	tblptrh,c
  5508  002762  D003               	bra	u2997
  5509  002764  0008               	tblrd		*
  5510  002766  50F5               	movf	tablat,w,c
  5511  002768  D005               	bra	u2990
  5512  00276A                     u2997:
  5513  00276A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5514  00276E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5515  002772  50E7               	movf	indf1,w,c
  5516  002774                     u2990:
  5517  002774  0900               	iorlw	0
  5518  002776  A4D8               	btfss	status,2,c
  5519  002778  D7EB               	goto	l2836
  5520  00277A  501C               	movf	strlen@a,w,c
  5521  00277C  5C1A               	subwf	strlen@s,w,c
  5522  00277E  6E1A               	movwf	?_strlen,c
  5523  002780  501D               	movf	strlen@a+1,w,c
  5524  002782  581B               	subwfb	strlen@s+1,w,c
  5525  002784  6E1B               	movwf	?_strlen+1,c
  5526  002786  0012               	return		;funcret
  5527  002788                     __end_of_strlen:
  5528                           	opt callstack 0
  5529                           
  5530 ;; *************** function _UART_Write *****************
  5531 ;; Defined at:
  5532 ;;		line 148 in file "main_ble.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  data            1    wreg     unsigned char 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  data            1   25[COMRAM] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0
  5547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5549 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5550 ;;Total ram usage:        1 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    3
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_UART_Write_String
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text29
  5561  002A38                     __ptext29:
  5562                           	opt callstack 0
  5563  002A38                     _UART_Write:
  5564                           	opt callstack 25
  5565                           
  5566                           ;incstack = 0
  5567                           ;UART_Write@data stored from wreg
  5568  002A38  6E1A               	movwf	UART_Write@data,c
  5569  002A3A                     
  5570                           ;main_ble.c: 151:     while(!TXSTA1bits.TRMT);
  5571  002A3A  A2AC               	btfss	4012,1,c	;volatile
  5572  002A3C  D7FE               	goto	l3066
  5573                           
  5574                           ;main_ble.c: 152:     TXREG1 = data;
  5575  002A3E  C01A  FFAD         	movff	UART_Write@data,4013	;volatile
  5576                           
  5577                           ;main_ble.c: 153:     UART_RX = 0;
  5578  002A42  0E00               	movlw	0
  5579  002A44  6E3C               	movwf	_UART_RX,c
  5580  002A46  0012               	return		;funcret
  5581  002A48                     __end_of_UART_Write:
  5582                           	opt callstack 0
  5583                           
  5584 ;; *************** function _UART_Init *****************
  5585 ;; Defined at:
  5586 ;;		line 112 in file "main_ble.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    3
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_main
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text30
  5615  002A02                     __ptext30:
  5616                           	opt callstack 0
  5617  002A02                     _UART_Init:
  5618                           	opt callstack 27
  5619                           
  5620                           ;main_ble.c: 113:     TXSTA1bits.SYNC = 0;
  5621                           
  5622                           ;incstack = 0
  5623  002A02  98AC               	bcf	4012,4,c	;volatile
  5624                           
  5625                           ;main_ble.c: 114:     RCSTA1bits.SPEN = 1;
  5626  002A04  8EAB               	bsf	4011,7,c	;volatile
  5627                           
  5628                           ;main_ble.c: 120:   TXSTA1bits.BRGH = 1;
  5629  002A06  84AC               	bsf	4012,2,c	;volatile
  5630                           
  5631                           ;main_ble.c: 121:   BAUDCON1bits.BRG16 = 0;
  5632  002A08  96B8               	bcf	4024,3,c	;volatile
  5633                           
  5634                           ;main_ble.c: 122:   SPBRG1 = 25;
  5635  002A0A  0E19               	movlw	25
  5636  002A0C  6EAF               	movwf	4015,c	;volatile
  5637                           
  5638                           ;main_ble.c: 129:     TRISCbits.RC6 = 1;
  5639  002A0E  8C94               	bsf	3988,6,c	;volatile
  5640                           
  5641                           ;main_ble.c: 130:     TRISCbits.RC7 = 1;
  5642  002A10  8E94               	bsf	3988,7,c	;volatile
  5643                           
  5644                           ;main_ble.c: 133:     INTCONbits.GIE = 0;
  5645  002A12  9EF2               	bcf	4082,7,c	;volatile
  5646                           
  5647                           ;main_ble.c: 134:     RCONbits.IPEN = 1;
  5648  002A14  8ED0               	bsf	4048,7,c	;volatile
  5649                           
  5650                           ;main_ble.c: 135:     PIE1bits.RCIE = 1;
  5651  002A16  8A9D               	bsf	3997,5,c	;volatile
  5652                           
  5653                           ;main_ble.c: 136:     IPR1bits.RCIP = 1;
  5654  002A18  8A9F               	bsf	3999,5,c	;volatile
  5655                           
  5656                           ;main_ble.c: 138:     RCSTA1bits.CREN = 1;
  5657  002A1A  88AB               	bsf	4011,4,c	;volatile
  5658                           
  5659                           ;main_ble.c: 141:     PIR1bits.RCIF = 0;
  5660  002A1C  9A9E               	bcf	3998,5,c	;volatile
  5661                           
  5662                           ;main_ble.c: 142:     PIR1bits.TXIF = 0;
  5663  002A1E  989E               	bcf	3998,4,c	;volatile
  5664                           
  5665                           ;main_ble.c: 144:     TXSTA1bits.TXEN = 1;
  5666  002A20  8AAC               	bsf	4012,5,c	;volatile
  5667                           
  5668                           ;main_ble.c: 145:     INTCONbits.GIE = 1;
  5669  002A22  8EF2               	bsf	4082,7,c	;volatile
  5670  002A24  0012               	return		;funcret
  5671  002A26                     __end_of_UART_Init:
  5672                           	opt callstack 0
  5673                           
  5674 ;; *************** function _SYSTEM_Initialize *****************
  5675 ;; Defined at:
  5676 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    4
  5697 ;; This function calls:
  5698 ;;		_OSCILLATOR_Initialize
  5699 ;;		_PIN_MANAGER_Initialize
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text31
  5706  002A48                     __ptext31:
  5707                           	opt callstack 0
  5708  002A48                     _SYSTEM_Initialize:
  5709                           	opt callstack 26
  5710                           
  5711                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5712                           
  5713                           ;incstack = 0
  5714  002A48  ECEC  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  5715                           
  5716                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5717  002A4C  EC13  F015         	call	_OSCILLATOR_Initialize	;wreg free
  5718  002A50  0012               	return		;funcret
  5719  002A52                     __end_of_SYSTEM_Initialize:
  5720                           	opt callstack 0
  5721                           
  5722 ;; *************** function _PIN_MANAGER_Initialize *****************
  5723 ;; Defined at:
  5724 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5742 ;;Total ram usage:        0 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    3
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_SYSTEM_Initialize
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text32
  5753  0029D8                     __ptext32:
  5754                           	opt callstack 0
  5755  0029D8                     _PIN_MANAGER_Initialize:
  5756                           	opt callstack 26
  5757                           
  5758                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5759                           
  5760                           ;incstack = 0
  5761  0029D8  0E00               	movlw	0
  5762  0029DA  6E89               	movwf	3977,c	;volatile
  5763                           
  5764                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5765  0029DC  0E00               	movlw	0
  5766  0029DE  6E8A               	movwf	3978,c	;volatile
  5767                           
  5768                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5769  0029E0  0E00               	movlw	0
  5770  0029E2  6E8B               	movwf	3979,c	;volatile
  5771                           
  5772                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5773  0029E4  6892               	setf	3986,c	;volatile
  5774                           
  5775                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5776  0029E6  6893               	setf	3987,c	;volatile
  5777                           
  5778                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xC7;
  5779  0029E8  0EC7               	movlw	199
  5780  0029EA  6E94               	movwf	3988,c	;volatile
  5781                           
  5782                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  5783  0029EC  0E00               	movlw	0
  5784  0029EE  010F               	movlb	15	; () banked
  5785  0029F0  6F5D               	movwf	93,b	;volatile
  5786                           
  5787                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  5788  0029F2  0E00               	movlw	0
  5789  0029F4  6F5C               	movwf	92,b	;volatile
  5790                           
  5791                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  5792  0029F6  0E00               	movlw	0
  5793  0029F8  6F5B               	movwf	91,b	;volatile
  5794                           
  5795                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5796  0029FA  0E00               	movlw	0
  5797  0029FC  6E85               	movwf	3973,c	;volatile
  5798                           
  5799                           ; BSR set to: 15
  5800                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5801  0029FE  8EF1               	bsf	4081,7,c	;volatile
  5802                           
  5803                           ; BSR set to: 15
  5804  002A00  0012               	return		;funcret
  5805  002A02                     __end_of_PIN_MANAGER_Initialize:
  5806                           	opt callstack 0
  5807                           
  5808 ;; *************** function _OSCILLATOR_Initialize *****************
  5809 ;; Defined at:
  5810 ;;		line 57 in file "mcc_generated_files/mcc.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5827 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5828 ;;Total ram usage:        0 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    3
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_SYSTEM_Initialize
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text33
  5839  002A26                     __ptext33:
  5840                           	opt callstack 0
  5841  002A26                     _OSCILLATOR_Initialize:
  5842                           	opt callstack 26
  5843                           
  5844                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x70;
  5845                           
  5846                           ; BSR set to: 15
  5847                           ;incstack = 0
  5848  002A26  0E70               	movlw	112
  5849  002A28  6ED3               	movwf	4051,c	;volatile
  5850                           
  5851                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x90;
  5852  002A2A  0E90               	movlw	144
  5853  002A2C  6ED2               	movwf	4050,c	;volatile
  5854                           
  5855                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x80;
  5856  002A2E  0E80               	movlw	128
  5857  002A30  6E9B               	movwf	3995,c	;volatile
  5858                           
  5859                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
  5860  002A32  0E00               	movlw	0
  5861  002A34  6EB5               	movwf	4021,c	;volatile
  5862  002A36  0012               	return		;funcret
  5863  002A38                     __end_of_OSCILLATOR_Initialize:
  5864                           	opt callstack 0
  5865                           
  5866 ;; *************** function _high_ISR *****************
  5867 ;; Defined at:
  5868 ;;		line 50 in file "main_ble.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5884 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5885 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5886 ;;Total ram usage:        8 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    2
  5889 ;; This function calls:
  5890 ;;		i2_strstr
  5891 ;; This function is called by:
  5892 ;;		Interrupt level 2
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	intcode
  5897  001008                     __pintcode:
  5898                           	opt callstack 0
  5899  001008                     _high_ISR:
  5900                           	opt callstack 19
  5901                           
  5902                           ;incstack = 0
  5903  001008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5904  00100A  CFE1 F012          	movff	fsr1l,??_high_ISR
  5905  00100E  CFE2 F013          	movff	fsr1h,??_high_ISR+1
  5906  001012  CFD9 F014          	movff	fsr2l,??_high_ISR+2
  5907  001016  CFDA F015          	movff	fsr2h,??_high_ISR+3
  5908  00101A  CFF6 F016          	movff	tblptrl,??_high_ISR+4
  5909  00101E  CFF7 F017          	movff	tblptrh,??_high_ISR+5
  5910  001022  CFF8 F018          	movff	tblptru,??_high_ISR+6
  5911  001026  CFF5 F019          	movff	tablat,??_high_ISR+7
  5912                           
  5913                           ;main_ble.c: 52:    if (PIR1bits.RCIF == 1){
  5914  00102A  AA9E               	btfss	3998,5,c	;volatile
  5915  00102C  D024               	goto	i2l129
  5916                           
  5917                           ;main_ble.c: 53:         if(debug){
  5918  00102E  503B               	movf	_debug,w,c
  5919  001030  A4D8               	btfss	status,2,c
  5920                           
  5921                           ;main_ble.c: 54:            LATAbits.LA1 = 1;
  5922  001032  8289               	bsf	3977,1,c	;volatile
  5923                           
  5924                           ;main_ble.c: 56:         RX_buffer[ix] = RCREG1;
  5925  001034  0E97               	movlw	low _RX_buffer
  5926  001036  2437               	addwf	_ix,w,c
  5927  001038  6ED9               	movwf	fsr2l,c
  5928  00103A  0E01               	movlw	high _RX_buffer
  5929  00103C  2038               	addwfc	_ix+1,w,c
  5930  00103E  6EDA               	movwf	fsr2h,c
  5931  001040  CFAE FFDF          	movff	4014,indf2	;volatile
  5932                           
  5933                           ;main_ble.c: 57:         ix++;
  5934  001044  4A37               	infsnz	_ix,f,c
  5935  001046  2A38               	incf	_ix+1,f,c
  5936                           
  5937                           ;main_ble.c: 63:         if(UART_RN4870_mode){
  5938  001048  5044               	movf	_UART_RN4870_mode,w,c
  5939  00104A  B4D8               	btfsc	status,2,c
  5940  00104C  D014               	goto	i2l129
  5941                           
  5942                           ;main_ble.c: 64:             if(strstr(RX_buffer,expected)!=((void*)0)){
  5943  00104E  0E97               	movlw	low _RX_buffer
  5944  001050  6E0C               	movwf	i2strstr@h,c
  5945  001052  0E01               	movlw	high _RX_buffer
  5946  001054  6E0D               	movwf	i2strstr@h+1,c
  5947  001056  C039  F00E         	movff	_expected,i2strstr@n
  5948  00105A  C03A  F00F         	movff	_expected+1,i2strstr@n+1
  5949  00105E  ECFF  F011         	call	i2_strstr	;wreg free
  5950  001062  500C               	movf	?i2_strstr,w,c
  5951  001064  100D               	iorwf	?i2_strstr+1,w,c
  5952  001066  B4D8               	btfsc	status,2,c
  5953  001068  D006               	goto	i2l129
  5954                           
  5955                           ;main_ble.c: 65:                 UART_RX = 1;
  5956  00106A  0E01               	movlw	1
  5957  00106C  6E3C               	movwf	_UART_RX,c
  5958                           
  5959                           ;main_ble.c: 66:                 ix = 0;
  5960  00106E  0E00               	movlw	0
  5961  001070  6E38               	movwf	_ix+1,c
  5962  001072  0E00               	movlw	0
  5963  001074  6E37               	movwf	_ix,c
  5964  001076                     i2l129:
  5965  001076  C019  FFF5         	movff	??_high_ISR+7,tablat
  5966  00107A  C018  FFF8         	movff	??_high_ISR+6,tblptru
  5967  00107E  C017  FFF7         	movff	??_high_ISR+5,tblptrh
  5968  001082  C016  FFF6         	movff	??_high_ISR+4,tblptrl
  5969  001086  C015  FFDA         	movff	??_high_ISR+3,fsr2h
  5970  00108A  C014  FFD9         	movff	??_high_ISR+2,fsr2l
  5971  00108E  C013  FFE2         	movff	??_high_ISR+1,fsr1h
  5972  001092  C012  FFE1         	movff	??_high_ISR,fsr1l
  5973  001096  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5974  001098  0011               	retfie		f
  5975  00109A                     __end_of_high_ISR:
  5976                           	opt callstack 0
  5977                           
  5978 ;; *************** function i2_strstr *****************
  5979 ;; Defined at:
  5980 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strstr.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  h               2   11[COMRAM] PTR const unsigned char 
  5983 ;;		 -> NULL(0), RX_buffer(500), 
  5984 ;;  n               2   13[COMRAM] PTR const unsigned char 
  5985 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  5986 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  5987 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  strstr          2   15[COMRAM] unsigned int 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2   11[COMRAM] PTR unsigned char 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5999 ;;      Params:         4       0       0       0       0       0       0       0       0
  6000 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6002 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6003 ;;Total ram usage:        6 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    1
  6006 ;; This function calls:
  6007 ;;		i2_strchr
  6008 ;;		i2_strlen
  6009 ;;		i2_strncmp
  6010 ;; This function is called by:
  6011 ;;		_high_ISR
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text35
  6016  0023FE                     __ptext35:
  6017                           	opt callstack 0
  6018  0023FE                     i2_strstr:
  6019                           	opt callstack 19
  6020                           
  6021                           ;incstack = 0
  6022  0023FE  500E               	movf	i2strstr@n,w,c
  6023  002400  100F               	iorwf	i2strstr@n+1,w,c
  6024  002402  B4D8               	btfsc	status,2,c
  6025  002404  D041               	goto	i2u430_40
  6026  002406  C00E  F001         	movff	i2strstr@n,i2strlen@s
  6027  00240A  C00F  F002         	movff	i2strstr@n+1,i2strlen@s+1
  6028  00240E  ECC4  F013         	call	i2_strlen	;wreg free
  6029  002412  C001  F010         	movff	?i2_strlen,i2strstr@nl
  6030  002416  C002  F011         	movff	?i2_strlen+1,i2strstr@nl+1
  6031  00241A  D02B               	goto	i2l3586
  6032  00241C                     i2l3578:
  6033  00241C  C00C  F001         	movff	i2strstr@h,i2strncmp@_l
  6034  002420  C00D  F002         	movff	i2strstr@h+1,i2strncmp@_l+1
  6035  002424  C00E  F003         	movff	i2strstr@n,i2strncmp@_r
  6036  002428  C00F  F004         	movff	i2strstr@n+1,i2strncmp@_r+1
  6037  00242C  C010  F005         	movff	i2strstr@nl,i2strncmp@n
  6038  002430  C011  F006         	movff	i2strstr@nl+1,i2strncmp@n+1
  6039  002434  ECC7  F010         	call	i2_strncmp	;wreg free
  6040  002438  5001               	movf	?i2_strncmp,w,c
  6041  00243A  1002               	iorwf	?i2_strncmp+1,w,c
  6042  00243C  A4D8               	btfss	status,2,c
  6043  00243E  D005               	goto	i2l3584
  6044  002440  C00C  F00C         	movff	i2strstr@h,?i2_strstr
  6045  002444  C00D  F00D         	movff	i2strstr@h+1,?i2_strstr+1
  6046  002448  0012               	return	
  6047  00244A                     i2l3584:
  6048  00244A  0E01               	movlw	1
  6049  00244C  240C               	addwf	i2strstr@h,w,c
  6050  00244E  6E01               	movwf	i2strchr@s,c
  6051  002450  0E00               	movlw	0
  6052  002452  200D               	addwfc	i2strstr@h+1,w,c
  6053  002454  6E02               	movwf	i2strchr@s+1,c
  6054  002456  C00E  FFF6         	movff	i2strstr@n,tblptrl
  6055  00245A  C00F  FFF7         	movff	i2strstr@n+1,tblptrh
  6056  00245E                     	if	0	;tblptru may be non-zero
  6057  00245E                     	endif
  6058  00245E                     	if	0	;tblptru may be non-zero
  6059  00245E                     	endif
  6060  00245E  0008               	tblrd		*
  6061  002460  50F5               	movf	tablat,w,c
  6062  002462  6E03               	movwf	i2strchr@c,c
  6063  002464  6A04               	clrf	i2strchr@c+1,c
  6064  002466  EC3B  F014         	call	i2_strchr	;wreg free
  6065  00246A  C001  F00C         	movff	?i2_strchr,i2strstr@h
  6066  00246E  C002  F00D         	movff	?i2_strchr+1,i2strstr@h+1
  6067  002472                     i2l3586:
  6068  002472  500C               	movf	i2strstr@h,w,c
  6069  002474  100D               	iorwf	i2strstr@h+1,w,c
  6070  002476  B4D8               	btfsc	status,2,c
  6071  002478  D007               	goto	i2u430_40
  6072  00247A  C00C  FFD9         	movff	i2strstr@h,fsr2l
  6073  00247E  C00D  FFDA         	movff	i2strstr@h+1,fsr2h
  6074  002482  50DF               	movf	indf2,w,c
  6075  002484  A4D8               	btfss	status,2,c
  6076  002486  D7CA               	goto	i2l3578
  6077  002488                     i2u430_40:
  6078  002488  0E00               	movlw	0
  6079  00248A  6E0C               	movwf	?i2_strstr,c
  6080  00248C  0E00               	movlw	0
  6081  00248E  6E0D               	movwf	?i2_strstr+1,c
  6082  002490  0012               	return		;funcret
  6083  002492                     __end_ofi2_strstr:
  6084                           	opt callstack 0
  6085                           
  6086 ;; *************** function i2_strncmp *****************
  6087 ;; Defined at:
  6088 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6091 ;;		 -> NULL(0), RX_buffer(500), 
  6092 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6093 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  6094 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  6095 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  6096 ;;  n               2    4[COMRAM] unsigned int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
  6099 ;;		 -> STR_24(12), STR_23(12), STR_20(10), STR_19(10), 
  6100 ;;		 -> STR_17(5), STR_15(12), STR_13(4), STR_12(10), 
  6101 ;;		 -> STR_10(4), STR_7(4), STR_3(4), NULL(0), 
  6102 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
  6103 ;;		 -> NULL(0), RX_buffer(500), 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2    0[COMRAM] int 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6113 ;;      Params:         6       0       0       0       0       0       0       0       0
  6114 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6115 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6116 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6117 ;;Total ram usage:       11 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		i2_strstr
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text36
  6127  00218E                     __ptext36:
  6128                           	opt callstack 0
  6129  00218E                     i2_strncmp:
  6130                           	opt callstack 19
  6131                           
  6132                           ;incstack = 0
  6133  00218E  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
  6134  002192  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
  6135  002196  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
  6136  00219A  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
  6137  00219E  0605               	decf	i2strncmp@n,f,c
  6138  0021A0  A0D8               	btfss	status,0,c
  6139  0021A2  0606               	decf	i2strncmp@n+1,f,c
  6140  0021A4  2805               	incf	i2strncmp@n,w,c
  6141  0021A6  E10F               	bnz	i2l2656
  6142  0021A8  2806               	incf	i2strncmp@n+1,w,c
  6143  0021AA  A4D8               	btfss	status,2,c
  6144  0021AC  D00C               	goto	i2l2656
  6145  0021AE  0E00               	movlw	0
  6146  0021B0  6E02               	movwf	?i2_strncmp+1,c
  6147  0021B2  0E00               	movlw	0
  6148  0021B4  6E01               	movwf	?i2_strncmp,c
  6149  0021B6  0012               	return	
  6150  0021B8                     i2l2654:
  6151  0021B8  4A08               	infsnz	i2strncmp@l,f,c
  6152  0021BA  2A09               	incf	i2strncmp@l+1,f,c
  6153  0021BC  4A0A               	infsnz	i2strncmp@r,f,c
  6154  0021BE  2A0B               	incf	i2strncmp@r+1,f,c
  6155  0021C0  0605               	decf	i2strncmp@n,f,c
  6156  0021C2  A0D8               	btfss	status,0,c
  6157  0021C4  0606               	decf	i2strncmp@n+1,f,c
  6158  0021C6                     i2l2656:
  6159  0021C6  C008  FFD9         	movff	i2strncmp@l,fsr2l
  6160  0021CA  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
  6161  0021CE  50DF               	movf	indf2,w,c
  6162  0021D0  B4D8               	btfsc	status,2,c
  6163  0021D2  D01C               	goto	i2u281_40
  6164  0021D4  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  6165  0021D8  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  6166  0021DC                     	if	0	;tblptru may be non-zero
  6167  0021DC                     	endif
  6168  0021DC                     	if	0	;tblptru may be non-zero
  6169  0021DC                     	endif
  6170  0021DC  0008               	tblrd		*
  6171  0021DE  50F5               	movf	tablat,w,c
  6172  0021E0  0900               	iorlw	0
  6173  0021E2  B4D8               	btfsc	status,2,c
  6174  0021E4  D013               	goto	i2u281_40
  6175  0021E6  5005               	movf	i2strncmp@n,w,c
  6176  0021E8  1006               	iorwf	i2strncmp@n+1,w,c
  6177  0021EA  B4D8               	btfsc	status,2,c
  6178  0021EC  D00F               	goto	i2u281_40
  6179  0021EE  C008  FFD9         	movff	i2strncmp@l,fsr2l
  6180  0021F2  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
  6181  0021F6  50DF               	movf	indf2,w,c
  6182  0021F8  6E07               	movwf	??i2_strncmp& (0+255),c
  6183  0021FA  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  6184  0021FE  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  6185  002202                     	if	0	;tblptru may be non-zero
  6186  002202                     	endif
  6187  002202                     	if	0	;tblptru may be non-zero
  6188  002202                     	endif
  6189  002202  0008               	tblrd		*
  6190  002204  50F5               	movf	tablat,w,c
  6191  002206  1807               	xorwf	??i2_strncmp,w,c
  6192  002208  B4D8               	btfsc	status,2,c
  6193  00220A  D7D6               	goto	i2l2654
  6194  00220C                     i2u281_40:
  6195  00220C  C008  FFD9         	movff	i2strncmp@l,fsr2l
  6196  002210  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
  6197  002214  50DF               	movf	indf2,w,c
  6198  002216  6E07               	movwf	??i2_strncmp& (0+255),c
  6199  002218  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  6200  00221C  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  6201  002220                     	if	0	;tblptru may be non-zero
  6202  002220                     	endif
  6203  002220                     	if	0	;tblptru may be non-zero
  6204  002220                     	endif
  6205  002220  0008               	tblrd		*
  6206  002222  50F5               	movf	tablat,w,c
  6207  002224  5C07               	subwf	??i2_strncmp,w,c
  6208  002226  6E01               	movwf	?i2_strncmp,c
  6209  002228  6A02               	clrf	?i2_strncmp+1,c
  6210  00222A  A0D8               	btfss	status,0,c
  6211  00222C  0602               	decf	?i2_strncmp+1,f,c
  6212  00222E  0012               	return		;funcret
  6213  002230                     __end_ofi2_strncmp:
  6214                           	opt callstack 0
  6215                           
  6216 ;; *************** function i2_strlen *****************
  6217 ;; Defined at:
  6218 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6221 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1087(50), 
  6222 ;;		 -> name(50), STR_25(12), STR_24(12), STR_23(12), 
  6223 ;;		 -> packetHandler@answer_1080(50), STR_21(10), STR_20(10), STR_19(10), 
  6224 ;;		 -> packetHandler@answer(20), STR_17(5), STR_16(16), STR_15(12), 
  6225 ;;		 -> STR_14(7), STR_13(4), STR_12(10), STR_11(5), 
  6226 ;;		 -> STR_10(4), STR_9(2), STR_8(4), STR_7(4), 
  6227 ;;		 -> STR_6(7), STR_5(2), STR_4(3), STR_3(4), 
  6228 ;;		 -> STR_2(4), STR_1(7), NULL(0), RX_buffer(500), 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  6231 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), packetHandler@answer_1087(50), 
  6232 ;;		 -> name(50), STR_25(12), STR_24(12), STR_23(12), 
  6233 ;;		 -> packetHandler@answer_1080(50), STR_21(10), STR_20(10), STR_19(10), 
  6234 ;;		 -> packetHandler@answer(20), STR_17(5), STR_16(16), STR_15(12), 
  6235 ;;		 -> STR_14(7), STR_13(4), STR_12(10), STR_11(5), 
  6236 ;;		 -> STR_10(4), STR_9(2), STR_8(4), STR_7(4), 
  6237 ;;		 -> STR_6(7), STR_5(2), STR_4(3), STR_3(4), 
  6238 ;;		 -> STR_2(4), STR_1(7), NULL(0), RX_buffer(500), 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  2    0[COMRAM] unsigned int 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6248 ;;      Params:         2       0       0       0       0       0       0       0       0
  6249 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6251 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6252 ;;Total ram usage:        4 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		i2_strstr
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text37
  6262  002788                     __ptext37:
  6263                           	opt callstack 0
  6264  002788                     i2_strlen:
  6265                           	opt callstack 19
  6266                           
  6267                           ;incstack = 0
  6268  002788  C001  F003         	movff	i2strlen@s,i2strlen@a
  6269  00278C  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6270  002790  D002               	goto	i2l3456
  6271  002792                     i2l3454:
  6272  002792  4A01               	infsnz	i2strlen@s,f,c
  6273  002794  2A02               	incf	i2strlen@s+1,f,c
  6274  002796                     i2l3456:
  6275  002796  C001  FFF6         	movff	i2strlen@s,tblptrl
  6276  00279A  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  6277  00279E  6AF8               	clrf	tblptru,c
  6278  0027A0  0E07               	movlw	(high __ramtop+-1)
  6279  0027A2  64F7               	cpfsgt	tblptrh,c
  6280  0027A4  D003               	bra	i2u420_47
  6281  0027A6  0008               	tblrd		*
  6282  0027A8  50F5               	movf	tablat,w,c
  6283  0027AA  D005               	bra	i2u420_40
  6284  0027AC                     i2u420_47:
  6285  0027AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6286  0027B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6287  0027B4  50E7               	movf	indf1,w,c
  6288  0027B6                     i2u420_40:
  6289  0027B6  0900               	iorlw	0
  6290  0027B8  A4D8               	btfss	status,2,c
  6291  0027BA  D7EB               	goto	i2l3454
  6292  0027BC  5003               	movf	i2strlen@a,w,c
  6293  0027BE  5C01               	subwf	i2strlen@s,w,c
  6294  0027C0  6E01               	movwf	?i2_strlen,c
  6295  0027C2  5004               	movf	i2strlen@a+1,w,c
  6296  0027C4  5802               	subwfb	i2strlen@s+1,w,c
  6297  0027C6  6E02               	movwf	?i2_strlen+1,c
  6298  0027C8  0012               	return		;funcret
  6299  0027CA                     __end_ofi2_strlen:
  6300                           	opt callstack 0
  6301                           
  6302 ;; *************** function i2_strchr *****************
  6303 ;; Defined at:
  6304 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strchr.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6307 ;;		 -> NULL(0), RX_buffer(500), 
  6308 ;;  c               2    2[COMRAM] int 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2    0[COMRAM] PTR unsigned char 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         4       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6323 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        5 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		i2_strstr
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text38
  6334  002876                     __ptext38:
  6335                           	opt callstack 0
  6336  002876                     i2_strchr:
  6337                           	opt callstack 19
  6338                           
  6339                           ;incstack = 0
  6340  002876  C001  FFD9         	movff	i2strchr@s,fsr2l
  6341  00287A  C002  FFDA         	movff	i2strchr@s+1,fsr2h
  6342  00287E  5003               	movf	i2strchr@c,w,c
  6343  002880  18DE               	xorwf	postinc2,w,c
  6344  002882  A4D8               	btfss	status,2,c
  6345  002884  D005               	goto	i2l2642
  6346  002886  C001  F001         	movff	i2strchr@s,?i2_strchr
  6347  00288A  C002  F002         	movff	i2strchr@s+1,?i2_strchr+1
  6348  00288E  0012               	return	
  6349  002890                     i2l2642:
  6350  002890  C001  FFD9         	movff	i2strchr@s,fsr2l
  6351  002894  C002  FFDA         	movff	i2strchr@s+1,fsr2h
  6352  002898  4A01               	infsnz	i2strchr@s,f,c
  6353  00289A  2A02               	incf	i2strchr@s+1,f,c
  6354  00289C  50DF               	movf	indf2,w,c
  6355  00289E  A4D8               	btfss	status,2,c
  6356  0028A0  D7EA               	goto	i2_strchr
  6357  0028A2  0E00               	movlw	0
  6358  0028A4  6E01               	movwf	?i2_strchr,c
  6359  0028A6  0E00               	movlw	0
  6360  0028A8  6E02               	movwf	?i2_strchr+1,c
  6361  0028AA  0012               	return		;funcret
  6362  0028AC                     __end_ofi2_strchr:
  6363                           	opt callstack 0
  6364                           
  6365                           	psect	rparam
  6366  0000                     
  6367                           	psect	temp
  6368  000046                     btemp:
  6369                           	opt callstack 0
  6370  000046                     	ds	1
  6371  0000                     int$flags	set	btemp
  6372  0000                     wtemp8	set	btemp+1
  6373  0000                     ttemp5	set	btemp+1
  6374  0000                     ttemp6	set	btemp+4
  6375  0000                     ttemp7	set	btemp+8
  6376                           tosu	equ	0xFFF
  6377                           tosh	equ	0xFFE
  6378                           tosl	equ	0xFFD
  6379                           stkptr	equ	0xFFC
  6380                           pclatu	equ	0xFFB
  6381                           pclath	equ	0xFFA
  6382                           pcl	equ	0xFF9
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           indf0	equ	0xFEF
  6390                           postinc0	equ	0xFEE
  6391                           postdec0	equ	0xFED
  6392                           preinc0	equ	0xFEC
  6393                           plusw0	equ	0xFEB
  6394                           fsr0h	equ	0xFEA
  6395                           fsr0l	equ	0xFE9
  6396                           wreg	equ	0xFE8
  6397                           indf1	equ	0xFE7
  6398                           postinc1	equ	0xFE6
  6399                           postdec1	equ	0xFE5
  6400                           preinc1	equ	0xFE4
  6401                           plusw1	equ	0xFE3
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           bsr	equ	0xFE0
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           preinc2	equ	0xFDC
  6409                           plusw2	equ	0xFDB
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8


Data Sizes:
    Strings     180
    Constant    0
    Data        58
    BSS         550
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      69
    BANK0           160     74     160
    BANK1           256    151     151
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[12]), STR_23(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> STR_17(CODE[5]), STR_15(CODE[12]), STR_13(CODE[4]), STR_12(CODE[10]), 
		 -> STR_10(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[12]), STR_23(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> STR_17(CODE[5]), STR_15(CODE[12]), STR_13(CODE[4]), STR_12(CODE[10]), 
		 -> STR_10(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), NULL(NULL[0]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> packetHandler@end(BANK1[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> packetHandler@end(BANK1[2]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_24(CODE[12]), STR_23(CODE[12]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> STR_17(CODE[5]), STR_15(CODE[12]), STR_13(CODE[4]), STR_12(CODE[10]), 
		 -> STR_10(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 500
		 -> ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK0[32]), packetHandler@answer_1087(BANK1[50]), 
		 -> name(BANK0[50]), STR_25(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> packetHandler@answer_1080(BANK1[50]), STR_21(CODE[10]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> packetHandler@answer(BANK1[20]), STR_17(CODE[5]), STR_16(CODE[16]), STR_15(CODE[12]), 
		 -> STR_14(CODE[7]), STR_13(CODE[4]), STR_12(CODE[10]), STR_11(CODE[5]), 
		 -> STR_10(CODE[4]), STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[7]), STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[7]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 500
		 -> ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK0[32]), packetHandler@answer_1087(BANK1[50]), 
		 -> name(BANK0[50]), STR_25(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> packetHandler@answer_1080(BANK1[50]), STR_21(CODE[10]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> packetHandler@answer(BANK1[20]), STR_17(CODE[5]), STR_16(CODE[16]), STR_15(CODE[12]), 
		 -> STR_14(CODE[7]), STR_13(CODE[4]), STR_12(CODE[10]), STR_11(CODE[5]), 
		 -> STR_10(CODE[4]), STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[7]), STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[7]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_27(CODE[20]), STR_26(CODE[5]), STR_22(CODE[16]), STR_18(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1087(BANK1[50]), name(BANK0[50]), packetHandler@answer_1080(BANK1[50]), packetHandler@answer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1087(BANK1[50]), name(BANK0[50]), packetHandler@answer_1080(BANK1[50]), packetHandler@answer(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1612_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1087(BANK1[50]), name(BANK0[50]), packetHandler@answer_1080(BANK1[50]), packetHandler@answer(BANK1[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> packetHandler@answer_1087(BANK1[50]), name(BANK0[50]), packetHandler@answer_1080(BANK1[50]), packetHandler@answer(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    memset@dest	PTR void  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    memset@s	PTR unsigned char  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_27(CODE[20]), STR_26(CODE[5]), STR_22(CODE[16]), STR_18(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_27(CODE[20]), STR_26(CODE[5]), STR_22(CODE[16]), STR_18(CODE[23]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    packetHandler@txt	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    packetHandler@end	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    packetHandler@pos	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    sp__memset	PTR void  size(2) Largest target is 500
		 -> RX_buffer(BIGRAM[500]), 

    RN4870_changeName@name	PTR unsigned char  size(2) Largest target is 50
		 -> name(BANK0[50]), 

    UART_Write_String@buffer	PTR unsigned char  size(2) Largest target is 500
		 -> packetHandler@answer_1087(BANK1[50]), name(BANK0[50]), packetHandler@answer_1080(BANK1[50]), packetHandler@answer(BANK1[20]), 
		 -> STR_16(CODE[16]), STR_14(CODE[7]), STR_12(CODE[10]), STR_11(CODE[5]), 
		 -> STR_10(CODE[4]), STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[7]), STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[7]), NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 500
		 -> NULL(NULL[0]), RX_buffer(BIGRAM[500]), 

    expected	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[10]), STR_10(CODE[4]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _strtol->___strtoxl
    ___strtoxl->_toupper
    _toupper->_islower
    _strstr->_strncmp
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _memset->_strlen
    _RN4870_changeName->_UART_Write_String
    _UART_Write_String->_strlen

Critical Paths under _high_ISR in COMRAM

    _high_ISR->i2_strstr
    i2_strstr->i2_strncmp

Critical Paths under _main in BANK0

    _main->_packetHandler
    _strtol->___strtoxl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_packetHandler
    _packetHandler->_sprintf

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34415
                                            148 BANK1      3     3      0
                  _SYSTEM_Initialize
                          _UART_Init
                  _UART_Write_String
                      _packetHandler
 ---------------------------------------------------------------------------------
 (1) _packetHandler                                      132   130      2   31744
                                             72 BANK0      2     0      2
                                             18 BANK1    130   130      0
                  _RN4870_changeName
                  _UART_Write_String
                             _memset
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    4148
                                             29 BANK0      6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           36    29      7    3785
                                             39 COMRAM     7     0      7
                                              0 BANK0     29    29      0
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              8     6      2     512
                                             31 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              6     4      2     191
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _isspace                                              7     5      2     259
                                             25 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     191
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     191
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             25 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    3615
                                             36 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6     595
                                             25 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     304
                                             25 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   15015
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13983
                                             64 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           41    35      6   13501
                                             46 BANK0     18    12      6
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    3455
                                             34 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7573
                                             10 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5307
                                             41 COMRAM     5     5      0
                                              0 BANK0      6     0      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             34 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1577
                                             25 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             43 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             25 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             25 COMRAM    16     0     16
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2097
                                             29 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _RN4870_changeName                                    3     1      2    2786
                                             37 COMRAM     3     1      2
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    8     6      2    2665
                                             29 COMRAM     8     6      2
                         _UART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1030
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_ISR                                            8     8      0     994
                                             17 COMRAM     8     8      0
                           i2_strstr
 ---------------------------------------------------------------------------------
 (11) i2_strstr                                            6     2      4     994
                                             11 COMRAM     6     2      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (12) i2_strncmp                                          11     5      6     303
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_strchr                                            5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _UART_Init
   _UART_Write_String
     _UART_Write
     _strlen
   _packetHandler
     _RN4870_changeName
       _UART_Write_String
         _UART_Write
         _strlen
     _UART_Write_String
       _UART_Write
       _strlen
     _memset
       _strlen (ARG)
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _stoa
             _fputc
               _putch
             _strlen
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
     _strtol
       ___strtoxl
         ___lmul
         _isalpha
         _isdigit
         _isspace
         _toupper
           _islower

 _high_ISR (ROOT)
   i2_strstr
     i2_strchr
     i2_strlen
     i2_strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     1F4      21       24.4%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     97      97       8       59.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      45       1       73.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17C       6        0.0%
DATA                 0      0     370       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 22 17:58:49 2021

                             _ID 00DE          UART_Write_String@buffer 001E  
                             _og 0045                               _ix 0037  
     __size_of_UART_Write_String 0068                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_LVP$ON 000000  
                            l220 1540                              l207 2300  
                            l218 1538                              l247 1CEE  
                            l175 193A                              l954 290A  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _abs 28E0                              _pad 22D0  
                            wreg 000FE8                       _TXSTA1bits 000FAC  
                   __CFG_CPUDIV$ 000002                             ?_abs 002C  
                           l1132 273C                             l1061 12E2  
                           l1062 1310                             l3012 16C8  
                           l1068 1318                             l3016 16E0  
                           l3104 1AE0                             l3042 1D1E  
                           l3114 1B06                             l3060 1D98  
                           l3052 1D64                             l3028 1CB0  
                           l3108 1AEC                             l3124 260C  
                           l3140 2800                             l3046 1D3C  
                           l3038 1D04                             l3206 285A  
                           l3222 11E8                             l3056 1D7E  
                           l3128 2620                             l3232 122A  
                           l3066 2A3A                             l3170 25E6  
                           l3090 1A36                             l3330 14A2  
                           l3314 145A                             l3250 126A  
                           l3420 1E5E                             l3332 14B2  
                           l3244 1250                             l3324 148C  
                           l3166 25B2                             l3414 1DFA  
                           l3350 2388                             l3318 1470  
                           l3246 1262                             l3176 2666  
                           l3280 12FE                             l3272 12D2  
                           l3504 176E                             l3434 1EDE  
                           l3426 1E96                             l3098 1AA4  
                           l3178 268C                             l3186 2116  
                           l3290 1378                             l3266 12BE  
                           l3372 2026                             l3380 207A  
                           l3428 1EC8                             l2900 1BCA  
                           l3188 2124                             l3356 23B6  
                           l2910 1C26                             l3358 23DE  
                           l3518 1798                             l3392 20C6  
                           l3536 17E0                             l3632 24D4  
                           l3386 2094                             l2914 1C3C  
                           l2930 1F14                             l2826 2248  
                           l2850 2828                             l3298 13B0  
                           l2836 2750                             l2940 1F66  
                           l2860 22F8                             l3556 187C  
                           l2838 2754                             l3398 20E0  
                           l2918 1C62                             l2950 1FC4  
                           l2934 1F38                             l2846 2812  
                           l2870 234E                             l2862 230A  
                           l3494 1732                             ?_pad 0060  
                           l2856 22E8                             l2954 1FEA  
                           l2946 1FAE                             l2938 1F52  
                           l2866 2322                             l3498 1762  
                           l2892 1B90                             l2964 151C  
                           l2886 1B68                             l2982 1568  
                           l2992 1662                             l2898 1BB6  
                           l2978 155A                             STR_1 117F  
                           STR_2 119C                             STR_3 11A4  
                           STR_4 11B0                             STR_5 11B3  
                           STR_6 1186                             STR_7 11A8  
                           STR_8 11A0                             STR_9 118B  
                           _LATA 000F89                             u3110 1BCE  
                           _LATB 000F8A                             _LATC 000F8B  
                           u3200 14EE                             u3210 14F0  
                           u3060 28EE                             u3300 16A2  
                           u3310 16A6                             u3240 152E  
                           u3400 1D32                             u3170 1F6A  
                           u3330 16B2                             u3091 1B96  
                           u3260 1554                             u3270 1672  
                           u3430 1DAC                             u4070 23F4  
                           u3351 1C8E                             u4080 202E  
                           u3440 29A0                             u3290 1694  
                           u3610 29D0                             u3450 29A2  
                           u3291 1692                             u3700 216A  
                           u3620 29D2                             u3630 25DE  
                           u4086 2030                             u3550 27FC  
                           u3560 28D8                             u3490 19B6  
                           u3570 28DA                             u3580 2724  
                           u3900 1358                             u3820 1294  
                           u3637 25D4                             u4357 24B0  
                           u3590 2726                             u4367 24EE  
                           u2960 2240                             u3920 139E  
                           u3840 12A4                             u3760 1226  
                           u4377 250A                             u3930 13A0  
                           u4387 1920                             u2980 2288  
                           u4397 2072                             u2990 2774  
                           u3890 1356                             u2997 276A  
                           u3990 143E                             _WPUB 000F85  
                           abs@a 002C                             _dbuf 00E0  
                           _main 2492                             _dtoa 14C4  
                           _name 00AA                             _prec 0033  
                           _nout 00DC                             pad@i 002B  
                           pad@p 0064                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 002D                             fsr2l 000FD9  
                           _stoa 1C84                             btemp 0046  
                  __CFG_BORV$190 000000                             start 109A  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000           __size_of_packetHandler 023C  
                          ??_abs 0060                            ??_pad 002A  
                   _BAUDCON1bits 000FB8   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 2A38                  __end_of___aodiv 1C84  
                          ?_main 0001                            ?_dtoa 006A  
                __end_of___aomod 200C                            STR_10 11A8  
                          STR_11 118D                            STR_20 1164  
                          STR_12 116E                            STR_21 1164  
                          STR_13 11AC                            STR_14 1178  
                          STR_22 113C                            STR_15 1158  
                          STR_23 114C                            STR_24 114C  
                          STR_16 112C                            STR_25 114C  
                          STR_17 1197                            STR_26 1192  
                          STR_18 1101                            STR_19 1164  
                          STR_27 1118                            ?_stoa 0023  
                 __CFG_DEBUG$OFF 000000              packetHandler@answer 0178  
                          i2l129 1076                     vfpfcnvrt@fmt 0090  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
            ___lmul@multiplicand 001E                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
               _UART_RN4870_mode 0044                   __CFG_EBTR3$OFF 000000  
                    ?_UART_Write 0001               __size_of_UART_Init 0024  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _debug 003B                            _flags 0035  
                          _errno 002F                            _fputc 2230  
                __end_of_isalpha 28E0                            _fputs 2808  
                __end_of_isdigit 29D8                            pad@fp 0060  
                          _width 0031                            _putch 2A5A  
                          dtoa@d 006C                            dtoa@i 008C  
                          dtoa@n 0084                            dtoa@p 007E  
                          dtoa@s 0082                            dtoa@w 0080  
                __end_of_islower 29A8                  __end_of_isspace 2808  
                          tablat 000FF5                            plusw1 000FE3  
                          plusw2 000FDB                            stoa@i 0067  
                          stoa@l 006F                            stoa@p 006D  
                          stoa@s 0025                            stoa@w 0069  
                          ttemp5 0047                            ttemp6 004A  
                          ttemp7 004E                            status 000FD8  
                 __CFG_T3CMX$RC0 000000                            wtemp8 0047  
                __end_of_sprintf 26FC                  __end_of_strncmp 218E  
                __end_of_toupper 2746                   __CFG_ICPRT$OFF 000000  
                   _toupper$1782 0026                 __end_ofi2_strchr 28AC  
               __end_ofi2_strlen 27CA                 __end_ofi2_strstr 2492  
                __initialization 251A                     __end_of_main 251A  
                   __end_of_dtoa 170A                     __end_of_stoa 1DB6  
                 __CFG_PCLKEN$ON 000000                           ??_main 0194  
                         ??_dtoa 0074                           ??_stoa 0027  
                  __activetblptr 000002               __size_ofi2_strncmp 00A2  
                 __CFG_SDOMX$RB3 000000                       i2strncmp@l 0008  
                     i2strncmp@n 0005                       i2strncmp@r 000A  
                __CFG_CCP2MX$RC1 000000                    _packetHandler 170A  
                     i2strstr@nl 0010                           ?_fputc 001A  
                         _ACTCON 000FB5                           ?_fputs 0023  
                         _ANSELA 000F5B                           ?_putch 0001  
                         _ANSELB 000F5C                           _ANSELC 000F5D  
                 __CFG_WDTEN$OFF 000000                           i2l2642 2890  
                         i2l3454 2792                           i2l2654 21B8  
                         i2l3456 2796                           i2l2656 21C6  
                         i2l3584 244A                           i2l3578 241C  
                         i2l3586 2472                           _RCREG1 000FAE  
                         _OSCCON 000FD3                           _SPBRG1 000FAF  
                         _TXREG1 000FAD                   __CFG_XINST$OFF 000000  
               __end_of_high_ISR 109A                     ___strtoxl@cp 007A  
                   vfprintf@cfmt 00A6                __end_of_UART_Init 2A26  
                         ___lmul 25FC              __size_of_UART_Write 0010  
                      ??___aodiv 002A                        ??___aomod 002A  
                 __CFG_STVREN$ON 000000                           _memset 1DB6  
               ___strtoxl@endptr 002A                           clear_0 2562  
                         clear_1 2574                           clear_2 2580  
                         pad@buf 0062                           dtoa@fp 006A  
                         _strchr 2840                 ___strtoxl@prev_a 0064  
                         _strlen 2746                           _strtol 2946  
                         _strstr 236A                           fputc@c 001A  
                         fputs@c 0027                           fputs@i 0028  
                   __pdataCOMRAM 003D                           fputs@s 0023  
                      ??_isalpha 001C                        ??_isdigit 001C  
                      ??_islower 001C                     __mediumconst 0000  
                      ??_isspace 001C                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                 ?_packetHandler 00A8                           stoa@cp 006B  
                         stoa@fp 0023                           putch@c 0001  
               __end_of_vfprintf 26A8                        ??_sprintf 002F  
                      ??_strncmp 0020                        ??_toupper 0022  
           __CFG_LS48MHZ$SYS24X4 000000                _SYSTEM_Initialize 2A48  
                     __accesstop 0060          __end_of__initialization 2586  
                __CFG_PBADEN$OFF 000000                _RN4870_changeName 200C  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
              __end_ofi2_strncmp 2230               ?_RN4870_changeName 0026  
                 __pcstackCOMRAM 0001               __size_of___strtoxl 030E  
               __CFG_nPWRTEN$OFF 000000                     __pidataBANK0 2914  
            ??_SYSTEM_Initialize 001A                    __end_of_fputc 22D0  
                  __end_of_fputs 2840              ??_RN4870_changeName 0028  
                  __end_of_putch 2A5C                        ?i2_strchr 0001  
                      ?i2_strlen 0001                        ?i2_strstr 000C  
                        ??_fputc 001E        __end_of_SYSTEM_Initialize 2A52  
                        ??_fputs 0027                          ??_putch 001A  
          RN4870_changeName@name 0026                       __pbssBANK0 00DC  
      __end_of_RN4870_changeName 20EC                       __pnvCOMRAM 0045  
                    i2strncmp@_l 0001                      i2strncmp@_r 0003  
              __CFG_PLLSEL$PLL3X 000000                          ?___lmul 001A  
                        ?_memset 001E                   ___lmul@product 0022  
                        ?_strchr 001A                          ?_strlen 001A  
                        ?_strtol 007D                          ?_strstr 0025  
                ??_packetHandler 0112                          _OSCCON2 000FD2  
                   ??_UART_Write 001A               __size_of_vfpfcnvrt 01F4  
                        _OSCTUNE 000F9B                          _UART_RX 003C  
                     ??i2_strchr 0005                       ??i2_strlen 0003  
              __end_of___strtoxl 14C4                        ?_high_ISR 0001  
                     ??i2_strstr 0010                 __CFG_CFGPLLEN$ON 000000  
                        __Hparam 0000                          __Lparam 0000  
                        ___aodiv 1B3A                          ___aomod 1EE8  
                __size_of___lmul 0056               __end_of_UART_Write 2A48  
                      ?_vfprintf 00A0                     __psmallconst 1100  
                        __pcinit 251A                  __size_of_memset 0132  
                        __ramtop 0800                          __ptext0 2492  
                        __ptext1 170A                          __ptext2 2946  
                        __ptext3 11B6                          __ptext4 26FC  
                        __ptext5 2978                          __ptext6 27CA  
                        __ptext7 29A8                          __ptext8 28AC  
                        __ptext9 25FC                  __size_of_strchr 0036  
                __size_of_strlen 0042                  __size_of_strtol 0032  
                __size_of_strstr 0094            _OSCILLATOR_Initialize 2A26  
                   __size_of_abs 0034                     __size_of_pad 009A  
                        _isalpha 28AC                          _isdigit 29A8  
                        _islower 2978         ??_PIN_MANAGER_Initialize 001A  
                        _isspace 27CA                       ??_high_ISR 0012  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 26A8  
                        _strncmp 20EC                          _toupper 26FC  
           end_of_initialization 2586       __size_of_RN4870_changeName 00E0  
                        fputc@fp 001C                          memset@c 0020  
                        memset@k 0026                          memset@n 0022  
                        memset@s 0028                    __Lmediumconst 0000  
                        fputs@fp 0025                __end_of_vfpfcnvrt 1B3A  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_vfprintf 002F  
                        strchr@c 001C                          strchr@s 001A  
                        strlen@a 001C                          strlen@s 001A  
                      _UART_Init 2A02                          strtol@s 007D  
                        strstr@h 0025                          strstr@n 0027  
                      _PORTCbits 000F82                   UART_Write@data 001A  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                     strtol@endptr 007F  
          UART_Write_String@size 0024                       main@status 0196  
                      i2_strncmp 218E                   __end_of___lmul 2652  
                    vfpfcnvrt@ap 0092                      vfpfcnvrt@cp 009E  
                    vfpfcnvrt@fp 008E                      vfpfcnvrt@ll 0096  
                      _RX_buffer 0197                       ?_UART_Init 0001  
                  __pidataCOMRAM 2A52           ?_OSCILLATOR_Initialize 0001  
                 __end_of_memset 1EE8                   __end_of_strchr 2876  
                 __end_of_strlen 2788                   __end_of_strtol 2978  
                 __end_of_strstr 23FE              start_initialization 251A  
__size_of_PIN_MANAGER_Initialize 002A                      __end_of_abs 2914  
                    __end_of_pad 236A                        i2strchr@c 0003  
                      i2strchr@s 0001                __size_ofi2_strchr 0036  
              __size_ofi2_strlen 0042                        i2strlen@a 0003  
                      i2strlen@s 0001                __size_ofi2_strstr 0094  
                __CFG_nLPBOR$OFF 000000                        i2strstr@h 000C  
                      i2strstr@n 000E                      ___strtoxl@a 0076  
                    ___strtoxl@c 007C                      ___strtoxl@s 0028  
                    vfprintf@fmt 00A2                         ??___lmul 0022  
                ___strtoxl@limit 0070                       ?i2_strncmp 0001  
                    __pdataBANK0 00AA                         ??_memset 0024  
                     memset@dest 001E                         ??_strchr 001E  
                       ??_strlen 001C                         ??_strtol 002F  
                       ??_strstr 0029                      __pbssBIGRAM 0197  
                    __pbssCOMRAM 002F                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                 ___aodiv@dividend 001A  
              __size_of_high_ISR 0092                        ___strtoxl 11B6  
         _PIN_MANAGER_Initialize 29D8                        _dtoa$1133 007C  
                      __pintcode 1008                         ?___aodiv 001A  
                       ?___aomod 001A                 ___aodiv@quotient 0062  
                    ??_UART_Init 001A                __size_of_vfprintf 0056  
                    __smallconst 1100                         ?_isalpha 001A  
                       ?_isdigit 001A                         ?_islower 001A  
                       ?_isspace 001A            __end_of_packetHandler 1946  
                       ?_sprintf 0100                   __size_of_fputc 00A0  
                 __size_of_fputs 0038                         ?_strncmp 001A  
                       ?_toupper 0020                   __size_of_putch 0002  
            ___strtoxl@conv_done 006F                       ?___strtoxl 0028  
                       _LATAbits 000F89                         _LATBbits 000F8A  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       i2u420_40 27B6                         i2u420_47 27AC  
                       i2u430_40 2488                         i2u281_40 220C  
                       _PIR1bits 000F9E              ___strtoxl@is_signed 002E  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                    ??i2_strncmp 0007                        _vfpfcnvrt 1946  
                   _isspace$1758 0020                         i2_strchr 2876  
                       i2_strlen 2788                         i2_strstr 23FE  
              ___lmul@multiplier 001A                      _INTCON2bits 000FF1  
                      copy_data0 252E                        copy_data1 254E  
                 ___strtoxl$1730 006E                   ___strtoxl$1731 006A  
                 ___strtoxl$1732 006C                   ___strtoxl$1729 0068  
                       __Hrparam 0000                       vfprintf@ap 00A4  
                       __Lrparam 0000                       vfprintf@fp 00A0  
             __CFG_BOREN$SBORDIS 000000                   ___strtoxl@base 002C  
                 ___strtoxl@sign 0074                   ___strtoxl@skip 0075  
        ??_OSCILLATOR_Initialize 001A                 __size_of___aodiv 014A  
               __size_of___aomod 0124                       ?_vfpfcnvrt 008E  
                ___aodiv@divisor 0022                  ___aodiv@counter 0060  
              _UART_Write_String 2594                       sprintf@fmt 0102  
               __size_of_isalpha 0034                 __size_of_isdigit 0030  
             ?_UART_Write_String 001E                 __size_of_islower 0030  
               __size_of_isspace 003E                         __ptext10 236A  
                       __ptext11 20EC                         __ptext20 2230  
                       __ptext12 2840                         __ptext21 2A5A  
                       __ptext13 26A8                         __ptext30 2A02  
                       __ptext22 28E0                         __ptext14 2652  
                       __ptext31 2A48                         __ptext23 1EE8  
                       __ptext15 1946                         __ptext32 29D8  
                       __ptext24 1B3A                         __ptext16 1C84  
                       __ptext33 2A26                         __ptext25 1DB6  
                       __ptext17 14C4                         __ptext26 200C  
                       __ptext18 22D0                         __ptext35 23FE  
                       __ptext27 2594                         __ptext19 2808  
                       __ptext36 218E                         __ptext28 2746  
                       __ptext37 2788                         __ptext29 2A38  
                       __ptext38 2876                         _high_ISR 1008  
               __size_of_sprintf 0054                 __size_of_strncmp 00A2  
               __size_of_toupper 004A              ??_UART_Write_String 0020  
                    ??___strtoxl 0060                    __size_of_main 0088  
                  __size_of_dtoa 0246                    __size_of_stoa 0132  
                       _expected 0039                        stoa@F1139 003D  
                       int$flags 0046                       strtol@base 0081  
       packetHandler@answer_1080 0114         packetHandler@answer_1087 0146  
                       _vfprintf 2652        __end_of_UART_Write_String 25FC  
               packetHandler@end 0192                 packetHandler@pos 018E  
               ___aomod@dividend 001A                 packetHandler@txt 0190  
                     _INTCONbits 000FF2                         isalpha@c 001A  
                       isdigit@c 001A                         intlevel2 0000  
                      sprintf@ap 010A                         islower@c 001A  
                       isspace@c 001A          ?_PIN_MANAGER_Initialize 0001  
                     _RCSTA1bits 000FAB                        strncmp@_l 001A  
                      strncmp@_r 001C               UART_Write_String@i 0022  
                ___aomod@divisor 0022                      ??_vfpfcnvrt 0094  
                       stoa@nuls 0060                  ___aomod@counter 002A  
                       sprintf@f 010C                         sprintf@s 0100  
                       strncmp@l 0021                         strncmp@n 001E  
                       strncmp@r 0023                         toupper@c 0020  
                     _UART_Write 2A38                         strstr@nl 0029  
             __CFG_FOSC$INTOSCIO 000000                     ___aodiv@sign 0061  
 __end_of_PIN_MANAGER_Initialize 2A02                     ___aomod@sign 002B  
